#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>

// Layer aliases
// So, apparently the C preprocessor just straight-up runs, so we can do shit like this
#define DEFAULT 0
#define GAMING 1
#define LOWER 2
#define MAGIC 3

/ {
    /* Glove80 system behavior & macros */
    behaviors {
        // For the "layer" key, it'd nice to be able to use it as either a shift or a toggle.
        // Configure it as a tap dance, so the first tap (or hold) is a &mo and the second tap is a &to
        lower: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYER_TAP_DANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo LOWER>, <&to LOWER>;
        };
        // Tap dance keys for left/right parentheses
        lp_td: l_paren_td {
            compatible = "zmk,behavior-tap-dance";
            label = "L_PAREN_TAP_DANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp MINUS>, <&kp LPAR>;
        };
        rp_td: r_paren_td {
            compatible = "zmk,behavior-tap-dance";
            label = "R_PAREN_TAP_DANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp PG_UP>, <&kp RPAR>;
        };
        // Shift mod-tap
        smt: shift_mod_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "SHIFT_MOD_TAP";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <150>;
            quick-tap-ms = <125>;
            bindings = <&kp>, <&kp>;
            retro-tap;
        };
        // Homerow mods 
        hrm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <175>;
            quick-tap-ms = <125>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
        rgb_ug_status_macro: rgb_ug_status_macro_0 {
            label = "RGB_UG_STATUS";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&rgb_ug RGB_STATUS>;
        };

        bt_0: bt_profile_macro_0 {
            label = "BT_0";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 0>;
        };

        bt_1: bt_profile_macro_1 {
            label = "BT_1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 1>;
        };

        bt_2: bt_profile_macro_2 {
            label = "BT_2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 2>;
        };

        bt_3: bt_profile_macro_3 {
            label = "BT_3";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 3>;
        };
    };

    magic: magic_hold_tap {
        compatible = "zmk,behavior-hold-tap";
        label = "MAGIC_HOLD_TAP";
        #binding-cells = <2>;
        flavor = "tap-preferred";
        tapping-term-ms = <200>;
        bindings = <&mo>, <&rgb_ug_status_macro>;
    };

    keymap {
        compatible = "zmk,keymap";

        layer_base {
            bindings = <
&kp F1         &kp F2   &kp F3      &kp F4      &kp F5                                                                                          &kp F6       &kp F7      &kp F8      &kp F9   &kp F10
&kp GRAVE      &kp N1   &kp N2      &kp N3      &kp N4       &kp N5                                                                      &kp N6 &kp N7       &kp N8      &kp N9      &kp N0   &kp EQUAL
&kp TAB        &kp Q    &kp W       &kp F       &kp P        &kp B                                                                       &kp J  &kp L        &kp U       &kp Y       &kp SEMI &kp BSLH
&kp ESC        &kp A    &hrm LALT R &hrm LGUI S &hrm LCTRL T &kp G                                                                       &kp M  &hrm RCTRL N &hrm RGUI E &hrm LALT I &kp O    &kp SQT
&lp_td         &kp Z    &kp X       &kp C       &kp D        &kp V  &kp  LCTRL      &kp LGUI &lower   &kp F13  &kp RGUI &kp RCTRL        &kp K  &kp H        &kp COMMA   &kp DOT     &kp FSLH &rp_td
&magic MAGIC 0 &kp HOME &kp END     &kp LEFT    &kp RIGHT           &smt LSHFT BSPC &kp DEL  &kp LALT &kp RALT &kp RET  &smt RSHFT SPACE        &kp DOWN     &kp UP      &kp LBKT    &kp RBKT &kp PG_DN
            >;
        };

        layer_gaming {
            bindings = <
&kp F1         &kp F2   &kp F3  &kp F4   &kp F5                                                                            &kp F6 &kp F7    &kp F8   &kp F9   &kp F10
&kp EQUAL      &kp N1   &kp N2  &kp N3   &kp N4    &kp N5                                                           &kp N6 &kp N7 &kp N8    &kp N9   &kp N0   &kp MINUS
&kp TAB        &kp Q    &kp W   &kp E    &kp R     &kp T                                                            &kp Y  &kp U  &kp I     &kp O    &kp P    &kp BSLH
&kp CAPS       &kp A    &kp S   &kp D    &kp F     &kp G                                                            &kp H  &kp J  &kp K     &kp L    &kp SEMI &kp SQT
&kp GRAVE      &kp Z    &kp X   &kp C    &kp V     &kp B  &kp LSHFT &kp LCTRL &lower   &kp LGUI &kp RCTRL &kp RSHFT &kp N  &kp M  &kp COMMA &kp DOT  &kp FSLH &kp PG_UP
&kp ESC        &kp HOME &kp END &kp LEFT &kp RIGHT        &kp SPACE &kp DEL   &kp LALT &kp RALT &kp RET   &kp BSPC  &kp UP &kp DOWN  &kp LBKT &kp RBKT &kp PG_DN
            >;
        };
        
        layer_lower {
            bindings = < 
&kp C_BRI_DN   &kp C_BRI_UP &kp C_PREV     &kp C_NEXT     &kp C_PP                                                                                  &kp C_MUTE &kp C_VOL_DN &kp C_VOL_UP &none           &kp PAUSE_BREAK
&trans         &none        &none          &none          &none           &kp HOME                                            &kp LEFT_PARENTHESIS  &kp KP_NUM &kp KP_EQUAL &kp KP_SLASH &kp KP_MULTIPLY &kp PRINTSCREEN
&trans         &to GAMING   &to DEFAULT    &kp UP_ARROW   &none           &kp END                                             &kp RIGHT_PARENTHESIS &kp KP_N7  &kp KP_N8    &kp KP_N9    &kp KP_MINUS    &kp SCROLLLOCK
&trans         &none        &kp LEFT_ARROW &kp DOWN_ARROW &kp RIGHT_ARROW &kp PG_UP                                           &kp PERCENT           &kp KP_N4  &kp KP_N5    &kp KP_N6    &kp KP_PLUS     &none
&trans         &kp K_APP    &none          &kp F11        &kp F12         &kp PG_DN &trans &trans &to 0  &trans &trans &trans &kp COMMA             &kp KP_N1  &kp KP_N2    &kp KP_N3    &kp KP_ENTER    &trans
&magic MAGIC 0 &kp CAPS     &kp INS        &kp F11        &kp F12                   &trans &trans &trans &trans &trans &trans                       &kp KP_N0  &kp KP_N0    &kp KP_DOT   &kp KP_ENTER    &trans
            >;
        };

        layer_magic {
            bindings = <
 &bt BT_CLR  &none           &none           &none           &none                                                                            &none &none &none &none &bt BT_CLR_ALL
 &none       &none           &none           &none           &none           &none                                                      &none &none &none &none &none &none
 &none       &rgb_ug RGB_SPI &rgb_ug RGB_SAI &rgb_ug RGB_HUI &rgb_ug RGB_BRI &rgb_ug RGB_TOG                                            &none &none &none &none &none &none
 &bootloader &rgb_ug RGB_SPD &rgb_ug RGB_SAD &rgb_ug RGB_HUD &rgb_ug RGB_BRD &rgb_ug RGB_EFF                                            &none &none &none &none &none &bootloader
 &sys_reset  &none           &none           &none           &none           &none           &bt_2 &bt_3 &none        &none &none &none &none &none &none &none &none &sys_reset
 &none       &none           &none           &none           &none                           &bt_0 &bt_1 &out OUT_USB &none &none &none       &none &none &none &none &none
            >;
        };
    };
};
