{
  "keyboard": "glove80",
  "firmware_api_version": "1",
  "locale": "en-US",
  "uuid": "7cf03288-20db-42e0-9b80-4ace1c2fdbde",
  "parent_uuid": "41643446-1c3a-43c9-80c9-47147d660c97",
  "unlisted": false,
  "date": 1761750334,
  "creator": "sunaku",
  "title": "Glorious Engrammer v42-rc6 (preview)",
  "notes": "Sunaku's Keymap v42-rc6 for the \"Glorious Engrammer\" 🧑‍🚀🚀✨\n- Intro & setup: https://github.com/sunaku/glove80-keymaps/tree/v42-rc6/#readme\n- Release notes: https://github.com/sunaku/glove80-keymaps/releases/tag/v42-rc6\n- Printable map: https://github.com/sunaku/glove80-keymaps/raw/v42-rc6/README/all-layer-diagrams.pdf\n- Documentation: https://sunaku.github.io/moergo-glove80-keyboard.html#layers\n- Discord forum: **#glorious-engrammer** channel in https://www.moergo.com/discord",
  "tags": [
    "sunaku",
    "home-row-mods",
    "rgb",
    "mouse-layer",
    "gaming-layer",
    "symbol-layer",
    "programming",
    "vim",
    "unicode",
    "emoji",
    "enthium",
    "engram",
    "dvorak",
    "colemak",
    "qwerty",
    "colemak-dh"
  ],
  "custom_defined_behaviors": "// NOTE: Use the many #define settings below to customize this keymap!\n#define OPERATING_SYSTEM 'L' // choose 'L'inux, 'M'acOS, or 'W'indows\n#define DIFFICULTY_LEVEL  0  // 0:custom, 1:easy -> 5:hard (see below)\n#define ENFORCE_BILATERAL    // cancels single-handed home row mod+tap\n//#define SPACE_FORGIVENESS  // allow lingering taps on the space bar\n//#define THUMB_FORGIVENESS  // allow lingering taps on the thumb keys\n//#define SHIFT_FORGIVENESS  // requires v24.08-beta or newer firmware\n//#define ENABLE_MOUSE_KEYS  // requires HID_POINTING override to \"y\"\n//#define NATURAL_SCROLLING  // supports \"natural scrolling\" in macOS\n//#define WORLD_USE_COMPOSE  // use native Compose in place of Unicode\n//#define WORLD_HOST_AZERTY  // host computer is set to AZERTY locale\n//#define WORLD_SHIFT_NUMBER // apply Shift to type number row digits\n// TIP: Add more setting overrides here instead of editing them below.\n\n//////////////////////////////////////////////////////////////////////////////\n//\n// Sunaku's Keymap v42 -- \"Glorious Engrammer\"\n// - https://github.com/sunaku/glove80-keymaps\n//\n//////////////////////////////////////////////////////////////////////////////\n\n//\n// OPERATING_SYSTEM defines which operating system you intend to use\n// with this keymap, because shortcuts vary across operating systems.\n//\n// - https://zmk.dev/docs/codes\n// - https://en.wikipedia.org/wiki/Table_of_keyboard_shortcuts\n//\n// This setting also affects the UNICODE() function defined below, as\n// each OS has different shortcuts for typing Unicode hex characters.\n//\n// NOTE: You may need to enable Unicode hexadecimal input in your OS:\n// - (macOS) https://uknowit.uwgb.edu/page.php?id=22623\n//     and   https://github.com/ldanet/unicode-hex-input-fix\n// - (Linux) https://help.ubuntu.com/stable/ubuntu-help/tips-specialchars.html.en#ctrlshiftu\n// - (Windows) https://github.com/samhocevar/wincompose\n//\n// Specifically, Windows users should be running the WinCompose tool,\n// which lets you type Unicode characters via hexadecimal codepoints.\n//\n#ifndef OPERATING_SYSTEM\n  #define OPERATING_SYSTEM 'L' // linux\n//#define OPERATING_SYSTEM 'M' // macos\n//#define OPERATING_SYSTEM 'W' // windows\n#endif\n#if OPERATING_SYSTEM == 'M'\n  #define _C      LG\n  #define _A_TAB  LGUI\n  #define _G_TAB  LALT\n  #define _REDO   LG(LS(Z))\n  #define _POWER  K_POWER\n  #define _WORD   LA\n  #define _HOME   LG(LEFT)\n  #define _END    LG(RIGHT)\n  #define _EMOJI  LG(LC(SPACE))\n  #define _FILES  LS(LA(M))\n  #define _GLOBE  GLOBE\n#else\n  #define _C      LC\n  #define _A_TAB  LALT\n  #define _G_TAB  LGUI\n  #define _REDO   LC(Y)\n  #define _POWER  C_POWER\n  #define _WORD   LC\n  #define _HOME   HOME\n  #define _END    END\n  #define _EMOJI  LG(DOT)\n  #define _FILES  LG(E)\n  #define _GLOBE  LGUI\n#endif\n#define _SLEEP      C_SLEEP\n#if OPERATING_SYSTEM == 'W'\n  #define _LOCK   LG(L)\n#elif OPERATING_SYSTEM == 'M'\n  #define _LOCK   _C(LC(Q))\n#elif OPERATING_SYSTEM == 'L'\n  #define _LOCK   K_LOCK\n#endif\n#define _UNDO       _C(Z)\n#define _CUT        _C(X)\n#define _COPY       _C(C)\n#define _PASTE      _C(V)\n#define _FIND       _C(F)\n#define _FIND_NEXT  _C(G)\n#define _FIND_PREV  _C(LS(G))\n\n//\n// Keymap specific knowledge of the base layer's alpha + ZMK layout\n//\n#if defined(LAYER_Enthium) && LAYER_Enthium == 0\n  #define KEY_LH_C6R1 0\n  #define KEY_LH_C5R1 0\n  #define KEY_LH_C4R1 0\n  #define KEY_LH_C3R1 0\n  #define KEY_LH_C2R1 0\n  #define KEY_RH_C2R1 0\n  #define KEY_RH_C3R1 0\n  #define KEY_RH_C4R1 0\n  #define KEY_RH_C5R1 0\n  #define KEY_RH_C6R1 0\n  #define KEY_LH_C6R2 0\n  #define KEY_LH_C5R2 N1\n  #define KEY_LH_C4R2 N2\n  #define KEY_LH_C3R2 N3\n  #define KEY_LH_C2R2 N4\n  #define KEY_LH_C1R2 N5\n  #define KEY_RH_C1R2 N6\n  #define KEY_RH_C2R2 N7\n  #define KEY_RH_C3R2 N8\n  #define KEY_RH_C4R2 N9\n  #define KEY_RH_C5R2 N0\n  #define KEY_RH_C6R2 0\n  #define KEY_LH_C6R3 0\n  #define KEY_LH_C5R3 Z\n  #define KEY_LH_C4R3 Y\n  #define KEY_LH_C3R3 U\n  #define KEY_LH_C2R3 O\n  #define KEY_LH_C1R3 SEMI\n  #define KEY_RH_C1R3 Q\n  #define KEY_RH_C2R3 L\n  #define KEY_RH_C3R3 D\n  #define KEY_RH_C4R3 P\n  #define KEY_RH_C5R3 X\n  #define KEY_RH_C6R3 0\n  #define KEY_LH_C6R4 W\n  #define KEY_LH_C5R4 C\n  #define KEY_LH_C4R4 I\n  #define KEY_LH_C3R4 E\n  #define KEY_LH_C2R4 A\n  #define KEY_LH_C1R4 COMMA\n  #define KEY_RH_C1R4 K\n  #define KEY_RH_C2R4 H\n  #define KEY_RH_C3R4 T\n  #define KEY_RH_C4R4 N\n  #define KEY_RH_C5R4 S\n  #define KEY_RH_C6R4 F\n  #define KEY_LH_C6R5 0\n  #define LAY_LH_C6R5 LAYER_Lower\n  #define KEY_LH_C5R5 SQT\n  #define KEY_LH_C4R5 MINUS\n  #define KEY_LH_C3R5 EQUAL\n  #define KEY_LH_C2R5 DOT\n  #define KEY_LH_C1R5 FSLH\n  #define KEY_LH_T1 ESC\n  #define LAY_LH_T1 LAYER_Function\n  #define KEY_LH_T2 LPAR\n  #define KEY_LH_T3 RPAR\n  #define KEY_RH_T3 _HOME\n  #define KEY_RH_T2 _END\n  #define KEY_RH_T1 ENTER\n  #define LAY_RH_T1 LAYER_System\n  #define KEY_RH_C1R5 J\n  #define KEY_RH_C2R5 M\n  #define KEY_RH_C3R5 G\n  #define KEY_RH_C4R5 B\n  #define KEY_RH_C5R5 V\n  #define KEY_RH_C6R5 0\n  #define LAY_RH_C6R5 LAYER_Lower\n  #define KEY_LH_C6R6 0\n  #define KEY_LH_C5R6 GRAVE\n  #define KEY_LH_C4R6 LBKT\n  #define KEY_LH_C3R6 RBKT\n  #define KEY_LH_C2R6 BSLH\n  #define LAY_LH_C2R6 LAYER_Emoji\n  #define KEY_LH_T4 SPACE\n  #define LAY_LH_T4 LAYER_Cursor\n  #define KEY_LH_T5 TAB\n  #define LAY_LH_T5 LAYER_Number\n  #define KEY_LH_T6 INSERT\n  #define LAY_LH_T6 LAYER_Typing\n  #define KEY_RH_T6 DELETE\n  #define LAY_RH_T6 LAYER_Typing\n  #define KEY_RH_T5 BACKSPACE\n  #define LAY_RH_T5 LAYER_Mouse\n  #define KEY_RH_T4 R\n  #define LAY_RH_T4 LAYER_Symbol\n  #define KEY_RH_C2R6 PAGE_UP\n  #define LAY_RH_C2R6 LAYER_World\n  #define KEY_RH_C3R6 MOUSE_SCROLL_UP\n  #define KEY_RH_C4R6 MOUSE_SCROLL_DOWN\n  #define KEY_RH_C5R6 PG_DN\n  #define KEY_RH_C6R6 0\n#endif\n#if defined(LAYER_Engrammer) && LAYER_Engrammer == 0\n  #define KEY_LH_C6R1 0\n  #define KEY_LH_C5R1 0\n  #define KEY_LH_C4R1 0\n  #define KEY_LH_C3R1 0\n  #define KEY_LH_C2R1 0\n  #define KEY_RH_C2R1 0\n  #define KEY_RH_C3R1 0\n  #define KEY_RH_C4R1 0\n  #define KEY_RH_C5R1 0\n  #define KEY_RH_C6R1 0\n  #define KEY_LH_C6R2 0\n  #define KEY_LH_C5R2 N1\n  #define KEY_LH_C4R2 N2\n  #define KEY_LH_C3R2 N3\n  #define KEY_LH_C2R2 N4\n  #define KEY_LH_C1R2 N5\n  #define KEY_RH_C1R2 N6\n  #define KEY_RH_C2R2 N7\n  #define KEY_RH_C3R2 N8\n  #define KEY_RH_C4R2 N9\n  #define KEY_RH_C5R2 N0\n  #define KEY_RH_C6R2 0\n  #define KEY_LH_C6R3 0\n  #define KEY_LH_C5R3 B\n  #define KEY_LH_C4R3 Y\n  #define KEY_LH_C3R3 O\n  #define KEY_LH_C2R3 U\n  #define KEY_LH_C1R3 SQT\n  #define KEY_RH_C1R3 SEMI\n  #define KEY_RH_C2R3 L\n  #define KEY_RH_C3R3 D\n  #define KEY_RH_C4R3 W\n  #define KEY_RH_C5R3 V\n  #define KEY_RH_C6R3 Z\n  #define KEY_LH_C6R4 EQUAL\n  #define KEY_LH_C5R4 C\n  #define KEY_LH_C4R4 I\n  #define KEY_LH_C3R4 E\n  #define KEY_LH_C2R4 A\n  #define KEY_LH_C1R4 COMMA\n  #define KEY_RH_C1R4 DOT\n  #define KEY_RH_C2R4 H\n  #define KEY_RH_C3R4 T\n  #define KEY_RH_C4R4 S\n  #define KEY_RH_C5R4 N\n  #define KEY_RH_C6R4 Q\n  #define KEY_LH_C6R5 0\n  #define LAY_LH_C6R5 LAYER_Lower\n  #define KEY_LH_C5R5 G\n  #define KEY_LH_C4R5 X\n  #define KEY_LH_C3R5 J\n  #define KEY_LH_C2R5 K\n  #define KEY_LH_C1R5 MINUS\n  #define KEY_LH_T1 ESC\n  #define LAY_LH_T1 LAYER_Function\n  #define KEY_LH_T2 LPAR\n  #define KEY_LH_T3 RPAR\n  #define KEY_RH_T3 _HOME\n  #define KEY_RH_T2 _END\n  #define KEY_RH_T1 ENTER\n  #define LAY_RH_T1 LAYER_System\n  #define KEY_RH_C1R5 FSLH\n  #define KEY_RH_C2R5 R\n  #define KEY_RH_C3R5 M\n  #define KEY_RH_C4R5 F\n  #define KEY_RH_C5R5 P\n  #define KEY_RH_C6R5 0\n  #define LAY_RH_C6R5 LAYER_Lower\n  #define KEY_LH_C6R6 0\n  #define KEY_LH_C5R6 GRAVE\n  #define KEY_LH_C4R6 LBKT\n  #define KEY_LH_C3R6 RBKT\n  #define KEY_LH_C2R6 BSLH\n  #define LAY_LH_C2R6 LAYER_Emoji\n  #define KEY_LH_T4 BACKSPACE\n  #define LAY_LH_T4 LAYER_Cursor\n  #define KEY_LH_T5 DELETE\n  #define LAY_LH_T5 LAYER_Number\n  #define KEY_LH_T6 INSERT\n  #define LAY_LH_T6 LAYER_Typing\n  #define KEY_RH_T6 0\n  #define LAY_RH_T6 LAYER_Typing\n  #define KEY_RH_T5 TAB\n  #define LAY_RH_T5 LAYER_Mouse\n  #define KEY_RH_T4 SPACE\n  #define LAY_RH_T4 LAYER_Symbol\n  #define KEY_RH_C2R6 PAGE_UP\n  #define LAY_RH_C2R6 LAYER_World\n  #define KEY_RH_C3R6 MOUSE_SCROLL_UP\n  #define KEY_RH_C4R6 MOUSE_SCROLL_DOWN\n  #define KEY_RH_C5R6 PG_DN\n  #define KEY_RH_C6R6 0\n#endif\n#if defined(LAYER_Engram) && LAYER_Engram == 0\n  #define KEY_LH_C6R1 0\n  #define KEY_LH_C5R1 0\n  #define KEY_LH_C4R1 0\n  #define KEY_LH_C3R1 0\n  #define KEY_LH_C2R1 0\n  #define KEY_RH_C2R1 0\n  #define KEY_RH_C3R1 0\n  #define KEY_RH_C4R1 0\n  #define KEY_RH_C5R1 0\n  #define KEY_RH_C6R1 0\n  #define KEY_LH_C6R2 0\n  #define KEY_LH_C5R2 N1\n  #define KEY_LH_C4R2 N2\n  #define KEY_LH_C3R2 N3\n  #define KEY_LH_C2R2 N4\n  #define KEY_LH_C1R2 N5\n  #define KEY_RH_C1R2 N6\n  #define KEY_RH_C2R2 N7\n  #define KEY_RH_C3R2 N8\n  #define KEY_RH_C4R2 N9\n  #define KEY_RH_C5R2 N0\n  #define KEY_RH_C6R2 0\n  #define KEY_LH_C6R3 0\n  #define KEY_LH_C5R3 B\n  #define KEY_LH_C4R3 Y\n  #define KEY_LH_C3R3 O\n  #define KEY_LH_C2R3 U\n  #define KEY_LH_C1R3 SQT\n  #define KEY_RH_C1R3 DQT\n  #define KEY_RH_C2R3 L\n  #define KEY_RH_C3R3 D\n  #define KEY_RH_C4R3 W\n  #define KEY_RH_C5R3 V\n  #define KEY_RH_C6R3 Z\n  #define KEY_LH_C6R4 HASH\n  #define KEY_LH_C5R4 C\n  #define KEY_LH_C4R4 I\n  #define KEY_LH_C3R4 E\n  #define KEY_LH_C2R4 A\n  #define KEY_LH_C1R4 COMMA\n  #define KEY_RH_C1R4 DOT\n  #define KEY_RH_C2R4 H\n  #define KEY_RH_C3R4 T\n  #define KEY_RH_C4R4 S\n  #define KEY_RH_C5R4 N\n  #define KEY_RH_C6R4 Q\n  #define KEY_LH_C6R5 0\n  #define LAY_LH_C6R5 LAYER_Lower\n  #define KEY_LH_C5R5 G\n  #define KEY_LH_C4R5 X\n  #define KEY_LH_C3R5 J\n  #define KEY_LH_C2R5 K\n  #define KEY_LH_C1R5 MINUS\n  #define KEY_LH_T1 ESC\n  #define LAY_LH_T1 LAYER_Function\n  #define KEY_LH_T2 LPAR\n  #define KEY_LH_T3 RPAR\n  #define KEY_RH_T3 _HOME\n  #define KEY_RH_T2 _END\n  #define KEY_RH_T1 ENTER\n  #define LAY_RH_T1 LAYER_System\n  #define KEY_RH_C1R5 QMARK\n  #define KEY_RH_C2R5 R\n  #define KEY_RH_C3R5 M\n  #define KEY_RH_C4R5 F\n  #define KEY_RH_C5R5 P\n  #define KEY_RH_C6R5 0\n  #define LAY_RH_C6R5 LAYER_Lower\n  #define KEY_LH_C6R6 0\n  #define KEY_LH_C5R6 FSLH\n  #define KEY_LH_C4R6 LBKT\n  #define KEY_LH_C3R6 RBKT\n  #define KEY_LH_C2R6 AT\n  #define KEY_LH_T4 BACKSPACE\n  #define LAY_LH_T4 LAYER_Cursor\n  #define KEY_LH_T5 DELETE\n  #define LAY_LH_T5 LAYER_Number\n  #define KEY_LH_T6 INSERT\n  #define LAY_LH_T6 LAYER_Typing\n  #define KEY_RH_T6 0\n  #define LAY_RH_T6 LAYER_Typing\n  #define KEY_RH_T5 TAB\n  #define LAY_RH_T5 LAYER_Mouse\n  #define KEY_RH_T4 SPACE\n  #define LAY_RH_T4 LAYER_Symbol\n  #define KEY_RH_C2R6 PAGE_UP\n  #define LAY_RH_C2R6 LAYER_World\n  #define KEY_RH_C3R6 MOUSE_SCROLL_UP\n  #define KEY_RH_C4R6 MOUSE_SCROLL_DOWN\n  #define KEY_RH_C5R6 PG_DN\n  #define KEY_RH_C6R6 0\n#endif\n#if defined(LAYER_Dvorak) && LAYER_Dvorak == 0\n  #define KEY_LH_C6R1 0\n  #define KEY_LH_C5R1 0\n  #define KEY_LH_C4R1 0\n  #define KEY_LH_C3R1 0\n  #define KEY_LH_C2R1 0\n  #define KEY_RH_C2R1 0\n  #define KEY_RH_C3R1 0\n  #define KEY_RH_C4R1 0\n  #define KEY_RH_C5R1 0\n  #define KEY_RH_C6R1 0\n  #define KEY_LH_C6R2 0\n  #define KEY_LH_C5R2 N1\n  #define KEY_LH_C4R2 N2\n  #define KEY_LH_C3R2 N3\n  #define KEY_LH_C2R2 N4\n  #define KEY_LH_C1R2 N5\n  #define KEY_RH_C1R2 N6\n  #define KEY_RH_C2R2 N7\n  #define KEY_RH_C3R2 N8\n  #define KEY_RH_C4R2 N9\n  #define KEY_RH_C5R2 N0\n  #define KEY_RH_C6R2 0\n  #define KEY_LH_C6R3 0\n  #define KEY_LH_C5R3 SQT\n  #define KEY_LH_C4R3 COMMA\n  #define KEY_LH_C3R3 DOT\n  #define KEY_LH_C2R3 P\n  #define KEY_LH_C1R3 Y\n  #define KEY_RH_C1R3 F\n  #define KEY_RH_C2R3 G\n  #define KEY_RH_C3R3 C\n  #define KEY_RH_C4R3 R\n  #define KEY_RH_C5R3 L\n  #define KEY_RH_C6R3 SLASH\n  #define KEY_LH_C6R4 EQUAL\n  #define KEY_LH_C5R4 A\n  #define KEY_LH_C4R4 O\n  #define KEY_LH_C3R4 E\n  #define KEY_LH_C2R4 U\n  #define KEY_LH_C1R4 I\n  #define KEY_RH_C1R4 D\n  #define KEY_RH_C2R4 H\n  #define KEY_RH_C3R4 T\n  #define KEY_RH_C4R4 N\n  #define KEY_RH_C5R4 S\n  #define KEY_RH_C6R4 MINUS\n  #define KEY_LH_C6R5 0\n  #define LAY_LH_C6R5 LAYER_Lower\n  #define KEY_LH_C5R5 SEMI\n  #define KEY_LH_C4R5 Q\n  #define KEY_LH_C3R5 J\n  #define KEY_LH_C2R5 K\n  #define KEY_LH_C1R5 X\n  #define KEY_LH_T1 ESC\n  #define LAY_LH_T1 LAYER_Function\n  #define KEY_LH_T2 LPAR\n  #define KEY_LH_T3 RPAR\n  #define KEY_RH_T3 _HOME\n  #define KEY_RH_T2 _END\n  #define KEY_RH_T1 ENTER\n  #define LAY_RH_T1 LAYER_System\n  #define KEY_RH_C1R5 B\n  #define KEY_RH_C2R5 M\n  #define KEY_RH_C3R5 W\n  #define KEY_RH_C4R5 V\n  #define KEY_RH_C5R5 Z\n  #define KEY_RH_C6R5 0\n  #define LAY_RH_C6R5 LAYER_Lower\n  #define KEY_LH_C6R6 0\n  #define KEY_LH_C5R6 GRAVE\n  #define KEY_LH_C4R6 LBKT\n  #define KEY_LH_C3R6 RBKT\n  #define KEY_LH_C2R6 BSLH\n  #define LAY_LH_C2R6 LAYER_Emoji\n  #define KEY_LH_T4 BACKSPACE\n  #define LAY_LH_T4 LAYER_Cursor\n  #define KEY_LH_T5 DELETE\n  #define LAY_LH_T5 LAYER_Number\n  #define KEY_LH_T6 INSERT\n  #define LAY_LH_T6 LAYER_Typing\n  #define KEY_RH_T6 0\n  #define LAY_RH_T6 LAYER_Typing\n  #define KEY_RH_T5 TAB\n  #define LAY_RH_T5 LAYER_Mouse\n  #define KEY_RH_T4 SPACE\n  #define LAY_RH_T4 LAYER_Symbol\n  #define KEY_RH_C2R6 PAGE_UP\n  #define LAY_RH_C2R6 LAYER_World\n  #define KEY_RH_C3R6 MOUSE_SCROLL_UP\n  #define KEY_RH_C4R6 MOUSE_SCROLL_DOWN\n  #define KEY_RH_C5R6 PG_DN\n  #define KEY_RH_C6R6 0\n#endif\n#if defined(LAYER_Colemak) && LAYER_Colemak == 0\n  #define KEY_LH_C6R1 0\n  #define KEY_LH_C5R1 0\n  #define KEY_LH_C4R1 0\n  #define KEY_LH_C3R1 0\n  #define KEY_LH_C2R1 0\n  #define KEY_RH_C2R1 0\n  #define KEY_RH_C3R1 0\n  #define KEY_RH_C4R1 0\n  #define KEY_RH_C5R1 0\n  #define KEY_RH_C6R1 0\n  #define KEY_LH_C6R2 0\n  #define KEY_LH_C5R2 N1\n  #define KEY_LH_C4R2 N2\n  #define KEY_LH_C3R2 N3\n  #define KEY_LH_C2R2 N4\n  #define KEY_LH_C1R2 N5\n  #define KEY_RH_C1R2 N6\n  #define KEY_RH_C2R2 N7\n  #define KEY_RH_C3R2 N8\n  #define KEY_RH_C4R2 N9\n  #define KEY_RH_C5R2 N0\n  #define KEY_RH_C6R2 0\n  #define KEY_LH_C6R3 0\n  #define KEY_LH_C5R3 Q\n  #define KEY_LH_C4R3 W\n  #define KEY_LH_C3R3 F\n  #define KEY_LH_C2R3 P\n  #define KEY_LH_C1R3 G\n  #define KEY_RH_C1R3 J\n  #define KEY_RH_C2R3 L\n  #define KEY_RH_C3R3 U\n  #define KEY_RH_C4R3 Y\n  #define KEY_RH_C5R3 SEMI\n  #define KEY_RH_C6R3 MINUS\n  #define KEY_LH_C6R4 EQUAL\n  #define KEY_LH_C5R4 A\n  #define KEY_LH_C4R4 R\n  #define KEY_LH_C3R4 S\n  #define KEY_LH_C2R4 T\n  #define KEY_LH_C1R4 D\n  #define KEY_RH_C1R4 H\n  #define KEY_RH_C2R4 N\n  #define KEY_RH_C3R4 E\n  #define KEY_RH_C4R4 I\n  #define KEY_RH_C5R4 O\n  #define KEY_RH_C6R4 SQT\n  #define KEY_LH_C6R5 0\n  #define LAY_LH_C6R5 LAYER_Lower\n  #define KEY_LH_C5R5 Z\n  #define KEY_LH_C4R5 X\n  #define KEY_LH_C3R5 C\n  #define KEY_LH_C2R5 V\n  #define KEY_LH_C1R5 B\n  #define KEY_LH_T1 ESC\n  #define LAY_LH_T1 LAYER_Function\n  #define KEY_LH_T2 LPAR\n  #define KEY_LH_T3 RPAR\n  #define KEY_RH_T3 _HOME\n  #define KEY_RH_T2 _END\n  #define KEY_RH_T1 ENTER\n  #define LAY_RH_T1 LAYER_System\n  #define KEY_RH_C1R5 K\n  #define KEY_RH_C2R5 M\n  #define KEY_RH_C3R5 COMMA\n  #define KEY_RH_C4R5 DOT\n  #define KEY_RH_C5R5 FSLH\n  #define KEY_RH_C6R5 0\n  #define LAY_RH_C6R5 LAYER_Lower\n  #define KEY_LH_C6R6 0\n  #define KEY_LH_C5R6 GRAVE\n  #define KEY_LH_C4R6 LBKT\n  #define KEY_LH_C3R6 RBKT\n  #define KEY_LH_C2R6 BSLH\n  #define LAY_LH_C2R6 LAYER_Emoji\n  #define KEY_LH_T4 BACKSPACE\n  #define LAY_LH_T4 LAYER_Cursor\n  #define KEY_LH_T5 DELETE\n  #define LAY_LH_T5 LAYER_Number\n  #define KEY_LH_T6 INSERT\n  #define LAY_LH_T6 LAYER_Typing\n  #define KEY_RH_T6 0\n  #define LAY_RH_T6 LAYER_Typing\n  #define KEY_RH_T5 TAB\n  #define LAY_RH_T5 LAYER_Mouse\n  #define KEY_RH_T4 SPACE\n  #define LAY_RH_T4 LAYER_Symbol\n  #define KEY_RH_C2R6 PAGE_UP\n  #define LAY_RH_C2R6 LAYER_World\n  #define KEY_RH_C3R6 MOUSE_SCROLL_UP\n  #define KEY_RH_C4R6 MOUSE_SCROLL_DOWN\n  #define KEY_RH_C5R6 PG_DN\n  #define KEY_RH_C6R6 0\n#endif\n#if defined(LAYER_QWERTY) && LAYER_QWERTY == 0\n  #define KEY_LH_C6R1 0\n  #define KEY_LH_C5R1 0\n  #define KEY_LH_C4R1 0\n  #define KEY_LH_C3R1 0\n  #define KEY_LH_C2R1 0\n  #define KEY_RH_C2R1 0\n  #define KEY_RH_C3R1 0\n  #define KEY_RH_C4R1 0\n  #define KEY_RH_C5R1 0\n  #define KEY_RH_C6R1 0\n  #define KEY_LH_C6R2 0\n  #define KEY_LH_C5R2 N1\n  #define KEY_LH_C4R2 N2\n  #define KEY_LH_C3R2 N3\n  #define KEY_LH_C2R2 N4\n  #define KEY_LH_C1R2 N5\n  #define KEY_RH_C1R2 N6\n  #define KEY_RH_C2R2 N7\n  #define KEY_RH_C3R2 N8\n  #define KEY_RH_C4R2 N9\n  #define KEY_RH_C5R2 N0\n  #define KEY_RH_C6R2 0\n  #define KEY_LH_C6R3 0\n  #define KEY_LH_C5R3 Q\n  #define KEY_LH_C4R3 W\n  #define KEY_LH_C3R3 E\n  #define KEY_LH_C2R3 R\n  #define KEY_LH_C1R3 T\n  #define KEY_RH_C1R3 Y\n  #define KEY_RH_C2R3 U\n  #define KEY_RH_C3R3 I\n  #define KEY_RH_C4R3 O\n  #define KEY_RH_C5R3 P\n  #define KEY_RH_C6R3 MINUS\n  #define KEY_LH_C6R4 EQUAL\n  #define KEY_LH_C5R4 A\n  #define KEY_LH_C4R4 S\n  #define KEY_LH_C3R4 D\n  #define KEY_LH_C2R4 F\n  #define KEY_LH_C1R4 G\n  #define KEY_RH_C1R4 H\n  #define KEY_RH_C2R4 J\n  #define KEY_RH_C3R4 K\n  #define KEY_RH_C4R4 L\n  #define KEY_RH_C5R4 SEMI\n  #define KEY_RH_C6R4 SQT\n  #define KEY_LH_C6R5 0\n  #define LAY_LH_C6R5 LAYER_Lower\n  #define KEY_LH_C5R5 Z\n  #define KEY_LH_C4R5 X\n  #define KEY_LH_C3R5 C\n  #define KEY_LH_C2R5 V\n  #define KEY_LH_C1R5 B\n  #define KEY_LH_T1 ESC\n  #define LAY_LH_T1 LAYER_Function\n  #define KEY_LH_T2 LPAR\n  #define KEY_LH_T3 RPAR\n  #define KEY_RH_T3 _HOME\n  #define KEY_RH_T2 _END\n  #define KEY_RH_T1 ENTER\n  #define LAY_RH_T1 LAYER_System\n  #define KEY_RH_C1R5 N\n  #define KEY_RH_C2R5 M\n  #define KEY_RH_C3R5 COMMA\n  #define KEY_RH_C4R5 DOT\n  #define KEY_RH_C5R5 FSLH\n  #define KEY_RH_C6R5 0\n  #define LAY_RH_C6R5 LAYER_Lower\n  #define KEY_LH_C6R6 0\n  #define KEY_LH_C5R6 GRAVE\n  #define KEY_LH_C4R6 LBKT\n  #define KEY_LH_C3R6 RBKT\n  #define KEY_LH_C2R6 BSLH\n  #define LAY_LH_C2R6 LAYER_Emoji\n  #define KEY_LH_T4 BACKSPACE\n  #define LAY_LH_T4 LAYER_Cursor\n  #define KEY_LH_T5 DELETE\n  #define LAY_LH_T5 LAYER_Number\n  #define KEY_LH_T6 INSERT\n  #define LAY_LH_T6 LAYER_Typing\n  #define KEY_RH_T6 0\n  #define LAY_RH_T6 LAYER_Typing\n  #define KEY_RH_T5 TAB\n  #define LAY_RH_T5 LAYER_Mouse\n  #define KEY_RH_T4 SPACE\n  #define LAY_RH_T4 LAYER_Symbol\n  #define KEY_RH_C2R6 PAGE_UP\n  #define LAY_RH_C2R6 LAYER_World\n  #define KEY_RH_C3R6 MOUSE_SCROLL_UP\n  #define KEY_RH_C4R6 MOUSE_SCROLL_DOWN\n  #define KEY_RH_C5R6 PG_DN\n  #define KEY_RH_C6R6 0\n#endif\n#if defined(LAYER_ColemakDH) && LAYER_ColemakDH == 0\n  #define KEY_LH_C6R1 0\n  #define KEY_LH_C5R1 0\n  #define KEY_LH_C4R1 0\n  #define KEY_LH_C3R1 0\n  #define KEY_LH_C2R1 0\n  #define KEY_RH_C2R1 0\n  #define KEY_RH_C3R1 0\n  #define KEY_RH_C4R1 0\n  #define KEY_RH_C5R1 0\n  #define KEY_RH_C6R1 0\n  #define KEY_LH_C6R2 0\n  #define KEY_LH_C5R2 N1\n  #define KEY_LH_C4R2 N2\n  #define KEY_LH_C3R2 N3\n  #define KEY_LH_C2R2 N4\n  #define KEY_LH_C1R2 N5\n  #define KEY_RH_C1R2 N6\n  #define KEY_RH_C2R2 N7\n  #define KEY_RH_C3R2 N8\n  #define KEY_RH_C4R2 N9\n  #define KEY_RH_C5R2 N0\n  #define KEY_RH_C6R2 0\n  #define KEY_LH_C6R3 0\n  #define KEY_LH_C5R3 Q\n  #define KEY_LH_C4R3 W\n  #define KEY_LH_C3R3 F\n  #define KEY_LH_C2R3 P\n  #define KEY_LH_C1R3 B\n  #define KEY_RH_C1R3 J\n  #define KEY_RH_C2R3 L\n  #define KEY_RH_C3R3 U\n  #define KEY_RH_C4R3 Y\n  #define KEY_RH_C5R3 SEMI\n  #define KEY_RH_C6R3 MINUS\n  #define KEY_LH_C6R4 EQUAL\n  #define KEY_LH_C5R4 A\n  #define KEY_LH_C4R4 R\n  #define KEY_LH_C3R4 S\n  #define KEY_LH_C2R4 T\n  #define KEY_LH_C1R4 G\n  #define KEY_RH_C1R4 M\n  #define KEY_RH_C2R4 N\n  #define KEY_RH_C3R4 E\n  #define KEY_RH_C4R4 I\n  #define KEY_RH_C5R4 O\n  #define KEY_RH_C6R4 SQT\n  #define KEY_LH_C6R5 0\n  #define LAY_LH_C6R5 LAYER_Lower\n  #define KEY_LH_C5R5 Z\n  #define KEY_LH_C4R5 X\n  #define KEY_LH_C3R5 C\n  #define KEY_LH_C2R5 D\n  #define KEY_LH_C1R5 V\n  #define KEY_LH_T1 ESC\n  #define LAY_LH_T1 LAYER_Function\n  #define KEY_LH_T2 LPAR\n  #define KEY_LH_T3 RPAR\n  #define KEY_RH_T3 _HOME\n  #define KEY_RH_T2 _END\n  #define KEY_RH_T1 ENTER\n  #define LAY_RH_T1 LAYER_System\n  #define KEY_RH_C1R5 K\n  #define KEY_RH_C2R5 H\n  #define KEY_RH_C3R5 COMMA\n  #define KEY_RH_C4R5 DOT\n  #define KEY_RH_C5R5 FSLH\n  #define KEY_RH_C6R5 0\n  #define LAY_RH_C6R5 LAYER_Lower\n  #define KEY_LH_C6R6 0\n  #define KEY_LH_C5R6 GRAVE\n  #define KEY_LH_C4R6 LBKT\n  #define KEY_LH_C3R6 RBKT\n  #define KEY_LH_C2R6 BSLH\n  #define LAY_LH_C2R6 LAYER_Emoji\n  #define KEY_LH_T4 BACKSPACE\n  #define LAY_LH_T4 LAYER_Cursor\n  #define KEY_LH_T5 DELETE\n  #define LAY_LH_T5 LAYER_Number\n  #define KEY_LH_T6 INSERT\n  #define LAY_LH_T6 LAYER_Typing\n  #define KEY_RH_T6 0\n  #define LAY_RH_T6 LAYER_Typing\n  #define KEY_RH_T5 TAB\n  #define LAY_RH_T5 LAYER_Mouse\n  #define KEY_RH_T4 SPACE\n  #define LAY_RH_T4 LAYER_Symbol\n  #define KEY_RH_C2R6 PAGE_UP\n  #define LAY_RH_C2R6 LAYER_World\n  #define KEY_RH_C3R6 MOUSE_SCROLL_UP\n  #define KEY_RH_C4R6 MOUSE_SCROLL_DOWN\n  #define KEY_RH_C5R6 PG_DN\n  #define KEY_RH_C6R6 0\n#endif\n\ncombos {\n  compatible = \"zmk,combos\";\n\n  //\n  // COMBO_FIRING_DECAY defines how much time you have left (milliseconds)\n  // after pressing the first key in a ZMK combo to finish the whole chord.\n  //\n  #ifndef COMBO_FIRING_DECAY\n  #define COMBO_FIRING_DECAY 50\n  #endif\n\n  // T2+T3\n\n  combo_sticky_globe_left {\n    timeout-ms = <COMBO_FIRING_DECAY>;\n    key-positions = <POS_LH_T2 POS_LH_T3>;\n    bindings = <&sk _GLOBE>;\n    layers = <0 1 2 3 4 5 6>;\n  };\n\n  combo_sticky_globe_right {\n    timeout-ms = <COMBO_FIRING_DECAY>;\n    key-positions = <POS_RH_T2 POS_RH_T3>;\n    bindings = <&sk _GLOBE>;\n    layers = <0 1 2 3 4 5 6>;\n  };\n\n  // T1+T2\n\n  combo_sticky_ralt_left {\n    timeout-ms = <COMBO_FIRING_DECAY>;\n    key-positions = <POS_LH_T1 POS_LH_T2>;\n    bindings = <&sk RALT>;\n    layers = <0 1 2 3 4 5 6>;\n  };\n\n  combo_sticky_ralt_right {\n    timeout-ms = <COMBO_FIRING_DECAY>;\n    key-positions = <POS_RH_T1 POS_RH_T2>;\n    bindings = <&sk RALT>;\n    layers = <0 1 2 3 4 5 6>;\n  };\n\n  // T2+T5\n  #if defined(_A_TAB) && defined(LAYER_Cursor)\n  combo_alt_tab_switcher_left {\n    timeout-ms = <COMBO_FIRING_DECAY>;\n    key-positions = <POS_LH_T2 POS_LH_T5>;\n    bindings = <&mod_tab_chord _A_TAB LAYER_Cursor>;\n    layers = <0 1 2 3 4 5 6>;\n  };\n  #endif\n\n  combo_hyper_right {\n    timeout-ms = <COMBO_FIRING_DECAY>;\n    key-positions = <POS_RH_T2 POS_RH_T5>;\n    bindings = <&kp LG(LA(LC(LSHFT)))>;\n    layers = <0 1 2 3 4 5 6>;\n  };\n\n  // T5+T6\n  #if defined(_G_TAB) && defined(LAYER_Cursor)\n  combo_win_tab_switcher_left {\n    timeout-ms = <COMBO_FIRING_DECAY>;\n    key-positions = <POS_LH_T5 POS_LH_T6>;\n    bindings = <&mod_tab_chord _G_TAB LAYER_Cursor>;\n    layers = <0 1 2 3 4 5 6>;\n  };\n  #endif\n\n  combo_ctrl_shift_right {\n    timeout-ms = <COMBO_FIRING_DECAY>;\n    key-positions = <POS_RH_T5 POS_RH_T6>;\n    bindings = <&kp LC(LSHFT)>;\n    layers = <0 1 2 3 4 5 6>;\n  };\n\n  // T3+T6\n\n  combo_ctrl_tab_switcher_left {\n    timeout-ms = <COMBO_FIRING_DECAY>;\n    key-positions = <POS_LH_T3 POS_LH_T6>;\n    bindings = <&mod_tab_chord LCTL LAYER_Cursor>;\n    layers = <0 1 2 3 4 5 6>;\n  };\n\n  combo_meh_right {\n    timeout-ms = <COMBO_FIRING_DECAY>;\n    key-positions = <POS_RH_T3 POS_RH_T6>;\n    bindings = <&kp LA(LC(LSHFT))>;\n    layers = <0 1 2 3 4 5 6>;\n  };\n\n  // T1+T4\n\n  combo_sticky_shift_left {\n    timeout-ms = <COMBO_FIRING_DECAY>;\n    key-positions = <POS_LH_T1 POS_LH_T4>;\n    bindings = <&sticky_key_modtap LSFT LSFT>;\n    layers = <0 1 2 3 4 5 6 7>;\n  };\n\n  combo_sticky_shift_right {\n    timeout-ms = <COMBO_FIRING_DECAY>;\n    key-positions = <POS_RH_T1 POS_RH_T4>;\n    bindings = <&sticky_key_modtap RSFT RSFT>;\n    layers = <0 1 2 3 4 5 6 7>;\n  };\n\n  // T4+T5\n\n  combo_caps_word_left {\n    timeout-ms = <COMBO_FIRING_DECAY>;\n    key-positions = <POS_LH_T4 POS_LH_T5>;\n    bindings = <&caps_word>;\n    layers = <0 1 2 3 4 5 6>;\n  };\n\n  combo_caps_word_right {\n    timeout-ms = <COMBO_FIRING_DECAY>;\n    key-positions = <POS_RH_T4 POS_RH_T5>;\n    bindings = <&caps_word>;\n    layers = <0 1 2 3 4 5 6>;\n  };\n\n  // T1+T5\n\n  combo_caps_lock_left {\n    timeout-ms = <COMBO_FIRING_DECAY>;\n    key-positions = <POS_LH_T1 POS_LH_T5>;\n    bindings = <&kp CAPSLOCK>;\n    layers = <0 1 2 3 4 5 6>;\n  };\n\n  combo_caps_lock_right {\n    timeout-ms = <COMBO_FIRING_DECAY>;\n    key-positions = <POS_RH_T1 POS_RH_T5>;\n    bindings = <&kp CAPSLOCK>;\n    layers = <0 1 2 3 4 5 6>;\n  };\n\n  // C1R5+C2R6\n  #ifdef LAYER_Gaming\n  combo_gaming_layer_toggle {\n    timeout-ms = <COMBO_FIRING_DECAY>;\n    key-positions = <POS_LH_C1R5 POS_LH_C2R6>;\n    bindings = <&tog LAYER_Gaming>;\n    layers = <0 LAYER_Gaming>;\n  };\n  #endif\n  #ifdef LAYER_Typing\n  combo_typing_layer_toggle {\n    timeout-ms = <COMBO_FIRING_DECAY>;\n    key-positions = <POS_RH_C1R5 POS_RH_C2R6>;\n    bindings = <&tog LAYER_Typing>;\n    layers = <0 LAYER_Typing>;\n  };\n  #endif\n\n  // T1+T2+T3\n\n  combo_sticky_base_layer_reset_left {\n    timeout-ms = <COMBO_FIRING_DECAY>;\n    key-positions = <POS_LH_T1 POS_LH_T2 POS_LH_T3>;\n    bindings = <&to 0>;\n    layers = <0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30>;\n  };\n\n  combo_sticky_base_layer_reset_right {\n    timeout-ms = <COMBO_FIRING_DECAY>;\n    key-positions = <POS_RH_T1 POS_RH_T2 POS_RH_T3>;\n    bindings = <&to 0>;\n    layers = <0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30>;\n  };\n\n};\n\nbehaviors {\n\n  //////////////////////////////////////////////////////////////////////////\n  //\n  // Miryoku layers and home row mods (ported from my QMK endgame)\n  // - https://sunaku.github.io/home-row-mods.html#porting-to-zmk\n  // - https://github.com/urob/zmk-config#timeless-homerow-mods\n  //\n  //////////////////////////////////////////////////////////////////////////\n\n  //\n  // DIFFICULTY_LEVEL specifies your level of expertise with this keymap.\n  // It's meant to help newcomers gradually work their way up to mastery.\n  //\n  // #define DIFFICULTY_LEVEL 1 // novice (500ms)\n  // #define DIFFICULTY_LEVEL 2 // slower (400ms)\n  // #define DIFFICULTY_LEVEL 3 // normal (300ms)\n  // #define DIFFICULTY_LEVEL 4 // faster (200ms)\n  // #define DIFFICULTY_LEVEL 5 // expert (100ms)\n  //\n  // You can disable this setting by omitting it or assigning a `0` zero,\n  // in which case it will default to my personal set of time thresholds.\n  //\n  // #define DIFFICULTY_LEVEL 0 // sunaku (150ms)\n  //\n  // No matter what difficulty level you choose, you can always override\n  // any settings in this keymap at the beginning of this configuration.\n  //\n  #ifdef DIFFICULTY_LEVEL\n    #if DIFFICULTY_LEVEL > 0 && DIFFICULTY_LEVEL < 6\n      #ifndef TAPPING_RESOLUTION\n        #define TAPPING_RESOLUTION ((6 - DIFFICULTY_LEVEL) * 100)\n      #endif\n    #endif\n  #endif\n\n  //\n  // TAPPING_RESOLUTION specifies the maximum speed at which the keyboard\n  // confuses your taps as being holds when you type on home row mod keys.\n  // When you lower this value, the same confusion should still occur; but\n  // when you raise this value, you should be able to type normally again.\n  //\n  #ifndef TAPPING_RESOLUTION\n  #define TAPPING_RESOLUTION 150\n  #endif\n\n  //\n  // ENFORCE_BILATERAL cancels out single-handed home row mods activation by\n  // releasing any currently pressed mods and replacing them with plain taps.\n  //\n  // NOTE: You may still encounter \"flashing mods\" where an operating system\n  // action is triggered by the release of mods, such as LGUI which launches\n  // the Windows Start Menu and LALT which opens the Microsoft Office Ribbon.\n  //\n  //#define ENFORCE_BILATERAL\n\n  //\n  // SHIFT_FORGIVENESS taps when home row shift is merely held and released,\n  // without any other key having been tapped while the shift was held down.\n  // For example, suppose you hold a home row shift key and, before pressing\n  // another key, you suddenly decide that you don't want the shift anymore:\n  //\n  // <1> If this setting is enabled, the underlying tap behavior is triggered\n  //     to type a single character when you release that home row shift key.\n  //\n  // <2> Otherwise, nothing happens when you release that home row shift key.\n  //\n  // This requires the \"hold-while-undecided\" ZMK feature in a beta firmware:\n  // please select \"v24.08-beta1\" or newer from the drop-down menu located at\n  // Glove80 Layout Editor > Settings > Advanced Settings > Firmware Version.\n  //\n  // CAUTION: This can interfere with mod-click mouse usage where you hold a\n  // home row shift key and perform mouse actions (move, click, drag & drop):\n  // when you release that home row shift key, its underlying character would\n  // be typed, potentially triggering an unexpected action on your selection!\n  // To prevent the underlying character from being typed, press another key\n  // (such as a dedicated shift key, a neighboring home row mod key, or even\n  // a layer access key) before you release the original home row shift key.\n  //\n  // NOTE: You may potentially encounter \"flashing mods\" where an application\n  // or operating system action is triggered by a standalone tap of a shift,\n  // but this is unlikely as people regularly tap shift without consequence.\n  //\n  //#define SHIFT_FORGIVENESS\n\n  //\n  // THUMB_FORGIVENESS taps when a thumb layer access key is merely held and\n  // released, without any other key having been tapped while thumb was held.\n  // For example, suppose you hold the cursor layer key and, before pressing\n  // another key, you suddenly decide that you don't want the layer anymore:\n  //\n  // <1> If this setting is enabled, the underlying tap behavior is triggered\n  //     to type a single character when you release that layer access key.\n  //\n  // <2> Otherwise, nothing happens when you release that layer access key.\n  //\n  // NOTE: This setting interferes with (and effectively disables) per-key\n  // RGB indicators (PR30) for layers accessed via thumb layer access keys.\n  //\n  //#define THUMB_FORGIVENESS\n\n  //\n  // SPACE_FORGIVENESS taps when the symbol layer access key is merely held\n  // and released, without any symbol been tapped while the access was held.\n  // For example, suppose you hold the symbol layer key and, before pressing\n  // another key, you suddenly decide that you don't want the layer anymore:\n  //\n  // <1> If this setting is enabled, the underlying tap behavior is triggered\n  //     to type a single character when you release that layer access key.\n  //\n  // <2> Otherwise, nothing happens when you release that layer access key.\n  //\n  // NOTE: This setting interferes with (and effectively disables) per-key\n  // RGB indicators (PR30) for layers accessed via thumb layer access keys.\n  //\n  //#define SPACE_FORGIVENESS\n\n  //\n  // The *_FINGER_MOD specify which modifiers are used by home row mod keys.\n  // Here, we use Miryoku's \"GACS\" (Win, Alt, Ctrl, Shift) order by default,\n  // unless OPERATING_SYSTEM is macOS, in which case Win & Ctrl are swapped,\n  // unless MACOS_USE_GACS is also defined to suppress that Win & Ctrl swap.\n  //\n  #ifndef PINKY_FINGER_MOD\n    #if OPERATING_SYSTEM == 'M' && !defined(MACOS_USE_GACS)\n      #define PINKY_FINGER_MOD LCTL\n    #else\n      #define PINKY_FINGER_MOD LGUI\n    #endif\n  #endif\n  #ifndef RINGY_FINGER_MOD\n  #define RINGY_FINGER_MOD LALT\n  #endif\n  #ifndef MIDDY_FINGER_MOD\n    #if OPERATING_SYSTEM == 'M' && !defined(MACOS_USE_GACS)\n      #define MIDDY_FINGER_MOD LGUI\n    #else\n      #define MIDDY_FINGER_MOD LCTL\n    #endif\n  #endif\n  #ifndef INDEX_FINGER_MOD\n  #define INDEX_FINGER_MOD LSFT\n  #endif\n  //\n  // The following settings let you configure mods individually, per finger:\n  //\n  #ifndef LEFT_PINKY_MOD\n  #define LEFT_PINKY_MOD PINKY_FINGER_MOD\n  #endif\n  #ifndef RIGHT_PINKY_MOD\n  #define RIGHT_PINKY_MOD PINKY_FINGER_MOD\n  #endif\n  #ifndef LEFT_RINGY_MOD\n  #define LEFT_RINGY_MOD RINGY_FINGER_MOD\n  #endif\n  #ifndef RIGHT_RINGY_MOD\n  #define RIGHT_RINGY_MOD RINGY_FINGER_MOD\n  #endif\n  #ifndef LEFT_MIDDY_MOD\n  #define LEFT_MIDDY_MOD MIDDY_FINGER_MOD\n  #endif\n  #ifndef RIGHT_MIDDY_MOD\n  #define RIGHT_MIDDY_MOD MIDDY_FINGER_MOD\n  #endif\n  #ifndef LEFT_INDEX_MOD\n  #define LEFT_INDEX_MOD INDEX_FINGER_MOD\n  #endif\n  #ifndef RIGHT_INDEX_MOD\n  #define RIGHT_INDEX_MOD INDEX_FINGER_MOD\n  #endif\n\n  //\n  // HOMEY_HOLDING_TYPE defines the flavor of ZMK hold-tap behavior to use\n  // for the pinky, ring, and middle fingers (which are assigned to Super,\n  // Alt, and Ctrl respectively in the Miryoku system) on home row keys.\n  //\n  #ifndef HOMEY_HOLDING_TYPE\n  #define HOMEY_HOLDING_TYPE \"tap-preferred\"\n  #endif\n\n  //\n  // HOMEY_HOLDING_TIME defines how long you need to hold (milliseconds)\n  // home row mod keys in order to send their modifiers to the computer\n  // (i.e. \"register\" them) for mod-click mouse usage (e.g. Ctrl-Click).\n  //\n  #ifndef HOMEY_HOLDING_TIME\n  #define HOMEY_HOLDING_TIME (TAPPING_RESOLUTION + 90)\n  #endif\n  #ifndef INDEX_HOLDING_TIME\n  #define INDEX_HOLDING_TIME (TAPPING_RESOLUTION + 40)\n  #endif\n  #ifndef MIDDY_HOLDING_TIME\n  #define MIDDY_HOLDING_TIME (TAPPING_RESOLUTION + 60)\n  #endif\n  #ifndef RINGY_HOLDING_TIME\n  #define RINGY_HOLDING_TIME (TAPPING_RESOLUTION + 90)\n  #endif\n  #ifndef PINKY_HOLDING_TIME\n  #define PINKY_HOLDING_TIME (TAPPING_RESOLUTION + 130)\n  #endif\n\n  //\n  // HOMEY_STREAK_DECAY defines how long you need to wait (milliseconds)\n  // after typing before you can use home row mods again.  It prevents\n  // unintended activation of home row mods when you're actively typing.\n  //\n  #ifndef HOMEY_STREAK_DECAY\n  #define HOMEY_STREAK_DECAY TAPPING_RESOLUTION\n  #endif\n\n  //\n  // HOMEY_REPEAT_DECAY defines how much time you have left (milliseconds)\n  // after tapping a key to hold it again in order to make it auto-repeat.\n  //\n  #ifndef HOMEY_REPEAT_DECAY\n  #define HOMEY_REPEAT_DECAY (TAPPING_RESOLUTION + 150)\n  #endif // \"tap then hold\" for key auto-repeat\n\n  //\n  // CHORD_HOLDING_TYPE defines the flavor of ZMK hold-tap behavior to use\n  // for chorded home row mods (secondary keypresses in multi-mod chords).\n  //\n  #ifndef CHORD_HOLDING_TYPE\n  #define CHORD_HOLDING_TYPE HOMEY_HOLDING_TYPE\n  #endif\n\n  //\n  // CHORD_HOLDING_TIME defines how long you need to hold (milliseconds)\n  // home row mod keys in order to send their modifiers to the computer\n  // (i.e. \"register\" them) for mod-click mouse usage (e.g. Ctrl-Click).\n  // This is specifically for secondary keypresses in multi-mod chords.\n  //\n  #ifndef CHORD_HOLDING_TIME\n  #define CHORD_HOLDING_TIME TAPPING_RESOLUTION\n  #endif\n\n  //\n  // CHORD_STREAK_DECAY defines how long you need to wait (milliseconds)\n  // after typing before you can use home row mods again.  It prevents\n  // unintended activation of home row mods when you're actively typing\n  // This is specifically for secondary keypresses in multi-mod chords.\n  //\n  #ifndef CHORD_STREAK_DECAY\n  #define CHORD_STREAK_DECAY HOMEY_STREAK_DECAY\n  #endif\n\n  //\n  // CHORD_REPEAT_DECAY defines how much time you have left (milliseconds)\n  // after tapping a key to hold it again in order to make it auto-repeat.\n  // This is specifically for secondary keypresses in multi-mod chords.\n  //\n  #ifndef CHORD_REPEAT_DECAY\n  #define CHORD_REPEAT_DECAY HOMEY_REPEAT_DECAY\n  #endif\n\n  //\n  // INDEX_HOLDING_TYPE defines the flavor of ZMK hold-tap behavior to use\n  // for index fingers (which Miryoku assigns to Shift) on home row keys.\n  //\n  // NOTE: The \"tap-preferred\" flavor of ZMK hold-tap for index finger keys\n  // allows faster activation of the Shift modifier (without having to wait\n  // for the modified key to be released as the \"balanced\" flavor requires).\n  //\n  #ifndef INDEX_HOLDING_TYPE\n  #define INDEX_HOLDING_TYPE \"tap-preferred\"\n  #endif\n\n  //\n  // INDEX_STREAK_DECAY defines how long you need to wait (milliseconds)\n  // after typing before you can use home row mods again.  It prevents\n  // unintended activation of home row mods when you're actively typing.\n  //\n  #ifndef INDEX_STREAK_DECAY\n  #define INDEX_STREAK_DECAY TAPPING_RESOLUTION\n  #endif\n\n  //\n  // INDEX_REPEAT_DECAY defines how much time you have left (milliseconds)\n  // after tapping a key to hold it again in order to make it auto-repeat.\n  //\n  #ifndef INDEX_REPEAT_DECAY\n  #define INDEX_REPEAT_DECAY (TAPPING_RESOLUTION + 150)\n  #endif // \"tap then hold\" for key auto-repeat\n\n  //\n  // THUMB_HOLDING_TYPE defines the flavor of ZMK hold-tap behavior to use\n  // for the thumbs (which are assigned to 6 layers in the Miryoku system).\n  //\n  // NOTE: The \"balanced\" flavor of ZMK hold-tap provides instant modifier\n  // activation for the symbol layer (if the tapped symbol key is released\n  // while the thumb layer key is still held down) for quicker programming.\n  //\n  #ifndef THUMB_HOLDING_TYPE\n  #define THUMB_HOLDING_TYPE \"balanced\"\n  #endif\n\n  //\n  // THUMB_HOLDING_TIME defines how long you need to hold (milliseconds)\n  // a thumb key to activate a layer.  Shorter holds are treated as taps.\n  //\n  #ifndef THUMB_HOLDING_TIME\n  #define THUMB_HOLDING_TIME (TAPPING_RESOLUTION + 50)\n  #endif\n\n  //\n  // THUMB_REPEAT_DECAY defines how much time you have left (milliseconds)\n  // after tapping a key to hold it again in order to make it auto-repeat.\n  //\n  #ifndef THUMB_REPEAT_DECAY\n  #define THUMB_REPEAT_DECAY (TAPPING_RESOLUTION + 150)\n  #endif // \"tap then hold\" for key auto-repeat\n\n  //\n  // SPACE_HOLDING_TYPE defines the flavor of ZMK hold-tap behavior to use\n  // for spacebar (assigned to the right thumb's home position by default).\n  //\n  #ifndef SPACE_HOLDING_TYPE\n  #define SPACE_HOLDING_TYPE THUMB_HOLDING_TYPE\n  #endif\n\n  //\n  // SPACE_HOLDING_TIME defines how long you need to hold (milliseconds)\n  // the space thumb key to activate.  Shorter holds are treated as taps.\n  //\n  #ifndef SPACE_HOLDING_TIME\n  #define SPACE_HOLDING_TIME THUMB_HOLDING_TIME\n  #endif\n\n  //\n  // SPACE_REPEAT_DECAY defines how much time you have left (milliseconds)\n  // after tapping a key to hold it again in order to make it auto-repeat.\n  //\n  #ifndef SPACE_REPEAT_DECAY\n  #define SPACE_REPEAT_DECAY TAPPING_RESOLUTION\n  #endif\n\n  //\n  // Glove80 key positions index for positional hold-tap\n  // - https://discord.com/channels/877392805654306816/937645688244826154/1066713913351221248\n  // - https://media.discordapp.net/attachments/937645688244826154/1066713913133121556/image.png\n  //\n  // |------------------------|------------------------|\n  // | LEFT_HAND_KEYS         |        RIGHT_HAND_KEYS |\n  // |                        |                        |\n  // |  0  1  2  3  4         |          5  6  7  8  9 |\n  // | 10 11 12 13 14 15      |      16 17 18 19 20 21 |\n  // | 22 23 24 25 26 27      |      28 29 30 31 32 33 |\n  // | 34 35 36 37 38 39      |      40 41 42 43 44 45 |\n  // | 46 47 48 49 50 51      |      58 59 60 61 62 63 |\n  // | 64 65 66 67 68         |         75 76 77 78 79 |\n  // |                69 52   |   57 74                |\n  // |                 70 53  |  56 73                 |\n  // |                  71 54 | 55 72                  |\n  // |------------------------|------------------------|\n  //\n  #define                                              \\\n       LEFT_HAND_KEYS                                  \\\n        0  1  2  3  4                                  \\\n       10 11 12 13 14 15                               \\\n       22 23 24 25 26 27                               \\\n       34 35 36 37 38 39                               \\\n       46 47 48 49 50 51                               \\\n       64 65 66 67 68                                  \\\n                      69 52                            \\\n                       70 53                           \\\n                        71 54\n  #define                                              \\\n                                       RIGHT_HAND_KEYS \\\n                                         5  6  7  8  9 \\\n                                     16 17 18 19 20 21 \\\n                                     28 29 30 31 32 33 \\\n                                     40 41 42 43 44 45 \\\n                                     58 59 60 61 62 63 \\\n                                        75 76 77 78 79 \\\n                                  57 74                \\\n                                 56 73                 \\\n                                55 72\n\n  #define LEFT_PINKY_KEY  KEY_LH_C5R4\n  #define LEFT_RINGY_KEY  KEY_LH_C4R4\n  #define LEFT_MIDDY_KEY  KEY_LH_C3R4\n  #define LEFT_INDEX_KEY  KEY_LH_C2R4\n\n  #define RIGHT_PINKY_KEY KEY_RH_C5R4\n  #define RIGHT_RINGY_KEY KEY_RH_C4R4\n  #define RIGHT_MIDDY_KEY KEY_RH_C3R4\n  #define RIGHT_INDEX_KEY KEY_RH_C2R4\n\n  //\n  // Home row mods with bilateral combinations support\n  //\n  #ifndef PINKY_HOLDING_TYPE\n  #define PINKY_HOLDING_TYPE HOMEY_HOLDING_TYPE\n  #endif\n  #ifndef PINKY_CHORD_HOLDING_TYPE\n  #define PINKY_CHORD_HOLDING_TYPE CHORD_HOLDING_TYPE\n  #endif\n  #ifndef LEFT_PINKY_CHORD_HOLDING_TYPE\n  #define LEFT_PINKY_CHORD_HOLDING_TYPE PINKY_CHORD_HOLDING_TYPE\n  #endif\n  #ifndef RIGHT_PINKY_CHORD_HOLDING_TYPE\n  #define RIGHT_PINKY_CHORD_HOLDING_TYPE PINKY_CHORD_HOLDING_TYPE\n  #endif\n  #ifndef PINKY_HOLDING_TIME\n  #define PINKY_HOLDING_TIME HOMEY_HOLDING_TIME\n  #endif\n  #ifndef PINKY_CHORD_HOLDING_TIME\n  #define PINKY_CHORD_HOLDING_TIME CHORD_HOLDING_TIME\n  #endif\n  #ifndef LEFT_PINKY_CHORD_HOLDING_TIME\n  #define LEFT_PINKY_CHORD_HOLDING_TIME PINKY_CHORD_HOLDING_TIME\n  #endif\n  #ifndef RIGHT_PINKY_CHORD_HOLDING_TIME\n  #define RIGHT_PINKY_CHORD_HOLDING_TIME PINKY_CHORD_HOLDING_TIME\n  #endif\n  #ifndef PINKY_STREAK_DECAY\n  #define PINKY_STREAK_DECAY HOMEY_STREAK_DECAY\n  #endif\n  #ifndef PINKY_CHORD_STREAK_DECAY\n  #define PINKY_CHORD_STREAK_DECAY CHORD_STREAK_DECAY\n  #endif\n  #ifndef LEFT_PINKY_CHORD_STREAK_DECAY\n  #define LEFT_PINKY_CHORD_STREAK_DECAY PINKY_CHORD_STREAK_DECAY\n  #endif\n  #ifndef RIGHT_PINKY_CHORD_STREAK_DECAY\n  #define RIGHT_PINKY_CHORD_STREAK_DECAY PINKY_CHORD_STREAK_DECAY\n  #endif\n  #ifndef PINKY_REPEAT_DECAY\n  #define PINKY_REPEAT_DECAY HOMEY_REPEAT_DECAY\n  #endif\n  #ifndef PINKY_CHORD_REPEAT_DECAY\n  #define PINKY_CHORD_REPEAT_DECAY CHORD_REPEAT_DECAY\n  #endif\n  #ifndef LEFT_PINKY_CHORD_REPEAT_DECAY\n  #define LEFT_PINKY_CHORD_REPEAT_DECAY PINKY_CHORD_REPEAT_DECAY\n  #endif\n  #ifndef RIGHT_PINKY_CHORD_REPEAT_DECAY\n  #define RIGHT_PINKY_CHORD_REPEAT_DECAY PINKY_CHORD_REPEAT_DECAY\n  #endif\n  #ifndef RINGY_HOLDING_TYPE\n  #define RINGY_HOLDING_TYPE HOMEY_HOLDING_TYPE\n  #endif\n  #ifndef RINGY_CHORD_HOLDING_TYPE\n  #define RINGY_CHORD_HOLDING_TYPE CHORD_HOLDING_TYPE\n  #endif\n  #ifndef LEFT_RINGY_CHORD_HOLDING_TYPE\n  #define LEFT_RINGY_CHORD_HOLDING_TYPE RINGY_CHORD_HOLDING_TYPE\n  #endif\n  #ifndef RIGHT_RINGY_CHORD_HOLDING_TYPE\n  #define RIGHT_RINGY_CHORD_HOLDING_TYPE RINGY_CHORD_HOLDING_TYPE\n  #endif\n  #ifndef RINGY_HOLDING_TIME\n  #define RINGY_HOLDING_TIME HOMEY_HOLDING_TIME\n  #endif\n  #ifndef RINGY_CHORD_HOLDING_TIME\n  #define RINGY_CHORD_HOLDING_TIME CHORD_HOLDING_TIME\n  #endif\n  #ifndef LEFT_RINGY_CHORD_HOLDING_TIME\n  #define LEFT_RINGY_CHORD_HOLDING_TIME RINGY_CHORD_HOLDING_TIME\n  #endif\n  #ifndef RIGHT_RINGY_CHORD_HOLDING_TIME\n  #define RIGHT_RINGY_CHORD_HOLDING_TIME RINGY_CHORD_HOLDING_TIME\n  #endif\n  #ifndef RINGY_STREAK_DECAY\n  #define RINGY_STREAK_DECAY HOMEY_STREAK_DECAY\n  #endif\n  #ifndef RINGY_CHORD_STREAK_DECAY\n  #define RINGY_CHORD_STREAK_DECAY CHORD_STREAK_DECAY\n  #endif\n  #ifndef LEFT_RINGY_CHORD_STREAK_DECAY\n  #define LEFT_RINGY_CHORD_STREAK_DECAY RINGY_CHORD_STREAK_DECAY\n  #endif\n  #ifndef RIGHT_RINGY_CHORD_STREAK_DECAY\n  #define RIGHT_RINGY_CHORD_STREAK_DECAY RINGY_CHORD_STREAK_DECAY\n  #endif\n  #ifndef RINGY_REPEAT_DECAY\n  #define RINGY_REPEAT_DECAY HOMEY_REPEAT_DECAY\n  #endif\n  #ifndef RINGY_CHORD_REPEAT_DECAY\n  #define RINGY_CHORD_REPEAT_DECAY CHORD_REPEAT_DECAY\n  #endif\n  #ifndef LEFT_RINGY_CHORD_REPEAT_DECAY\n  #define LEFT_RINGY_CHORD_REPEAT_DECAY RINGY_CHORD_REPEAT_DECAY\n  #endif\n  #ifndef RIGHT_RINGY_CHORD_REPEAT_DECAY\n  #define RIGHT_RINGY_CHORD_REPEAT_DECAY RINGY_CHORD_REPEAT_DECAY\n  #endif\n  #ifndef MIDDY_HOLDING_TYPE\n  #define MIDDY_HOLDING_TYPE HOMEY_HOLDING_TYPE\n  #endif\n  #ifndef MIDDY_CHORD_HOLDING_TYPE\n  #define MIDDY_CHORD_HOLDING_TYPE CHORD_HOLDING_TYPE\n  #endif\n  #ifndef LEFT_MIDDY_CHORD_HOLDING_TYPE\n  #define LEFT_MIDDY_CHORD_HOLDING_TYPE MIDDY_CHORD_HOLDING_TYPE\n  #endif\n  #ifndef RIGHT_MIDDY_CHORD_HOLDING_TYPE\n  #define RIGHT_MIDDY_CHORD_HOLDING_TYPE MIDDY_CHORD_HOLDING_TYPE\n  #endif\n  #ifndef MIDDY_HOLDING_TIME\n  #define MIDDY_HOLDING_TIME HOMEY_HOLDING_TIME\n  #endif\n  #ifndef MIDDY_CHORD_HOLDING_TIME\n  #define MIDDY_CHORD_HOLDING_TIME CHORD_HOLDING_TIME\n  #endif\n  #ifndef LEFT_MIDDY_CHORD_HOLDING_TIME\n  #define LEFT_MIDDY_CHORD_HOLDING_TIME MIDDY_CHORD_HOLDING_TIME\n  #endif\n  #ifndef RIGHT_MIDDY_CHORD_HOLDING_TIME\n  #define RIGHT_MIDDY_CHORD_HOLDING_TIME MIDDY_CHORD_HOLDING_TIME\n  #endif\n  #ifndef MIDDY_STREAK_DECAY\n  #define MIDDY_STREAK_DECAY HOMEY_STREAK_DECAY\n  #endif\n  #ifndef MIDDY_CHORD_STREAK_DECAY\n  #define MIDDY_CHORD_STREAK_DECAY CHORD_STREAK_DECAY\n  #endif\n  #ifndef LEFT_MIDDY_CHORD_STREAK_DECAY\n  #define LEFT_MIDDY_CHORD_STREAK_DECAY MIDDY_CHORD_STREAK_DECAY\n  #endif\n  #ifndef RIGHT_MIDDY_CHORD_STREAK_DECAY\n  #define RIGHT_MIDDY_CHORD_STREAK_DECAY MIDDY_CHORD_STREAK_DECAY\n  #endif\n  #ifndef MIDDY_REPEAT_DECAY\n  #define MIDDY_REPEAT_DECAY HOMEY_REPEAT_DECAY\n  #endif\n  #ifndef MIDDY_CHORD_REPEAT_DECAY\n  #define MIDDY_CHORD_REPEAT_DECAY CHORD_REPEAT_DECAY\n  #endif\n  #ifndef LEFT_MIDDY_CHORD_REPEAT_DECAY\n  #define LEFT_MIDDY_CHORD_REPEAT_DECAY MIDDY_CHORD_REPEAT_DECAY\n  #endif\n  #ifndef RIGHT_MIDDY_CHORD_REPEAT_DECAY\n  #define RIGHT_MIDDY_CHORD_REPEAT_DECAY MIDDY_CHORD_REPEAT_DECAY\n  #endif\n  #ifndef INDEX_HOLDING_TYPE\n  #define INDEX_HOLDING_TYPE HOMEY_HOLDING_TYPE\n  #endif\n  #ifndef INDEX_CHORD_HOLDING_TYPE\n  #define INDEX_CHORD_HOLDING_TYPE CHORD_HOLDING_TYPE\n  #endif\n  #ifndef LEFT_INDEX_CHORD_HOLDING_TYPE\n  #define LEFT_INDEX_CHORD_HOLDING_TYPE INDEX_CHORD_HOLDING_TYPE\n  #endif\n  #ifndef RIGHT_INDEX_CHORD_HOLDING_TYPE\n  #define RIGHT_INDEX_CHORD_HOLDING_TYPE INDEX_CHORD_HOLDING_TYPE\n  #endif\n  #ifndef INDEX_HOLDING_TIME\n  #define INDEX_HOLDING_TIME HOMEY_HOLDING_TIME\n  #endif\n  #ifndef INDEX_CHORD_HOLDING_TIME\n  #define INDEX_CHORD_HOLDING_TIME CHORD_HOLDING_TIME\n  #endif\n  #ifndef LEFT_INDEX_CHORD_HOLDING_TIME\n  #define LEFT_INDEX_CHORD_HOLDING_TIME INDEX_CHORD_HOLDING_TIME\n  #endif\n  #ifndef RIGHT_INDEX_CHORD_HOLDING_TIME\n  #define RIGHT_INDEX_CHORD_HOLDING_TIME INDEX_CHORD_HOLDING_TIME\n  #endif\n  #ifndef INDEX_STREAK_DECAY\n  #define INDEX_STREAK_DECAY HOMEY_STREAK_DECAY\n  #endif\n  #ifndef INDEX_CHORD_STREAK_DECAY\n  #define INDEX_CHORD_STREAK_DECAY CHORD_STREAK_DECAY\n  #endif\n  #ifndef LEFT_INDEX_CHORD_STREAK_DECAY\n  #define LEFT_INDEX_CHORD_STREAK_DECAY INDEX_CHORD_STREAK_DECAY\n  #endif\n  #ifndef RIGHT_INDEX_CHORD_STREAK_DECAY\n  #define RIGHT_INDEX_CHORD_STREAK_DECAY INDEX_CHORD_STREAK_DECAY\n  #endif\n  #ifndef INDEX_REPEAT_DECAY\n  #define INDEX_REPEAT_DECAY HOMEY_REPEAT_DECAY\n  #endif\n  #ifndef INDEX_CHORD_REPEAT_DECAY\n  #define INDEX_CHORD_REPEAT_DECAY CHORD_REPEAT_DECAY\n  #endif\n  #ifndef LEFT_INDEX_CHORD_REPEAT_DECAY\n  #define LEFT_INDEX_CHORD_REPEAT_DECAY INDEX_CHORD_REPEAT_DECAY\n  #endif\n  #ifndef RIGHT_INDEX_CHORD_REPEAT_DECAY\n  #define RIGHT_INDEX_CHORD_REPEAT_DECAY INDEX_CHORD_REPEAT_DECAY\n  #endif\n  #ifndef LEFT_PINKY_HOLDING_TYPE\n  #define LEFT_PINKY_HOLDING_TYPE PINKY_HOLDING_TYPE\n  #endif\n  #ifndef LEFT_PINKY_HOLDING_TIME\n  #define LEFT_PINKY_HOLDING_TIME PINKY_HOLDING_TIME\n  #endif\n  #ifndef LEFT_PINKY_STREAK_DECAY\n  #define LEFT_PINKY_STREAK_DECAY PINKY_STREAK_DECAY\n  #endif\n  #ifndef LEFT_PINKY_REPEAT_DECAY\n  #define LEFT_PINKY_REPEAT_DECAY PINKY_REPEAT_DECAY\n  #endif\n  left_pinky: homey_left_pinky {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = LEFT_PINKY_HOLDING_TYPE;\n    hold-trigger-key-positions = <RIGHT_HAND_KEYS>;\n    hold-trigger-on-release; // wait for other home row mods\n    tapping-term-ms = <LEFT_PINKY_HOLDING_TIME>;\n    quick-tap-ms = <LEFT_PINKY_REPEAT_DECAY>;\n    require-prior-idle-ms = <LEFT_PINKY_STREAK_DECAY>;\n    #binding-cells = <2>;\n    bindings = <&kp>, <&kp>;\n    #ifdef SHIFT_FORGIVENESS\n      #if LEFT_PINKY_MOD == LSFT || LEFT_PINKY_MOD == RSFT\n        hold-while-undecided; // requires 24.08-beta1 or newer firmware\n        retro-tap; // tap on standalone hold\n      #endif\n    #endif\n  };\n  left_pinky_bilateral: homey_left_pinky_bilateral {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = LEFT_PINKY_HOLDING_TYPE;\n    hold-trigger-key-positions = <RIGHT_HAND_KEYS>;\n    hold-trigger-on-release; // wait for other home row mods\n    tapping-term-ms = <LEFT_PINKY_HOLDING_TIME>;\n    quick-tap-ms = <LEFT_PINKY_REPEAT_DECAY>;\n    require-prior-idle-ms = <LEFT_PINKY_STREAK_DECAY>;\n    #binding-cells = <2>;\n    bindings = <&left_pinky_hold>, <&kp>;\n    #ifdef SHIFT_FORGIVENESS\n      #if LEFT_PINKY_MOD == LSFT || LEFT_PINKY_MOD == RSFT\n        hold-while-undecided; // requires 24.08-beta1 or newer firmware\n        retro-tap; // tap on standalone hold\n      #endif\n    #endif\n  };\n  left_pinky_hold: homey_left_pinky_hold {\n    compatible = \"zmk,behavior-macro-one-param\";\n    wait-ms = <0>;\n    tap-ms = <0>;\n    #binding-cells = <1>;\n    bindings\n      = <&macro_param_1to1>\n      , <&macro_press &kp MACRO_PLACEHOLDER>\n      #ifdef LAYER_LeftPinky\n      , <&macro_press &mo LAYER_LeftPinky>\n      #endif\n      , <&macro_pause_for_release>\n      , <&macro_param_1to1>\n      , <&macro_release &kp MACRO_PLACEHOLDER>\n      #ifdef LAYER_LeftPinky\n      , <&macro_release &mo LAYER_LeftPinky>\n      #endif\n      ;\n  };\n  left_pinky_tap: homey_left_pinky_tap {\n    compatible = \"zmk,behavior-macro-one-param\";\n    wait-ms = <0>;\n    tap-ms = <0>;\n    #binding-cells = <1>;\n    bindings\n      = <&macro_release\n          &kp LSFT &kp RSFT\n          &kp LALT &kp RALT\n          &kp LCTL &kp RCTL\n          &kp LGUI &kp RGUI>\n      , <&macro_tap &kp LEFT_PINKY_KEY>\n      , <&macro_param_1to1>\n      , <&macro_tap &kp MACRO_PLACEHOLDER>\n      ;\n  };\n  #define LeftPinky(key, layer_index) LeftPinky_unroll(layer_index) (key)\n  #define LeftPinky_unroll(layer_index) LeftPinky_concat(LeftPinky_layer, layer_index)\n  #define LeftPinky_concat(prefix, layer_index) prefix ## layer_index\n  #ifdef ENFORCE_BILATERAL\n    #define left_pinky_layer0_variant left_pinky_bilateral\n  #else\n    #define left_pinky_layer0_variant left_pinky\n  #endif\n  #define LeftPinky_layer0(key) left_pinky_layer0_variant LEFT_PINKY_MOD key\n  #define LeftPinky_layer1(key) left_pinky LEFT_PINKY_MOD key\n  #define LeftPinky_layer2(key) left_pinky LEFT_PINKY_MOD key\n  #define LeftPinky_layer3(key) left_pinky LEFT_PINKY_MOD key\n  #define LeftPinky_layer4(key) left_pinky LEFT_PINKY_MOD key\n  #define LeftPinky_layer5(key) left_pinky LEFT_PINKY_MOD key\n  #define LeftPinky_layer6(key) left_pinky LEFT_PINKY_MOD key\n  #ifndef RIGHT_PINKY_HOLDING_TYPE\n  #define RIGHT_PINKY_HOLDING_TYPE PINKY_HOLDING_TYPE\n  #endif\n  #ifndef RIGHT_PINKY_HOLDING_TIME\n  #define RIGHT_PINKY_HOLDING_TIME PINKY_HOLDING_TIME\n  #endif\n  #ifndef RIGHT_PINKY_STREAK_DECAY\n  #define RIGHT_PINKY_STREAK_DECAY PINKY_STREAK_DECAY\n  #endif\n  #ifndef RIGHT_PINKY_REPEAT_DECAY\n  #define RIGHT_PINKY_REPEAT_DECAY PINKY_REPEAT_DECAY\n  #endif\n  right_pinky: homey_right_pinky {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = RIGHT_PINKY_HOLDING_TYPE;\n    hold-trigger-key-positions = <LEFT_HAND_KEYS>;\n    hold-trigger-on-release; // wait for other home row mods\n    tapping-term-ms = <RIGHT_PINKY_HOLDING_TIME>;\n    quick-tap-ms = <RIGHT_PINKY_REPEAT_DECAY>;\n    require-prior-idle-ms = <RIGHT_PINKY_STREAK_DECAY>;\n    #binding-cells = <2>;\n    bindings = <&kp>, <&kp>;\n    #ifdef SHIFT_FORGIVENESS\n      #if RIGHT_PINKY_MOD == LSFT || RIGHT_PINKY_MOD == RSFT\n        hold-while-undecided; // requires 24.08-beta1 or newer firmware\n        retro-tap; // tap on standalone hold\n      #endif\n    #endif\n  };\n  right_pinky_bilateral: homey_right_pinky_bilateral {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = RIGHT_PINKY_HOLDING_TYPE;\n    hold-trigger-key-positions = <LEFT_HAND_KEYS>;\n    hold-trigger-on-release; // wait for other home row mods\n    tapping-term-ms = <RIGHT_PINKY_HOLDING_TIME>;\n    quick-tap-ms = <RIGHT_PINKY_REPEAT_DECAY>;\n    require-prior-idle-ms = <RIGHT_PINKY_STREAK_DECAY>;\n    #binding-cells = <2>;\n    bindings = <&right_pinky_hold>, <&kp>;\n    #ifdef SHIFT_FORGIVENESS\n      #if RIGHT_PINKY_MOD == LSFT || RIGHT_PINKY_MOD == RSFT\n        hold-while-undecided; // requires 24.08-beta1 or newer firmware\n        retro-tap; // tap on standalone hold\n      #endif\n    #endif\n  };\n  right_pinky_hold: homey_right_pinky_hold {\n    compatible = \"zmk,behavior-macro-one-param\";\n    wait-ms = <0>;\n    tap-ms = <0>;\n    #binding-cells = <1>;\n    bindings\n      = <&macro_param_1to1>\n      , <&macro_press &kp MACRO_PLACEHOLDER>\n      #ifdef LAYER_RightPinky\n      , <&macro_press &mo LAYER_RightPinky>\n      #endif\n      , <&macro_pause_for_release>\n      , <&macro_param_1to1>\n      , <&macro_release &kp MACRO_PLACEHOLDER>\n      #ifdef LAYER_RightPinky\n      , <&macro_release &mo LAYER_RightPinky>\n      #endif\n      ;\n  };\n  right_pinky_tap: homey_right_pinky_tap {\n    compatible = \"zmk,behavior-macro-one-param\";\n    wait-ms = <0>;\n    tap-ms = <0>;\n    #binding-cells = <1>;\n    bindings\n      = <&macro_release\n          &kp LSFT &kp RSFT\n          &kp LALT &kp RALT\n          &kp LCTL &kp RCTL\n          &kp LGUI &kp RGUI>\n      , <&macro_tap &kp RIGHT_PINKY_KEY>\n      , <&macro_param_1to1>\n      , <&macro_tap &kp MACRO_PLACEHOLDER>\n      ;\n  };\n  #define RightPinky(key, layer_index) RightPinky_unroll(layer_index) (key)\n  #define RightPinky_unroll(layer_index) RightPinky_concat(RightPinky_layer, layer_index)\n  #define RightPinky_concat(prefix, layer_index) prefix ## layer_index\n  #ifdef ENFORCE_BILATERAL\n    #define right_pinky_layer0_variant right_pinky_bilateral\n  #else\n    #define right_pinky_layer0_variant right_pinky\n  #endif\n  #define RightPinky_layer0(key) right_pinky_layer0_variant RIGHT_PINKY_MOD key\n  #define RightPinky_layer1(key) right_pinky RIGHT_PINKY_MOD key\n  #define RightPinky_layer2(key) right_pinky RIGHT_PINKY_MOD key\n  #define RightPinky_layer3(key) right_pinky RIGHT_PINKY_MOD key\n  #define RightPinky_layer4(key) right_pinky RIGHT_PINKY_MOD key\n  #define RightPinky_layer5(key) right_pinky RIGHT_PINKY_MOD key\n  #define RightPinky_layer6(key) right_pinky RIGHT_PINKY_MOD key\n  #ifndef LEFT_RINGY_HOLDING_TYPE\n  #define LEFT_RINGY_HOLDING_TYPE RINGY_HOLDING_TYPE\n  #endif\n  #ifndef LEFT_RINGY_HOLDING_TIME\n  #define LEFT_RINGY_HOLDING_TIME RINGY_HOLDING_TIME\n  #endif\n  #ifndef LEFT_RINGY_STREAK_DECAY\n  #define LEFT_RINGY_STREAK_DECAY RINGY_STREAK_DECAY\n  #endif\n  #ifndef LEFT_RINGY_REPEAT_DECAY\n  #define LEFT_RINGY_REPEAT_DECAY RINGY_REPEAT_DECAY\n  #endif\n  left_ringy: homey_left_ringy {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = LEFT_RINGY_HOLDING_TYPE;\n    hold-trigger-key-positions = <RIGHT_HAND_KEYS>;\n    hold-trigger-on-release; // wait for other home row mods\n    tapping-term-ms = <LEFT_RINGY_HOLDING_TIME>;\n    quick-tap-ms = <LEFT_RINGY_REPEAT_DECAY>;\n    require-prior-idle-ms = <LEFT_RINGY_STREAK_DECAY>;\n    #binding-cells = <2>;\n    bindings = <&kp>, <&kp>;\n    #ifdef SHIFT_FORGIVENESS\n      #if LEFT_RINGY_MOD == LSFT || LEFT_RINGY_MOD == RSFT\n        hold-while-undecided; // requires 24.08-beta1 or newer firmware\n        retro-tap; // tap on standalone hold\n      #endif\n    #endif\n  };\n  left_ringy_bilateral: homey_left_ringy_bilateral {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = LEFT_RINGY_HOLDING_TYPE;\n    hold-trigger-key-positions = <RIGHT_HAND_KEYS>;\n    hold-trigger-on-release; // wait for other home row mods\n    tapping-term-ms = <LEFT_RINGY_HOLDING_TIME>;\n    quick-tap-ms = <LEFT_RINGY_REPEAT_DECAY>;\n    require-prior-idle-ms = <LEFT_RINGY_STREAK_DECAY>;\n    #binding-cells = <2>;\n    bindings = <&left_ringy_hold>, <&kp>;\n    #ifdef SHIFT_FORGIVENESS\n      #if LEFT_RINGY_MOD == LSFT || LEFT_RINGY_MOD == RSFT\n        hold-while-undecided; // requires 24.08-beta1 or newer firmware\n        retro-tap; // tap on standalone hold\n      #endif\n    #endif\n  };\n  left_ringy_hold: homey_left_ringy_hold {\n    compatible = \"zmk,behavior-macro-one-param\";\n    wait-ms = <0>;\n    tap-ms = <0>;\n    #binding-cells = <1>;\n    bindings\n      = <&macro_param_1to1>\n      , <&macro_press &kp MACRO_PLACEHOLDER>\n      #ifdef LAYER_LeftRingy\n      , <&macro_press &mo LAYER_LeftRingy>\n      #endif\n      , <&macro_pause_for_release>\n      , <&macro_param_1to1>\n      , <&macro_release &kp MACRO_PLACEHOLDER>\n      #ifdef LAYER_LeftRingy\n      , <&macro_release &mo LAYER_LeftRingy>\n      #endif\n      ;\n  };\n  left_ringy_tap: homey_left_ringy_tap {\n    compatible = \"zmk,behavior-macro-one-param\";\n    wait-ms = <0>;\n    tap-ms = <0>;\n    #binding-cells = <1>;\n    bindings\n      = <&macro_release\n          &kp LSFT &kp RSFT\n          &kp LALT &kp RALT\n          &kp LCTL &kp RCTL\n          &kp LGUI &kp RGUI>\n      , <&macro_tap &kp LEFT_RINGY_KEY>\n      , <&macro_param_1to1>\n      , <&macro_tap &kp MACRO_PLACEHOLDER>\n      ;\n  };\n  #define LeftRingy(key, layer_index) LeftRingy_unroll(layer_index) (key)\n  #define LeftRingy_unroll(layer_index) LeftRingy_concat(LeftRingy_layer, layer_index)\n  #define LeftRingy_concat(prefix, layer_index) prefix ## layer_index\n  #ifdef ENFORCE_BILATERAL\n    #define left_ringy_layer0_variant left_ringy_bilateral\n  #else\n    #define left_ringy_layer0_variant left_ringy\n  #endif\n  #define LeftRingy_layer0(key) left_ringy_layer0_variant LEFT_RINGY_MOD key\n  #define LeftRingy_layer1(key) left_ringy LEFT_RINGY_MOD key\n  #define LeftRingy_layer2(key) left_ringy LEFT_RINGY_MOD key\n  #define LeftRingy_layer3(key) left_ringy LEFT_RINGY_MOD key\n  #define LeftRingy_layer4(key) left_ringy LEFT_RINGY_MOD key\n  #define LeftRingy_layer5(key) left_ringy LEFT_RINGY_MOD key\n  #define LeftRingy_layer6(key) left_ringy LEFT_RINGY_MOD key\n  #ifndef RIGHT_RINGY_HOLDING_TYPE\n  #define RIGHT_RINGY_HOLDING_TYPE RINGY_HOLDING_TYPE\n  #endif\n  #ifndef RIGHT_RINGY_HOLDING_TIME\n  #define RIGHT_RINGY_HOLDING_TIME RINGY_HOLDING_TIME\n  #endif\n  #ifndef RIGHT_RINGY_STREAK_DECAY\n  #define RIGHT_RINGY_STREAK_DECAY RINGY_STREAK_DECAY\n  #endif\n  #ifndef RIGHT_RINGY_REPEAT_DECAY\n  #define RIGHT_RINGY_REPEAT_DECAY RINGY_REPEAT_DECAY\n  #endif\n  right_ringy: homey_right_ringy {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = RIGHT_RINGY_HOLDING_TYPE;\n    hold-trigger-key-positions = <LEFT_HAND_KEYS>;\n    hold-trigger-on-release; // wait for other home row mods\n    tapping-term-ms = <RIGHT_RINGY_HOLDING_TIME>;\n    quick-tap-ms = <RIGHT_RINGY_REPEAT_DECAY>;\n    require-prior-idle-ms = <RIGHT_RINGY_STREAK_DECAY>;\n    #binding-cells = <2>;\n    bindings = <&kp>, <&kp>;\n    #ifdef SHIFT_FORGIVENESS\n      #if RIGHT_RINGY_MOD == LSFT || RIGHT_RINGY_MOD == RSFT\n        hold-while-undecided; // requires 24.08-beta1 or newer firmware\n        retro-tap; // tap on standalone hold\n      #endif\n    #endif\n  };\n  right_ringy_bilateral: homey_right_ringy_bilateral {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = RIGHT_RINGY_HOLDING_TYPE;\n    hold-trigger-key-positions = <LEFT_HAND_KEYS>;\n    hold-trigger-on-release; // wait for other home row mods\n    tapping-term-ms = <RIGHT_RINGY_HOLDING_TIME>;\n    quick-tap-ms = <RIGHT_RINGY_REPEAT_DECAY>;\n    require-prior-idle-ms = <RIGHT_RINGY_STREAK_DECAY>;\n    #binding-cells = <2>;\n    bindings = <&right_ringy_hold>, <&kp>;\n    #ifdef SHIFT_FORGIVENESS\n      #if RIGHT_RINGY_MOD == LSFT || RIGHT_RINGY_MOD == RSFT\n        hold-while-undecided; // requires 24.08-beta1 or newer firmware\n        retro-tap; // tap on standalone hold\n      #endif\n    #endif\n  };\n  right_ringy_hold: homey_right_ringy_hold {\n    compatible = \"zmk,behavior-macro-one-param\";\n    wait-ms = <0>;\n    tap-ms = <0>;\n    #binding-cells = <1>;\n    bindings\n      = <&macro_param_1to1>\n      , <&macro_press &kp MACRO_PLACEHOLDER>\n      #ifdef LAYER_RightRingy\n      , <&macro_press &mo LAYER_RightRingy>\n      #endif\n      , <&macro_pause_for_release>\n      , <&macro_param_1to1>\n      , <&macro_release &kp MACRO_PLACEHOLDER>\n      #ifdef LAYER_RightRingy\n      , <&macro_release &mo LAYER_RightRingy>\n      #endif\n      ;\n  };\n  right_ringy_tap: homey_right_ringy_tap {\n    compatible = \"zmk,behavior-macro-one-param\";\n    wait-ms = <0>;\n    tap-ms = <0>;\n    #binding-cells = <1>;\n    bindings\n      = <&macro_release\n          &kp LSFT &kp RSFT\n          &kp LALT &kp RALT\n          &kp LCTL &kp RCTL\n          &kp LGUI &kp RGUI>\n      , <&macro_tap &kp RIGHT_RINGY_KEY>\n      , <&macro_param_1to1>\n      , <&macro_tap &kp MACRO_PLACEHOLDER>\n      ;\n  };\n  #define RightRingy(key, layer_index) RightRingy_unroll(layer_index) (key)\n  #define RightRingy_unroll(layer_index) RightRingy_concat(RightRingy_layer, layer_index)\n  #define RightRingy_concat(prefix, layer_index) prefix ## layer_index\n  #ifdef ENFORCE_BILATERAL\n    #define right_ringy_layer0_variant right_ringy_bilateral\n  #else\n    #define right_ringy_layer0_variant right_ringy\n  #endif\n  #define RightRingy_layer0(key) right_ringy_layer0_variant RIGHT_RINGY_MOD key\n  #define RightRingy_layer1(key) right_ringy RIGHT_RINGY_MOD key\n  #define RightRingy_layer2(key) right_ringy RIGHT_RINGY_MOD key\n  #define RightRingy_layer3(key) right_ringy RIGHT_RINGY_MOD key\n  #define RightRingy_layer4(key) right_ringy RIGHT_RINGY_MOD key\n  #define RightRingy_layer5(key) right_ringy RIGHT_RINGY_MOD key\n  #define RightRingy_layer6(key) right_ringy RIGHT_RINGY_MOD key\n  #ifndef LEFT_MIDDY_HOLDING_TYPE\n  #define LEFT_MIDDY_HOLDING_TYPE MIDDY_HOLDING_TYPE\n  #endif\n  #ifndef LEFT_MIDDY_HOLDING_TIME\n  #define LEFT_MIDDY_HOLDING_TIME MIDDY_HOLDING_TIME\n  #endif\n  #ifndef LEFT_MIDDY_STREAK_DECAY\n  #define LEFT_MIDDY_STREAK_DECAY MIDDY_STREAK_DECAY\n  #endif\n  #ifndef LEFT_MIDDY_REPEAT_DECAY\n  #define LEFT_MIDDY_REPEAT_DECAY MIDDY_REPEAT_DECAY\n  #endif\n  left_middy: homey_left_middy {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = LEFT_MIDDY_HOLDING_TYPE;\n    hold-trigger-key-positions = <RIGHT_HAND_KEYS>;\n    hold-trigger-on-release; // wait for other home row mods\n    tapping-term-ms = <LEFT_MIDDY_HOLDING_TIME>;\n    quick-tap-ms = <LEFT_MIDDY_REPEAT_DECAY>;\n    require-prior-idle-ms = <LEFT_MIDDY_STREAK_DECAY>;\n    #binding-cells = <2>;\n    bindings = <&kp>, <&kp>;\n    #ifdef SHIFT_FORGIVENESS\n      #if LEFT_MIDDY_MOD == LSFT || LEFT_MIDDY_MOD == RSFT\n        hold-while-undecided; // requires 24.08-beta1 or newer firmware\n        retro-tap; // tap on standalone hold\n      #endif\n    #endif\n  };\n  left_middy_bilateral: homey_left_middy_bilateral {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = LEFT_MIDDY_HOLDING_TYPE;\n    hold-trigger-key-positions = <RIGHT_HAND_KEYS>;\n    hold-trigger-on-release; // wait for other home row mods\n    tapping-term-ms = <LEFT_MIDDY_HOLDING_TIME>;\n    quick-tap-ms = <LEFT_MIDDY_REPEAT_DECAY>;\n    require-prior-idle-ms = <LEFT_MIDDY_STREAK_DECAY>;\n    #binding-cells = <2>;\n    bindings = <&left_middy_hold>, <&kp>;\n    #ifdef SHIFT_FORGIVENESS\n      #if LEFT_MIDDY_MOD == LSFT || LEFT_MIDDY_MOD == RSFT\n        hold-while-undecided; // requires 24.08-beta1 or newer firmware\n        retro-tap; // tap on standalone hold\n      #endif\n    #endif\n  };\n  left_middy_hold: homey_left_middy_hold {\n    compatible = \"zmk,behavior-macro-one-param\";\n    wait-ms = <0>;\n    tap-ms = <0>;\n    #binding-cells = <1>;\n    bindings\n      = <&macro_param_1to1>\n      , <&macro_press &kp MACRO_PLACEHOLDER>\n      #ifdef LAYER_LeftMiddy\n      , <&macro_press &mo LAYER_LeftMiddy>\n      #endif\n      , <&macro_pause_for_release>\n      , <&macro_param_1to1>\n      , <&macro_release &kp MACRO_PLACEHOLDER>\n      #ifdef LAYER_LeftMiddy\n      , <&macro_release &mo LAYER_LeftMiddy>\n      #endif\n      ;\n  };\n  left_middy_tap: homey_left_middy_tap {\n    compatible = \"zmk,behavior-macro-one-param\";\n    wait-ms = <0>;\n    tap-ms = <0>;\n    #binding-cells = <1>;\n    bindings\n      = <&macro_release\n          &kp LSFT &kp RSFT\n          &kp LALT &kp RALT\n          &kp LCTL &kp RCTL\n          &kp LGUI &kp RGUI>\n      , <&macro_tap &kp LEFT_MIDDY_KEY>\n      , <&macro_param_1to1>\n      , <&macro_tap &kp MACRO_PLACEHOLDER>\n      ;\n  };\n  #define LeftMiddy(key, layer_index) LeftMiddy_unroll(layer_index) (key)\n  #define LeftMiddy_unroll(layer_index) LeftMiddy_concat(LeftMiddy_layer, layer_index)\n  #define LeftMiddy_concat(prefix, layer_index) prefix ## layer_index\n  #ifdef ENFORCE_BILATERAL\n    #define left_middy_layer0_variant left_middy_bilateral\n  #else\n    #define left_middy_layer0_variant left_middy\n  #endif\n  #define LeftMiddy_layer0(key) left_middy_layer0_variant LEFT_MIDDY_MOD key\n  #define LeftMiddy_layer1(key) left_middy LEFT_MIDDY_MOD key\n  #define LeftMiddy_layer2(key) left_middy LEFT_MIDDY_MOD key\n  #define LeftMiddy_layer3(key) left_middy LEFT_MIDDY_MOD key\n  #define LeftMiddy_layer4(key) left_middy LEFT_MIDDY_MOD key\n  #define LeftMiddy_layer5(key) left_middy LEFT_MIDDY_MOD key\n  #define LeftMiddy_layer6(key) left_middy LEFT_MIDDY_MOD key\n  #ifndef RIGHT_MIDDY_HOLDING_TYPE\n  #define RIGHT_MIDDY_HOLDING_TYPE MIDDY_HOLDING_TYPE\n  #endif\n  #ifndef RIGHT_MIDDY_HOLDING_TIME\n  #define RIGHT_MIDDY_HOLDING_TIME MIDDY_HOLDING_TIME\n  #endif\n  #ifndef RIGHT_MIDDY_STREAK_DECAY\n  #define RIGHT_MIDDY_STREAK_DECAY MIDDY_STREAK_DECAY\n  #endif\n  #ifndef RIGHT_MIDDY_REPEAT_DECAY\n  #define RIGHT_MIDDY_REPEAT_DECAY MIDDY_REPEAT_DECAY\n  #endif\n  right_middy: homey_right_middy {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = RIGHT_MIDDY_HOLDING_TYPE;\n    hold-trigger-key-positions = <LEFT_HAND_KEYS>;\n    hold-trigger-on-release; // wait for other home row mods\n    tapping-term-ms = <RIGHT_MIDDY_HOLDING_TIME>;\n    quick-tap-ms = <RIGHT_MIDDY_REPEAT_DECAY>;\n    require-prior-idle-ms = <RIGHT_MIDDY_STREAK_DECAY>;\n    #binding-cells = <2>;\n    bindings = <&kp>, <&kp>;\n    #ifdef SHIFT_FORGIVENESS\n      #if RIGHT_MIDDY_MOD == LSFT || RIGHT_MIDDY_MOD == RSFT\n        hold-while-undecided; // requires 24.08-beta1 or newer firmware\n        retro-tap; // tap on standalone hold\n      #endif\n    #endif\n  };\n  right_middy_bilateral: homey_right_middy_bilateral {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = RIGHT_MIDDY_HOLDING_TYPE;\n    hold-trigger-key-positions = <LEFT_HAND_KEYS>;\n    hold-trigger-on-release; // wait for other home row mods\n    tapping-term-ms = <RIGHT_MIDDY_HOLDING_TIME>;\n    quick-tap-ms = <RIGHT_MIDDY_REPEAT_DECAY>;\n    require-prior-idle-ms = <RIGHT_MIDDY_STREAK_DECAY>;\n    #binding-cells = <2>;\n    bindings = <&right_middy_hold>, <&kp>;\n    #ifdef SHIFT_FORGIVENESS\n      #if RIGHT_MIDDY_MOD == LSFT || RIGHT_MIDDY_MOD == RSFT\n        hold-while-undecided; // requires 24.08-beta1 or newer firmware\n        retro-tap; // tap on standalone hold\n      #endif\n    #endif\n  };\n  right_middy_hold: homey_right_middy_hold {\n    compatible = \"zmk,behavior-macro-one-param\";\n    wait-ms = <0>;\n    tap-ms = <0>;\n    #binding-cells = <1>;\n    bindings\n      = <&macro_param_1to1>\n      , <&macro_press &kp MACRO_PLACEHOLDER>\n      #ifdef LAYER_RightMiddy\n      , <&macro_press &mo LAYER_RightMiddy>\n      #endif\n      , <&macro_pause_for_release>\n      , <&macro_param_1to1>\n      , <&macro_release &kp MACRO_PLACEHOLDER>\n      #ifdef LAYER_RightMiddy\n      , <&macro_release &mo LAYER_RightMiddy>\n      #endif\n      ;\n  };\n  right_middy_tap: homey_right_middy_tap {\n    compatible = \"zmk,behavior-macro-one-param\";\n    wait-ms = <0>;\n    tap-ms = <0>;\n    #binding-cells = <1>;\n    bindings\n      = <&macro_release\n          &kp LSFT &kp RSFT\n          &kp LALT &kp RALT\n          &kp LCTL &kp RCTL\n          &kp LGUI &kp RGUI>\n      , <&macro_tap &kp RIGHT_MIDDY_KEY>\n      , <&macro_param_1to1>\n      , <&macro_tap &kp MACRO_PLACEHOLDER>\n      ;\n  };\n  #define RightMiddy(key, layer_index) RightMiddy_unroll(layer_index) (key)\n  #define RightMiddy_unroll(layer_index) RightMiddy_concat(RightMiddy_layer, layer_index)\n  #define RightMiddy_concat(prefix, layer_index) prefix ## layer_index\n  #ifdef ENFORCE_BILATERAL\n    #define right_middy_layer0_variant right_middy_bilateral\n  #else\n    #define right_middy_layer0_variant right_middy\n  #endif\n  #define RightMiddy_layer0(key) right_middy_layer0_variant RIGHT_MIDDY_MOD key\n  #define RightMiddy_layer1(key) right_middy RIGHT_MIDDY_MOD key\n  #define RightMiddy_layer2(key) right_middy RIGHT_MIDDY_MOD key\n  #define RightMiddy_layer3(key) right_middy RIGHT_MIDDY_MOD key\n  #define RightMiddy_layer4(key) right_middy RIGHT_MIDDY_MOD key\n  #define RightMiddy_layer5(key) right_middy RIGHT_MIDDY_MOD key\n  #define RightMiddy_layer6(key) right_middy RIGHT_MIDDY_MOD key\n  #ifndef LEFT_INDEX_HOLDING_TYPE\n  #define LEFT_INDEX_HOLDING_TYPE INDEX_HOLDING_TYPE\n  #endif\n  #ifndef LEFT_INDEX_HOLDING_TIME\n  #define LEFT_INDEX_HOLDING_TIME INDEX_HOLDING_TIME\n  #endif\n  #ifndef LEFT_INDEX_STREAK_DECAY\n  #define LEFT_INDEX_STREAK_DECAY INDEX_STREAK_DECAY\n  #endif\n  #ifndef LEFT_INDEX_REPEAT_DECAY\n  #define LEFT_INDEX_REPEAT_DECAY INDEX_REPEAT_DECAY\n  #endif\n  left_index: homey_left_index {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = LEFT_INDEX_HOLDING_TYPE;\n    hold-trigger-key-positions = <RIGHT_HAND_KEYS>;\n    hold-trigger-on-release; // wait for other home row mods\n    tapping-term-ms = <LEFT_INDEX_HOLDING_TIME>;\n    quick-tap-ms = <LEFT_INDEX_REPEAT_DECAY>;\n    require-prior-idle-ms = <LEFT_INDEX_STREAK_DECAY>;\n    #binding-cells = <2>;\n    bindings = <&kp>, <&kp>;\n    #ifdef SHIFT_FORGIVENESS\n      #if LEFT_INDEX_MOD == LSFT || LEFT_INDEX_MOD == RSFT\n        hold-while-undecided; // requires 24.08-beta1 or newer firmware\n        retro-tap; // tap on standalone hold\n      #endif\n    #endif\n  };\n  left_index_bilateral: homey_left_index_bilateral {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = LEFT_INDEX_HOLDING_TYPE;\n    hold-trigger-key-positions = <RIGHT_HAND_KEYS>;\n    hold-trigger-on-release; // wait for other home row mods\n    tapping-term-ms = <LEFT_INDEX_HOLDING_TIME>;\n    quick-tap-ms = <LEFT_INDEX_REPEAT_DECAY>;\n    require-prior-idle-ms = <LEFT_INDEX_STREAK_DECAY>;\n    #binding-cells = <2>;\n    bindings = <&left_index_hold>, <&kp>;\n    #ifdef SHIFT_FORGIVENESS\n      #if LEFT_INDEX_MOD == LSFT || LEFT_INDEX_MOD == RSFT\n        hold-while-undecided; // requires 24.08-beta1 or newer firmware\n        retro-tap; // tap on standalone hold\n      #endif\n    #endif\n  };\n  left_index_hold: homey_left_index_hold {\n    compatible = \"zmk,behavior-macro-one-param\";\n    wait-ms = <0>;\n    tap-ms = <0>;\n    #binding-cells = <1>;\n    bindings\n      = <&macro_param_1to1>\n      , <&macro_press &kp MACRO_PLACEHOLDER>\n      #ifdef LAYER_LeftIndex\n      , <&macro_press &mo LAYER_LeftIndex>\n      #endif\n      , <&macro_pause_for_release>\n      , <&macro_param_1to1>\n      , <&macro_release &kp MACRO_PLACEHOLDER>\n      #ifdef LAYER_LeftIndex\n      , <&macro_release &mo LAYER_LeftIndex>\n      #endif\n      ;\n  };\n  left_index_tap: homey_left_index_tap {\n    compatible = \"zmk,behavior-macro-one-param\";\n    wait-ms = <0>;\n    tap-ms = <0>;\n    #binding-cells = <1>;\n    bindings\n      = <&macro_release\n          &kp LSFT &kp RSFT\n          &kp LALT &kp RALT\n          &kp LCTL &kp RCTL\n          &kp LGUI &kp RGUI>\n      , <&macro_tap &kp LEFT_INDEX_KEY>\n      , <&macro_param_1to1>\n      , <&macro_tap &kp MACRO_PLACEHOLDER>\n      ;\n  };\n  #define LeftIndex(key, layer_index) LeftIndex_unroll(layer_index) (key)\n  #define LeftIndex_unroll(layer_index) LeftIndex_concat(LeftIndex_layer, layer_index)\n  #define LeftIndex_concat(prefix, layer_index) prefix ## layer_index\n  #ifdef ENFORCE_BILATERAL\n    #define left_index_layer0_variant left_index_bilateral\n  #else\n    #define left_index_layer0_variant left_index\n  #endif\n  #define LeftIndex_layer0(key) left_index_layer0_variant LEFT_INDEX_MOD key\n  #define LeftIndex_layer1(key) left_index LEFT_INDEX_MOD key\n  #define LeftIndex_layer2(key) left_index LEFT_INDEX_MOD key\n  #define LeftIndex_layer3(key) left_index LEFT_INDEX_MOD key\n  #define LeftIndex_layer4(key) left_index LEFT_INDEX_MOD key\n  #define LeftIndex_layer5(key) left_index LEFT_INDEX_MOD key\n  #define LeftIndex_layer6(key) left_index LEFT_INDEX_MOD key\n  #ifndef RIGHT_INDEX_HOLDING_TYPE\n  #define RIGHT_INDEX_HOLDING_TYPE INDEX_HOLDING_TYPE\n  #endif\n  #ifndef RIGHT_INDEX_HOLDING_TIME\n  #define RIGHT_INDEX_HOLDING_TIME INDEX_HOLDING_TIME\n  #endif\n  #ifndef RIGHT_INDEX_STREAK_DECAY\n  #define RIGHT_INDEX_STREAK_DECAY INDEX_STREAK_DECAY\n  #endif\n  #ifndef RIGHT_INDEX_REPEAT_DECAY\n  #define RIGHT_INDEX_REPEAT_DECAY INDEX_REPEAT_DECAY\n  #endif\n  right_index: homey_right_index {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = RIGHT_INDEX_HOLDING_TYPE;\n    hold-trigger-key-positions = <LEFT_HAND_KEYS>;\n    hold-trigger-on-release; // wait for other home row mods\n    tapping-term-ms = <RIGHT_INDEX_HOLDING_TIME>;\n    quick-tap-ms = <RIGHT_INDEX_REPEAT_DECAY>;\n    require-prior-idle-ms = <RIGHT_INDEX_STREAK_DECAY>;\n    #binding-cells = <2>;\n    bindings = <&kp>, <&kp>;\n    #ifdef SHIFT_FORGIVENESS\n      #if RIGHT_INDEX_MOD == LSFT || RIGHT_INDEX_MOD == RSFT\n        hold-while-undecided; // requires 24.08-beta1 or newer firmware\n        retro-tap; // tap on standalone hold\n      #endif\n    #endif\n  };\n  right_index_bilateral: homey_right_index_bilateral {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = RIGHT_INDEX_HOLDING_TYPE;\n    hold-trigger-key-positions = <LEFT_HAND_KEYS>;\n    hold-trigger-on-release; // wait for other home row mods\n    tapping-term-ms = <RIGHT_INDEX_HOLDING_TIME>;\n    quick-tap-ms = <RIGHT_INDEX_REPEAT_DECAY>;\n    require-prior-idle-ms = <RIGHT_INDEX_STREAK_DECAY>;\n    #binding-cells = <2>;\n    bindings = <&right_index_hold>, <&kp>;\n    #ifdef SHIFT_FORGIVENESS\n      #if RIGHT_INDEX_MOD == LSFT || RIGHT_INDEX_MOD == RSFT\n        hold-while-undecided; // requires 24.08-beta1 or newer firmware\n        retro-tap; // tap on standalone hold\n      #endif\n    #endif\n  };\n  right_index_hold: homey_right_index_hold {\n    compatible = \"zmk,behavior-macro-one-param\";\n    wait-ms = <0>;\n    tap-ms = <0>;\n    #binding-cells = <1>;\n    bindings\n      = <&macro_param_1to1>\n      , <&macro_press &kp MACRO_PLACEHOLDER>\n      #ifdef LAYER_RightIndex\n      , <&macro_press &mo LAYER_RightIndex>\n      #endif\n      , <&macro_pause_for_release>\n      , <&macro_param_1to1>\n      , <&macro_release &kp MACRO_PLACEHOLDER>\n      #ifdef LAYER_RightIndex\n      , <&macro_release &mo LAYER_RightIndex>\n      #endif\n      ;\n  };\n  right_index_tap: homey_right_index_tap {\n    compatible = \"zmk,behavior-macro-one-param\";\n    wait-ms = <0>;\n    tap-ms = <0>;\n    #binding-cells = <1>;\n    bindings\n      = <&macro_release\n          &kp LSFT &kp RSFT\n          &kp LALT &kp RALT\n          &kp LCTL &kp RCTL\n          &kp LGUI &kp RGUI>\n      , <&macro_tap &kp RIGHT_INDEX_KEY>\n      , <&macro_param_1to1>\n      , <&macro_tap &kp MACRO_PLACEHOLDER>\n      ;\n  };\n  #define RightIndex(key, layer_index) RightIndex_unroll(layer_index) (key)\n  #define RightIndex_unroll(layer_index) RightIndex_concat(RightIndex_layer, layer_index)\n  #define RightIndex_concat(prefix, layer_index) prefix ## layer_index\n  #ifdef ENFORCE_BILATERAL\n    #define right_index_layer0_variant right_index_bilateral\n  #else\n    #define right_index_layer0_variant right_index\n  #endif\n  #define RightIndex_layer0(key) right_index_layer0_variant RIGHT_INDEX_MOD key\n  #define RightIndex_layer1(key) right_index RIGHT_INDEX_MOD key\n  #define RightIndex_layer2(key) right_index RIGHT_INDEX_MOD key\n  #define RightIndex_layer3(key) right_index RIGHT_INDEX_MOD key\n  #define RightIndex_layer4(key) right_index RIGHT_INDEX_MOD key\n  #define RightIndex_layer5(key) right_index RIGHT_INDEX_MOD key\n  #define RightIndex_layer6(key) right_index RIGHT_INDEX_MOD key\n  #ifndef LEFT_RINGY_PINKY_HOLDING_TYPE\n  #define LEFT_RINGY_PINKY_HOLDING_TYPE LEFT_RINGY_CHORD_HOLDING_TYPE\n  #endif\n  #ifndef LEFT_RINGY_PINKY_HOLDING_TIME\n  #define LEFT_RINGY_PINKY_HOLDING_TIME LEFT_RINGY_CHORD_HOLDING_TIME\n  #endif\n  #ifndef LEFT_RINGY_PINKY_STREAK_DECAY\n  #define LEFT_RINGY_PINKY_STREAK_DECAY LEFT_RINGY_CHORD_STREAK_DECAY\n  #endif\n  #ifndef LEFT_RINGY_PINKY_REPEAT_DECAY\n  #define LEFT_RINGY_PINKY_REPEAT_DECAY LEFT_RINGY_CHORD_REPEAT_DECAY\n  #endif\n  left_ringy_pinky: homey_left_ringy_pinky {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = LEFT_RINGY_HOLDING_TYPE;\n    hold-trigger-key-positions = <RIGHT_HAND_KEYS>;\n    hold-trigger-on-release; // wait for other home row mods\n    tapping-term-ms = <LEFT_RINGY_HOLDING_TIME>;\n    quick-tap-ms = <LEFT_RINGY_REPEAT_DECAY>;\n    require-prior-idle-ms = <LEFT_RINGY_STREAK_DECAY>;\n    #binding-cells = <2>;\n    bindings = <&kp>, <&kp>;\n  };\n  left_ringy_pinky_bilateral: homey_left_ringy_pinky_bilateral {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = LEFT_RINGY_HOLDING_TYPE;\n    hold-trigger-key-positions = <RIGHT_HAND_KEYS>;\n    hold-trigger-on-release; // wait for other home row mods\n    tapping-term-ms = <LEFT_RINGY_HOLDING_TIME>;\n    quick-tap-ms = <LEFT_RINGY_REPEAT_DECAY>;\n    require-prior-idle-ms = <LEFT_RINGY_STREAK_DECAY>;\n    #binding-cells = <2>;\n    bindings = <&kp>, <&left_ringy_tap>;\n  };\n  #define LeftRingyPinky left_ringy_pinky_bilateral LEFT_PINKY_MOD LEFT_PINKY_KEY\n  #ifndef LEFT_MIDDY_PINKY_HOLDING_TYPE\n  #define LEFT_MIDDY_PINKY_HOLDING_TYPE LEFT_MIDDY_CHORD_HOLDING_TYPE\n  #endif\n  #ifndef LEFT_MIDDY_PINKY_HOLDING_TIME\n  #define LEFT_MIDDY_PINKY_HOLDING_TIME LEFT_MIDDY_CHORD_HOLDING_TIME\n  #endif\n  #ifndef LEFT_MIDDY_PINKY_STREAK_DECAY\n  #define LEFT_MIDDY_PINKY_STREAK_DECAY LEFT_MIDDY_CHORD_STREAK_DECAY\n  #endif\n  #ifndef LEFT_MIDDY_PINKY_REPEAT_DECAY\n  #define LEFT_MIDDY_PINKY_REPEAT_DECAY LEFT_MIDDY_CHORD_REPEAT_DECAY\n  #endif\n  left_middy_pinky: homey_left_middy_pinky {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = LEFT_MIDDY_HOLDING_TYPE;\n    hold-trigger-key-positions = <RIGHT_HAND_KEYS>;\n    hold-trigger-on-release; // wait for other home row mods\n    tapping-term-ms = <LEFT_MIDDY_HOLDING_TIME>;\n    quick-tap-ms = <LEFT_MIDDY_REPEAT_DECAY>;\n    require-prior-idle-ms = <LEFT_MIDDY_STREAK_DECAY>;\n    #binding-cells = <2>;\n    bindings = <&kp>, <&kp>;\n  };\n  left_middy_pinky_bilateral: homey_left_middy_pinky_bilateral {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = LEFT_MIDDY_HOLDING_TYPE;\n    hold-trigger-key-positions = <RIGHT_HAND_KEYS>;\n    hold-trigger-on-release; // wait for other home row mods\n    tapping-term-ms = <LEFT_MIDDY_HOLDING_TIME>;\n    quick-tap-ms = <LEFT_MIDDY_REPEAT_DECAY>;\n    require-prior-idle-ms = <LEFT_MIDDY_STREAK_DECAY>;\n    #binding-cells = <2>;\n    bindings = <&kp>, <&left_middy_tap>;\n  };\n  #define LeftMiddyPinky left_middy_pinky_bilateral LEFT_PINKY_MOD LEFT_PINKY_KEY\n  #ifndef LEFT_INDEX_PINKY_HOLDING_TYPE\n  #define LEFT_INDEX_PINKY_HOLDING_TYPE LEFT_INDEX_CHORD_HOLDING_TYPE\n  #endif\n  #ifndef LEFT_INDEX_PINKY_HOLDING_TIME\n  #define LEFT_INDEX_PINKY_HOLDING_TIME LEFT_INDEX_CHORD_HOLDING_TIME\n  #endif\n  #ifndef LEFT_INDEX_PINKY_STREAK_DECAY\n  #define LEFT_INDEX_PINKY_STREAK_DECAY LEFT_INDEX_CHORD_STREAK_DECAY\n  #endif\n  #ifndef LEFT_INDEX_PINKY_REPEAT_DECAY\n  #define LEFT_INDEX_PINKY_REPEAT_DECAY LEFT_INDEX_CHORD_REPEAT_DECAY\n  #endif\n  left_index_pinky: homey_left_index_pinky {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = LEFT_INDEX_HOLDING_TYPE;\n    hold-trigger-key-positions = <RIGHT_HAND_KEYS>;\n    hold-trigger-on-release; // wait for other home row mods\n    tapping-term-ms = <LEFT_INDEX_HOLDING_TIME>;\n    quick-tap-ms = <LEFT_INDEX_REPEAT_DECAY>;\n    require-prior-idle-ms = <LEFT_INDEX_STREAK_DECAY>;\n    #binding-cells = <2>;\n    bindings = <&kp>, <&kp>;\n  };\n  left_index_pinky_bilateral: homey_left_index_pinky_bilateral {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = LEFT_INDEX_HOLDING_TYPE;\n    hold-trigger-key-positions = <RIGHT_HAND_KEYS>;\n    hold-trigger-on-release; // wait for other home row mods\n    tapping-term-ms = <LEFT_INDEX_HOLDING_TIME>;\n    quick-tap-ms = <LEFT_INDEX_REPEAT_DECAY>;\n    require-prior-idle-ms = <LEFT_INDEX_STREAK_DECAY>;\n    #binding-cells = <2>;\n    bindings = <&kp>, <&left_index_tap>;\n  };\n  #define LeftIndexPinky left_index_pinky_bilateral LEFT_PINKY_MOD LEFT_PINKY_KEY\n  #ifndef RIGHT_RINGY_PINKY_HOLDING_TYPE\n  #define RIGHT_RINGY_PINKY_HOLDING_TYPE RIGHT_RINGY_CHORD_HOLDING_TYPE\n  #endif\n  #ifndef RIGHT_RINGY_PINKY_HOLDING_TIME\n  #define RIGHT_RINGY_PINKY_HOLDING_TIME RIGHT_RINGY_CHORD_HOLDING_TIME\n  #endif\n  #ifndef RIGHT_RINGY_PINKY_STREAK_DECAY\n  #define RIGHT_RINGY_PINKY_STREAK_DECAY RIGHT_RINGY_CHORD_STREAK_DECAY\n  #endif\n  #ifndef RIGHT_RINGY_PINKY_REPEAT_DECAY\n  #define RIGHT_RINGY_PINKY_REPEAT_DECAY RIGHT_RINGY_CHORD_REPEAT_DECAY\n  #endif\n  right_ringy_pinky: homey_right_ringy_pinky {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = RIGHT_RINGY_HOLDING_TYPE;\n    hold-trigger-key-positions = <LEFT_HAND_KEYS>;\n    hold-trigger-on-release; // wait for other home row mods\n    tapping-term-ms = <RIGHT_RINGY_HOLDING_TIME>;\n    quick-tap-ms = <RIGHT_RINGY_REPEAT_DECAY>;\n    require-prior-idle-ms = <RIGHT_RINGY_STREAK_DECAY>;\n    #binding-cells = <2>;\n    bindings = <&kp>, <&kp>;\n  };\n  right_ringy_pinky_bilateral: homey_right_ringy_pinky_bilateral {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = RIGHT_RINGY_HOLDING_TYPE;\n    hold-trigger-key-positions = <LEFT_HAND_KEYS>;\n    hold-trigger-on-release; // wait for other home row mods\n    tapping-term-ms = <RIGHT_RINGY_HOLDING_TIME>;\n    quick-tap-ms = <RIGHT_RINGY_REPEAT_DECAY>;\n    require-prior-idle-ms = <RIGHT_RINGY_STREAK_DECAY>;\n    #binding-cells = <2>;\n    bindings = <&kp>, <&right_ringy_tap>;\n  };\n  #define RightRingyPinky right_ringy_pinky_bilateral RIGHT_PINKY_MOD RIGHT_PINKY_KEY\n  #ifndef RIGHT_MIDDY_PINKY_HOLDING_TYPE\n  #define RIGHT_MIDDY_PINKY_HOLDING_TYPE RIGHT_MIDDY_CHORD_HOLDING_TYPE\n  #endif\n  #ifndef RIGHT_MIDDY_PINKY_HOLDING_TIME\n  #define RIGHT_MIDDY_PINKY_HOLDING_TIME RIGHT_MIDDY_CHORD_HOLDING_TIME\n  #endif\n  #ifndef RIGHT_MIDDY_PINKY_STREAK_DECAY\n  #define RIGHT_MIDDY_PINKY_STREAK_DECAY RIGHT_MIDDY_CHORD_STREAK_DECAY\n  #endif\n  #ifndef RIGHT_MIDDY_PINKY_REPEAT_DECAY\n  #define RIGHT_MIDDY_PINKY_REPEAT_DECAY RIGHT_MIDDY_CHORD_REPEAT_DECAY\n  #endif\n  right_middy_pinky: homey_right_middy_pinky {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = RIGHT_MIDDY_HOLDING_TYPE;\n    hold-trigger-key-positions = <LEFT_HAND_KEYS>;\n    hold-trigger-on-release; // wait for other home row mods\n    tapping-term-ms = <RIGHT_MIDDY_HOLDING_TIME>;\n    quick-tap-ms = <RIGHT_MIDDY_REPEAT_DECAY>;\n    require-prior-idle-ms = <RIGHT_MIDDY_STREAK_DECAY>;\n    #binding-cells = <2>;\n    bindings = <&kp>, <&kp>;\n  };\n  right_middy_pinky_bilateral: homey_right_middy_pinky_bilateral {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = RIGHT_MIDDY_HOLDING_TYPE;\n    hold-trigger-key-positions = <LEFT_HAND_KEYS>;\n    hold-trigger-on-release; // wait for other home row mods\n    tapping-term-ms = <RIGHT_MIDDY_HOLDING_TIME>;\n    quick-tap-ms = <RIGHT_MIDDY_REPEAT_DECAY>;\n    require-prior-idle-ms = <RIGHT_MIDDY_STREAK_DECAY>;\n    #binding-cells = <2>;\n    bindings = <&kp>, <&right_middy_tap>;\n  };\n  #define RightMiddyPinky right_middy_pinky_bilateral RIGHT_PINKY_MOD RIGHT_PINKY_KEY\n  #ifndef RIGHT_INDEX_PINKY_HOLDING_TYPE\n  #define RIGHT_INDEX_PINKY_HOLDING_TYPE RIGHT_INDEX_CHORD_HOLDING_TYPE\n  #endif\n  #ifndef RIGHT_INDEX_PINKY_HOLDING_TIME\n  #define RIGHT_INDEX_PINKY_HOLDING_TIME RIGHT_INDEX_CHORD_HOLDING_TIME\n  #endif\n  #ifndef RIGHT_INDEX_PINKY_STREAK_DECAY\n  #define RIGHT_INDEX_PINKY_STREAK_DECAY RIGHT_INDEX_CHORD_STREAK_DECAY\n  #endif\n  #ifndef RIGHT_INDEX_PINKY_REPEAT_DECAY\n  #define RIGHT_INDEX_PINKY_REPEAT_DECAY RIGHT_INDEX_CHORD_REPEAT_DECAY\n  #endif\n  right_index_pinky: homey_right_index_pinky {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = RIGHT_INDEX_HOLDING_TYPE;\n    hold-trigger-key-positions = <LEFT_HAND_KEYS>;\n    hold-trigger-on-release; // wait for other home row mods\n    tapping-term-ms = <RIGHT_INDEX_HOLDING_TIME>;\n    quick-tap-ms = <RIGHT_INDEX_REPEAT_DECAY>;\n    require-prior-idle-ms = <RIGHT_INDEX_STREAK_DECAY>;\n    #binding-cells = <2>;\n    bindings = <&kp>, <&kp>;\n  };\n  right_index_pinky_bilateral: homey_right_index_pinky_bilateral {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = RIGHT_INDEX_HOLDING_TYPE;\n    hold-trigger-key-positions = <LEFT_HAND_KEYS>;\n    hold-trigger-on-release; // wait for other home row mods\n    tapping-term-ms = <RIGHT_INDEX_HOLDING_TIME>;\n    quick-tap-ms = <RIGHT_INDEX_REPEAT_DECAY>;\n    require-prior-idle-ms = <RIGHT_INDEX_STREAK_DECAY>;\n    #binding-cells = <2>;\n    bindings = <&kp>, <&right_index_tap>;\n  };\n  #define RightIndexPinky right_index_pinky_bilateral RIGHT_PINKY_MOD RIGHT_PINKY_KEY\n  #ifndef LEFT_PINKY_RINGY_HOLDING_TYPE\n  #define LEFT_PINKY_RINGY_HOLDING_TYPE LEFT_PINKY_CHORD_HOLDING_TYPE\n  #endif\n  #ifndef LEFT_PINKY_RINGY_HOLDING_TIME\n  #define LEFT_PINKY_RINGY_HOLDING_TIME LEFT_PINKY_CHORD_HOLDING_TIME\n  #endif\n  #ifndef LEFT_PINKY_RINGY_STREAK_DECAY\n  #define LEFT_PINKY_RINGY_STREAK_DECAY LEFT_PINKY_CHORD_STREAK_DECAY\n  #endif\n  #ifndef LEFT_PINKY_RINGY_REPEAT_DECAY\n  #define LEFT_PINKY_RINGY_REPEAT_DECAY LEFT_PINKY_CHORD_REPEAT_DECAY\n  #endif\n  left_pinky_ringy: homey_left_pinky_ringy {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = LEFT_PINKY_HOLDING_TYPE;\n    hold-trigger-key-positions = <RIGHT_HAND_KEYS>;\n    hold-trigger-on-release; // wait for other home row mods\n    tapping-term-ms = <LEFT_PINKY_HOLDING_TIME>;\n    quick-tap-ms = <LEFT_PINKY_REPEAT_DECAY>;\n    require-prior-idle-ms = <LEFT_PINKY_STREAK_DECAY>;\n    #binding-cells = <2>;\n    bindings = <&kp>, <&kp>;\n  };\n  left_pinky_ringy_bilateral: homey_left_pinky_ringy_bilateral {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = LEFT_PINKY_HOLDING_TYPE;\n    hold-trigger-key-positions = <RIGHT_HAND_KEYS>;\n    hold-trigger-on-release; // wait for other home row mods\n    tapping-term-ms = <LEFT_PINKY_HOLDING_TIME>;\n    quick-tap-ms = <LEFT_PINKY_REPEAT_DECAY>;\n    require-prior-idle-ms = <LEFT_PINKY_STREAK_DECAY>;\n    #binding-cells = <2>;\n    bindings = <&kp>, <&left_pinky_tap>;\n  };\n  #define LeftPinkyRingy left_pinky_ringy_bilateral LEFT_RINGY_MOD LEFT_RINGY_KEY\n  #ifndef LEFT_MIDDY_RINGY_HOLDING_TYPE\n  #define LEFT_MIDDY_RINGY_HOLDING_TYPE LEFT_MIDDY_CHORD_HOLDING_TYPE\n  #endif\n  #ifndef LEFT_MIDDY_RINGY_HOLDING_TIME\n  #define LEFT_MIDDY_RINGY_HOLDING_TIME LEFT_MIDDY_CHORD_HOLDING_TIME\n  #endif\n  #ifndef LEFT_MIDDY_RINGY_STREAK_DECAY\n  #define LEFT_MIDDY_RINGY_STREAK_DECAY LEFT_MIDDY_CHORD_STREAK_DECAY\n  #endif\n  #ifndef LEFT_MIDDY_RINGY_REPEAT_DECAY\n  #define LEFT_MIDDY_RINGY_REPEAT_DECAY LEFT_MIDDY_CHORD_REPEAT_DECAY\n  #endif\n  left_middy_ringy: homey_left_middy_ringy {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = LEFT_MIDDY_HOLDING_TYPE;\n    hold-trigger-key-positions = <RIGHT_HAND_KEYS>;\n    hold-trigger-on-release; // wait for other home row mods\n    tapping-term-ms = <LEFT_MIDDY_HOLDING_TIME>;\n    quick-tap-ms = <LEFT_MIDDY_REPEAT_DECAY>;\n    require-prior-idle-ms = <LEFT_MIDDY_STREAK_DECAY>;\n    #binding-cells = <2>;\n    bindings = <&kp>, <&kp>;\n  };\n  left_middy_ringy_bilateral: homey_left_middy_ringy_bilateral {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = LEFT_MIDDY_HOLDING_TYPE;\n    hold-trigger-key-positions = <RIGHT_HAND_KEYS>;\n    hold-trigger-on-release; // wait for other home row mods\n    tapping-term-ms = <LEFT_MIDDY_HOLDING_TIME>;\n    quick-tap-ms = <LEFT_MIDDY_REPEAT_DECAY>;\n    require-prior-idle-ms = <LEFT_MIDDY_STREAK_DECAY>;\n    #binding-cells = <2>;\n    bindings = <&kp>, <&left_middy_tap>;\n  };\n  #define LeftMiddyRingy left_middy_ringy_bilateral LEFT_RINGY_MOD LEFT_RINGY_KEY\n  #ifndef LEFT_INDEX_RINGY_HOLDING_TYPE\n  #define LEFT_INDEX_RINGY_HOLDING_TYPE LEFT_INDEX_CHORD_HOLDING_TYPE\n  #endif\n  #ifndef LEFT_INDEX_RINGY_HOLDING_TIME\n  #define LEFT_INDEX_RINGY_HOLDING_TIME LEFT_INDEX_CHORD_HOLDING_TIME\n  #endif\n  #ifndef LEFT_INDEX_RINGY_STREAK_DECAY\n  #define LEFT_INDEX_RINGY_STREAK_DECAY LEFT_INDEX_CHORD_STREAK_DECAY\n  #endif\n  #ifndef LEFT_INDEX_RINGY_REPEAT_DECAY\n  #define LEFT_INDEX_RINGY_REPEAT_DECAY LEFT_INDEX_CHORD_REPEAT_DECAY\n  #endif\n  left_index_ringy: homey_left_index_ringy {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = LEFT_INDEX_HOLDING_TYPE;\n    hold-trigger-key-positions = <RIGHT_HAND_KEYS>;\n    hold-trigger-on-release; // wait for other home row mods\n    tapping-term-ms = <LEFT_INDEX_HOLDING_TIME>;\n    quick-tap-ms = <LEFT_INDEX_REPEAT_DECAY>;\n    require-prior-idle-ms = <LEFT_INDEX_STREAK_DECAY>;\n    #binding-cells = <2>;\n    bindings = <&kp>, <&kp>;\n  };\n  left_index_ringy_bilateral: homey_left_index_ringy_bilateral {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = LEFT_INDEX_HOLDING_TYPE;\n    hold-trigger-key-positions = <RIGHT_HAND_KEYS>;\n    hold-trigger-on-release; // wait for other home row mods\n    tapping-term-ms = <LEFT_INDEX_HOLDING_TIME>;\n    quick-tap-ms = <LEFT_INDEX_REPEAT_DECAY>;\n    require-prior-idle-ms = <LEFT_INDEX_STREAK_DECAY>;\n    #binding-cells = <2>;\n    bindings = <&kp>, <&left_index_tap>;\n  };\n  #define LeftIndexRingy left_index_ringy_bilateral LEFT_RINGY_MOD LEFT_RINGY_KEY\n  #ifndef RIGHT_PINKY_RINGY_HOLDING_TYPE\n  #define RIGHT_PINKY_RINGY_HOLDING_TYPE RIGHT_PINKY_CHORD_HOLDING_TYPE\n  #endif\n  #ifndef RIGHT_PINKY_RINGY_HOLDING_TIME\n  #define RIGHT_PINKY_RINGY_HOLDING_TIME RIGHT_PINKY_CHORD_HOLDING_TIME\n  #endif\n  #ifndef RIGHT_PINKY_RINGY_STREAK_DECAY\n  #define RIGHT_PINKY_RINGY_STREAK_DECAY RIGHT_PINKY_CHORD_STREAK_DECAY\n  #endif\n  #ifndef RIGHT_PINKY_RINGY_REPEAT_DECAY\n  #define RIGHT_PINKY_RINGY_REPEAT_DECAY RIGHT_PINKY_CHORD_REPEAT_DECAY\n  #endif\n  right_pinky_ringy: homey_right_pinky_ringy {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = RIGHT_PINKY_HOLDING_TYPE;\n    hold-trigger-key-positions = <LEFT_HAND_KEYS>;\n    hold-trigger-on-release; // wait for other home row mods\n    tapping-term-ms = <RIGHT_PINKY_HOLDING_TIME>;\n    quick-tap-ms = <RIGHT_PINKY_REPEAT_DECAY>;\n    require-prior-idle-ms = <RIGHT_PINKY_STREAK_DECAY>;\n    #binding-cells = <2>;\n    bindings = <&kp>, <&kp>;\n  };\n  right_pinky_ringy_bilateral: homey_right_pinky_ringy_bilateral {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = RIGHT_PINKY_HOLDING_TYPE;\n    hold-trigger-key-positions = <LEFT_HAND_KEYS>;\n    hold-trigger-on-release; // wait for other home row mods\n    tapping-term-ms = <RIGHT_PINKY_HOLDING_TIME>;\n    quick-tap-ms = <RIGHT_PINKY_REPEAT_DECAY>;\n    require-prior-idle-ms = <RIGHT_PINKY_STREAK_DECAY>;\n    #binding-cells = <2>;\n    bindings = <&kp>, <&right_pinky_tap>;\n  };\n  #define RightPinkyRingy right_pinky_ringy_bilateral RIGHT_RINGY_MOD RIGHT_RINGY_KEY\n  #ifndef RIGHT_MIDDY_RINGY_HOLDING_TYPE\n  #define RIGHT_MIDDY_RINGY_HOLDING_TYPE RIGHT_MIDDY_CHORD_HOLDING_TYPE\n  #endif\n  #ifndef RIGHT_MIDDY_RINGY_HOLDING_TIME\n  #define RIGHT_MIDDY_RINGY_HOLDING_TIME RIGHT_MIDDY_CHORD_HOLDING_TIME\n  #endif\n  #ifndef RIGHT_MIDDY_RINGY_STREAK_DECAY\n  #define RIGHT_MIDDY_RINGY_STREAK_DECAY RIGHT_MIDDY_CHORD_STREAK_DECAY\n  #endif\n  #ifndef RIGHT_MIDDY_RINGY_REPEAT_DECAY\n  #define RIGHT_MIDDY_RINGY_REPEAT_DECAY RIGHT_MIDDY_CHORD_REPEAT_DECAY\n  #endif\n  right_middy_ringy: homey_right_middy_ringy {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = RIGHT_MIDDY_HOLDING_TYPE;\n    hold-trigger-key-positions = <LEFT_HAND_KEYS>;\n    hold-trigger-on-release; // wait for other home row mods\n    tapping-term-ms = <RIGHT_MIDDY_HOLDING_TIME>;\n    quick-tap-ms = <RIGHT_MIDDY_REPEAT_DECAY>;\n    require-prior-idle-ms = <RIGHT_MIDDY_STREAK_DECAY>;\n    #binding-cells = <2>;\n    bindings = <&kp>, <&kp>;\n  };\n  right_middy_ringy_bilateral: homey_right_middy_ringy_bilateral {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = RIGHT_MIDDY_HOLDING_TYPE;\n    hold-trigger-key-positions = <LEFT_HAND_KEYS>;\n    hold-trigger-on-release; // wait for other home row mods\n    tapping-term-ms = <RIGHT_MIDDY_HOLDING_TIME>;\n    quick-tap-ms = <RIGHT_MIDDY_REPEAT_DECAY>;\n    require-prior-idle-ms = <RIGHT_MIDDY_STREAK_DECAY>;\n    #binding-cells = <2>;\n    bindings = <&kp>, <&right_middy_tap>;\n  };\n  #define RightMiddyRingy right_middy_ringy_bilateral RIGHT_RINGY_MOD RIGHT_RINGY_KEY\n  #ifndef RIGHT_INDEX_RINGY_HOLDING_TYPE\n  #define RIGHT_INDEX_RINGY_HOLDING_TYPE RIGHT_INDEX_CHORD_HOLDING_TYPE\n  #endif\n  #ifndef RIGHT_INDEX_RINGY_HOLDING_TIME\n  #define RIGHT_INDEX_RINGY_HOLDING_TIME RIGHT_INDEX_CHORD_HOLDING_TIME\n  #endif\n  #ifndef RIGHT_INDEX_RINGY_STREAK_DECAY\n  #define RIGHT_INDEX_RINGY_STREAK_DECAY RIGHT_INDEX_CHORD_STREAK_DECAY\n  #endif\n  #ifndef RIGHT_INDEX_RINGY_REPEAT_DECAY\n  #define RIGHT_INDEX_RINGY_REPEAT_DECAY RIGHT_INDEX_CHORD_REPEAT_DECAY\n  #endif\n  right_index_ringy: homey_right_index_ringy {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = RIGHT_INDEX_HOLDING_TYPE;\n    hold-trigger-key-positions = <LEFT_HAND_KEYS>;\n    hold-trigger-on-release; // wait for other home row mods\n    tapping-term-ms = <RIGHT_INDEX_HOLDING_TIME>;\n    quick-tap-ms = <RIGHT_INDEX_REPEAT_DECAY>;\n    require-prior-idle-ms = <RIGHT_INDEX_STREAK_DECAY>;\n    #binding-cells = <2>;\n    bindings = <&kp>, <&kp>;\n  };\n  right_index_ringy_bilateral: homey_right_index_ringy_bilateral {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = RIGHT_INDEX_HOLDING_TYPE;\n    hold-trigger-key-positions = <LEFT_HAND_KEYS>;\n    hold-trigger-on-release; // wait for other home row mods\n    tapping-term-ms = <RIGHT_INDEX_HOLDING_TIME>;\n    quick-tap-ms = <RIGHT_INDEX_REPEAT_DECAY>;\n    require-prior-idle-ms = <RIGHT_INDEX_STREAK_DECAY>;\n    #binding-cells = <2>;\n    bindings = <&kp>, <&right_index_tap>;\n  };\n  #define RightIndexRingy right_index_ringy_bilateral RIGHT_RINGY_MOD RIGHT_RINGY_KEY\n  #ifndef LEFT_PINKY_MIDDY_HOLDING_TYPE\n  #define LEFT_PINKY_MIDDY_HOLDING_TYPE LEFT_PINKY_CHORD_HOLDING_TYPE\n  #endif\n  #ifndef LEFT_PINKY_MIDDY_HOLDING_TIME\n  #define LEFT_PINKY_MIDDY_HOLDING_TIME LEFT_PINKY_CHORD_HOLDING_TIME\n  #endif\n  #ifndef LEFT_PINKY_MIDDY_STREAK_DECAY\n  #define LEFT_PINKY_MIDDY_STREAK_DECAY LEFT_PINKY_CHORD_STREAK_DECAY\n  #endif\n  #ifndef LEFT_PINKY_MIDDY_REPEAT_DECAY\n  #define LEFT_PINKY_MIDDY_REPEAT_DECAY LEFT_PINKY_CHORD_REPEAT_DECAY\n  #endif\n  left_pinky_middy: homey_left_pinky_middy {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = LEFT_PINKY_HOLDING_TYPE;\n    hold-trigger-key-positions = <RIGHT_HAND_KEYS>;\n    hold-trigger-on-release; // wait for other home row mods\n    tapping-term-ms = <LEFT_PINKY_HOLDING_TIME>;\n    quick-tap-ms = <LEFT_PINKY_REPEAT_DECAY>;\n    require-prior-idle-ms = <LEFT_PINKY_STREAK_DECAY>;\n    #binding-cells = <2>;\n    bindings = <&kp>, <&kp>;\n  };\n  left_pinky_middy_bilateral: homey_left_pinky_middy_bilateral {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = LEFT_PINKY_HOLDING_TYPE;\n    hold-trigger-key-positions = <RIGHT_HAND_KEYS>;\n    hold-trigger-on-release; // wait for other home row mods\n    tapping-term-ms = <LEFT_PINKY_HOLDING_TIME>;\n    quick-tap-ms = <LEFT_PINKY_REPEAT_DECAY>;\n    require-prior-idle-ms = <LEFT_PINKY_STREAK_DECAY>;\n    #binding-cells = <2>;\n    bindings = <&kp>, <&left_pinky_tap>;\n  };\n  #define LeftPinkyMiddy left_pinky_middy_bilateral LEFT_MIDDY_MOD LEFT_MIDDY_KEY\n  #ifndef LEFT_RINGY_MIDDY_HOLDING_TYPE\n  #define LEFT_RINGY_MIDDY_HOLDING_TYPE LEFT_RINGY_CHORD_HOLDING_TYPE\n  #endif\n  #ifndef LEFT_RINGY_MIDDY_HOLDING_TIME\n  #define LEFT_RINGY_MIDDY_HOLDING_TIME LEFT_RINGY_CHORD_HOLDING_TIME\n  #endif\n  #ifndef LEFT_RINGY_MIDDY_STREAK_DECAY\n  #define LEFT_RINGY_MIDDY_STREAK_DECAY LEFT_RINGY_CHORD_STREAK_DECAY\n  #endif\n  #ifndef LEFT_RINGY_MIDDY_REPEAT_DECAY\n  #define LEFT_RINGY_MIDDY_REPEAT_DECAY LEFT_RINGY_CHORD_REPEAT_DECAY\n  #endif\n  left_ringy_middy: homey_left_ringy_middy {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = LEFT_RINGY_HOLDING_TYPE;\n    hold-trigger-key-positions = <RIGHT_HAND_KEYS>;\n    hold-trigger-on-release; // wait for other home row mods\n    tapping-term-ms = <LEFT_RINGY_HOLDING_TIME>;\n    quick-tap-ms = <LEFT_RINGY_REPEAT_DECAY>;\n    require-prior-idle-ms = <LEFT_RINGY_STREAK_DECAY>;\n    #binding-cells = <2>;\n    bindings = <&kp>, <&kp>;\n  };\n  left_ringy_middy_bilateral: homey_left_ringy_middy_bilateral {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = LEFT_RINGY_HOLDING_TYPE;\n    hold-trigger-key-positions = <RIGHT_HAND_KEYS>;\n    hold-trigger-on-release; // wait for other home row mods\n    tapping-term-ms = <LEFT_RINGY_HOLDING_TIME>;\n    quick-tap-ms = <LEFT_RINGY_REPEAT_DECAY>;\n    require-prior-idle-ms = <LEFT_RINGY_STREAK_DECAY>;\n    #binding-cells = <2>;\n    bindings = <&kp>, <&left_ringy_tap>;\n  };\n  #define LeftRingyMiddy left_ringy_middy_bilateral LEFT_MIDDY_MOD LEFT_MIDDY_KEY\n  #ifndef LEFT_INDEX_MIDDY_HOLDING_TYPE\n  #define LEFT_INDEX_MIDDY_HOLDING_TYPE LEFT_INDEX_CHORD_HOLDING_TYPE\n  #endif\n  #ifndef LEFT_INDEX_MIDDY_HOLDING_TIME\n  #define LEFT_INDEX_MIDDY_HOLDING_TIME LEFT_INDEX_CHORD_HOLDING_TIME\n  #endif\n  #ifndef LEFT_INDEX_MIDDY_STREAK_DECAY\n  #define LEFT_INDEX_MIDDY_STREAK_DECAY LEFT_INDEX_CHORD_STREAK_DECAY\n  #endif\n  #ifndef LEFT_INDEX_MIDDY_REPEAT_DECAY\n  #define LEFT_INDEX_MIDDY_REPEAT_DECAY LEFT_INDEX_CHORD_REPEAT_DECAY\n  #endif\n  left_index_middy: homey_left_index_middy {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = LEFT_INDEX_HOLDING_TYPE;\n    hold-trigger-key-positions = <RIGHT_HAND_KEYS>;\n    hold-trigger-on-release; // wait for other home row mods\n    tapping-term-ms = <LEFT_INDEX_HOLDING_TIME>;\n    quick-tap-ms = <LEFT_INDEX_REPEAT_DECAY>;\n    require-prior-idle-ms = <LEFT_INDEX_STREAK_DECAY>;\n    #binding-cells = <2>;\n    bindings = <&kp>, <&kp>;\n  };\n  left_index_middy_bilateral: homey_left_index_middy_bilateral {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = LEFT_INDEX_HOLDING_TYPE;\n    hold-trigger-key-positions = <RIGHT_HAND_KEYS>;\n    hold-trigger-on-release; // wait for other home row mods\n    tapping-term-ms = <LEFT_INDEX_HOLDING_TIME>;\n    quick-tap-ms = <LEFT_INDEX_REPEAT_DECAY>;\n    require-prior-idle-ms = <LEFT_INDEX_STREAK_DECAY>;\n    #binding-cells = <2>;\n    bindings = <&kp>, <&left_index_tap>;\n  };\n  #define LeftIndexMiddy left_index_middy_bilateral LEFT_MIDDY_MOD LEFT_MIDDY_KEY\n  #ifndef RIGHT_PINKY_MIDDY_HOLDING_TYPE\n  #define RIGHT_PINKY_MIDDY_HOLDING_TYPE RIGHT_PINKY_CHORD_HOLDING_TYPE\n  #endif\n  #ifndef RIGHT_PINKY_MIDDY_HOLDING_TIME\n  #define RIGHT_PINKY_MIDDY_HOLDING_TIME RIGHT_PINKY_CHORD_HOLDING_TIME\n  #endif\n  #ifndef RIGHT_PINKY_MIDDY_STREAK_DECAY\n  #define RIGHT_PINKY_MIDDY_STREAK_DECAY RIGHT_PINKY_CHORD_STREAK_DECAY\n  #endif\n  #ifndef RIGHT_PINKY_MIDDY_REPEAT_DECAY\n  #define RIGHT_PINKY_MIDDY_REPEAT_DECAY RIGHT_PINKY_CHORD_REPEAT_DECAY\n  #endif\n  right_pinky_middy: homey_right_pinky_middy {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = RIGHT_PINKY_HOLDING_TYPE;\n    hold-trigger-key-positions = <LEFT_HAND_KEYS>;\n    hold-trigger-on-release; // wait for other home row mods\n    tapping-term-ms = <RIGHT_PINKY_HOLDING_TIME>;\n    quick-tap-ms = <RIGHT_PINKY_REPEAT_DECAY>;\n    require-prior-idle-ms = <RIGHT_PINKY_STREAK_DECAY>;\n    #binding-cells = <2>;\n    bindings = <&kp>, <&kp>;\n  };\n  right_pinky_middy_bilateral: homey_right_pinky_middy_bilateral {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = RIGHT_PINKY_HOLDING_TYPE;\n    hold-trigger-key-positions = <LEFT_HAND_KEYS>;\n    hold-trigger-on-release; // wait for other home row mods\n    tapping-term-ms = <RIGHT_PINKY_HOLDING_TIME>;\n    quick-tap-ms = <RIGHT_PINKY_REPEAT_DECAY>;\n    require-prior-idle-ms = <RIGHT_PINKY_STREAK_DECAY>;\n    #binding-cells = <2>;\n    bindings = <&kp>, <&right_pinky_tap>;\n  };\n  #define RightPinkyMiddy right_pinky_middy_bilateral RIGHT_MIDDY_MOD RIGHT_MIDDY_KEY\n  #ifndef RIGHT_RINGY_MIDDY_HOLDING_TYPE\n  #define RIGHT_RINGY_MIDDY_HOLDING_TYPE RIGHT_RINGY_CHORD_HOLDING_TYPE\n  #endif\n  #ifndef RIGHT_RINGY_MIDDY_HOLDING_TIME\n  #define RIGHT_RINGY_MIDDY_HOLDING_TIME RIGHT_RINGY_CHORD_HOLDING_TIME\n  #endif\n  #ifndef RIGHT_RINGY_MIDDY_STREAK_DECAY\n  #define RIGHT_RINGY_MIDDY_STREAK_DECAY RIGHT_RINGY_CHORD_STREAK_DECAY\n  #endif\n  #ifndef RIGHT_RINGY_MIDDY_REPEAT_DECAY\n  #define RIGHT_RINGY_MIDDY_REPEAT_DECAY RIGHT_RINGY_CHORD_REPEAT_DECAY\n  #endif\n  right_ringy_middy: homey_right_ringy_middy {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = RIGHT_RINGY_HOLDING_TYPE;\n    hold-trigger-key-positions = <LEFT_HAND_KEYS>;\n    hold-trigger-on-release; // wait for other home row mods\n    tapping-term-ms = <RIGHT_RINGY_HOLDING_TIME>;\n    quick-tap-ms = <RIGHT_RINGY_REPEAT_DECAY>;\n    require-prior-idle-ms = <RIGHT_RINGY_STREAK_DECAY>;\n    #binding-cells = <2>;\n    bindings = <&kp>, <&kp>;\n  };\n  right_ringy_middy_bilateral: homey_right_ringy_middy_bilateral {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = RIGHT_RINGY_HOLDING_TYPE;\n    hold-trigger-key-positions = <LEFT_HAND_KEYS>;\n    hold-trigger-on-release; // wait for other home row mods\n    tapping-term-ms = <RIGHT_RINGY_HOLDING_TIME>;\n    quick-tap-ms = <RIGHT_RINGY_REPEAT_DECAY>;\n    require-prior-idle-ms = <RIGHT_RINGY_STREAK_DECAY>;\n    #binding-cells = <2>;\n    bindings = <&kp>, <&right_ringy_tap>;\n  };\n  #define RightRingyMiddy right_ringy_middy_bilateral RIGHT_MIDDY_MOD RIGHT_MIDDY_KEY\n  #ifndef RIGHT_INDEX_MIDDY_HOLDING_TYPE\n  #define RIGHT_INDEX_MIDDY_HOLDING_TYPE RIGHT_INDEX_CHORD_HOLDING_TYPE\n  #endif\n  #ifndef RIGHT_INDEX_MIDDY_HOLDING_TIME\n  #define RIGHT_INDEX_MIDDY_HOLDING_TIME RIGHT_INDEX_CHORD_HOLDING_TIME\n  #endif\n  #ifndef RIGHT_INDEX_MIDDY_STREAK_DECAY\n  #define RIGHT_INDEX_MIDDY_STREAK_DECAY RIGHT_INDEX_CHORD_STREAK_DECAY\n  #endif\n  #ifndef RIGHT_INDEX_MIDDY_REPEAT_DECAY\n  #define RIGHT_INDEX_MIDDY_REPEAT_DECAY RIGHT_INDEX_CHORD_REPEAT_DECAY\n  #endif\n  right_index_middy: homey_right_index_middy {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = RIGHT_INDEX_HOLDING_TYPE;\n    hold-trigger-key-positions = <LEFT_HAND_KEYS>;\n    hold-trigger-on-release; // wait for other home row mods\n    tapping-term-ms = <RIGHT_INDEX_HOLDING_TIME>;\n    quick-tap-ms = <RIGHT_INDEX_REPEAT_DECAY>;\n    require-prior-idle-ms = <RIGHT_INDEX_STREAK_DECAY>;\n    #binding-cells = <2>;\n    bindings = <&kp>, <&kp>;\n  };\n  right_index_middy_bilateral: homey_right_index_middy_bilateral {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = RIGHT_INDEX_HOLDING_TYPE;\n    hold-trigger-key-positions = <LEFT_HAND_KEYS>;\n    hold-trigger-on-release; // wait for other home row mods\n    tapping-term-ms = <RIGHT_INDEX_HOLDING_TIME>;\n    quick-tap-ms = <RIGHT_INDEX_REPEAT_DECAY>;\n    require-prior-idle-ms = <RIGHT_INDEX_STREAK_DECAY>;\n    #binding-cells = <2>;\n    bindings = <&kp>, <&right_index_tap>;\n  };\n  #define RightIndexMiddy right_index_middy_bilateral RIGHT_MIDDY_MOD RIGHT_MIDDY_KEY\n  #ifndef LEFT_PINKY_INDEX_HOLDING_TYPE\n  #define LEFT_PINKY_INDEX_HOLDING_TYPE LEFT_PINKY_CHORD_HOLDING_TYPE\n  #endif\n  #ifndef LEFT_PINKY_INDEX_HOLDING_TIME\n  #define LEFT_PINKY_INDEX_HOLDING_TIME LEFT_PINKY_CHORD_HOLDING_TIME\n  #endif\n  #ifndef LEFT_PINKY_INDEX_STREAK_DECAY\n  #define LEFT_PINKY_INDEX_STREAK_DECAY LEFT_PINKY_CHORD_STREAK_DECAY\n  #endif\n  #ifndef LEFT_PINKY_INDEX_REPEAT_DECAY\n  #define LEFT_PINKY_INDEX_REPEAT_DECAY LEFT_PINKY_CHORD_REPEAT_DECAY\n  #endif\n  left_pinky_index: homey_left_pinky_index {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = LEFT_PINKY_HOLDING_TYPE;\n    hold-trigger-key-positions = <RIGHT_HAND_KEYS>;\n    hold-trigger-on-release; // wait for other home row mods\n    tapping-term-ms = <LEFT_PINKY_HOLDING_TIME>;\n    quick-tap-ms = <LEFT_PINKY_REPEAT_DECAY>;\n    require-prior-idle-ms = <LEFT_PINKY_STREAK_DECAY>;\n    #binding-cells = <2>;\n    bindings = <&kp>, <&kp>;\n  };\n  left_pinky_index_bilateral: homey_left_pinky_index_bilateral {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = LEFT_PINKY_HOLDING_TYPE;\n    hold-trigger-key-positions = <RIGHT_HAND_KEYS>;\n    hold-trigger-on-release; // wait for other home row mods\n    tapping-term-ms = <LEFT_PINKY_HOLDING_TIME>;\n    quick-tap-ms = <LEFT_PINKY_REPEAT_DECAY>;\n    require-prior-idle-ms = <LEFT_PINKY_STREAK_DECAY>;\n    #binding-cells = <2>;\n    bindings = <&kp>, <&left_pinky_tap>;\n  };\n  #define LeftPinkyIndex left_pinky_index_bilateral LEFT_INDEX_MOD LEFT_INDEX_KEY\n  #ifndef LEFT_RINGY_INDEX_HOLDING_TYPE\n  #define LEFT_RINGY_INDEX_HOLDING_TYPE LEFT_RINGY_CHORD_HOLDING_TYPE\n  #endif\n  #ifndef LEFT_RINGY_INDEX_HOLDING_TIME\n  #define LEFT_RINGY_INDEX_HOLDING_TIME LEFT_RINGY_CHORD_HOLDING_TIME\n  #endif\n  #ifndef LEFT_RINGY_INDEX_STREAK_DECAY\n  #define LEFT_RINGY_INDEX_STREAK_DECAY LEFT_RINGY_CHORD_STREAK_DECAY\n  #endif\n  #ifndef LEFT_RINGY_INDEX_REPEAT_DECAY\n  #define LEFT_RINGY_INDEX_REPEAT_DECAY LEFT_RINGY_CHORD_REPEAT_DECAY\n  #endif\n  left_ringy_index: homey_left_ringy_index {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = LEFT_RINGY_HOLDING_TYPE;\n    hold-trigger-key-positions = <RIGHT_HAND_KEYS>;\n    hold-trigger-on-release; // wait for other home row mods\n    tapping-term-ms = <LEFT_RINGY_HOLDING_TIME>;\n    quick-tap-ms = <LEFT_RINGY_REPEAT_DECAY>;\n    require-prior-idle-ms = <LEFT_RINGY_STREAK_DECAY>;\n    #binding-cells = <2>;\n    bindings = <&kp>, <&kp>;\n  };\n  left_ringy_index_bilateral: homey_left_ringy_index_bilateral {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = LEFT_RINGY_HOLDING_TYPE;\n    hold-trigger-key-positions = <RIGHT_HAND_KEYS>;\n    hold-trigger-on-release; // wait for other home row mods\n    tapping-term-ms = <LEFT_RINGY_HOLDING_TIME>;\n    quick-tap-ms = <LEFT_RINGY_REPEAT_DECAY>;\n    require-prior-idle-ms = <LEFT_RINGY_STREAK_DECAY>;\n    #binding-cells = <2>;\n    bindings = <&kp>, <&left_ringy_tap>;\n  };\n  #define LeftRingyIndex left_ringy_index_bilateral LEFT_INDEX_MOD LEFT_INDEX_KEY\n  #ifndef LEFT_MIDDY_INDEX_HOLDING_TYPE\n  #define LEFT_MIDDY_INDEX_HOLDING_TYPE LEFT_MIDDY_CHORD_HOLDING_TYPE\n  #endif\n  #ifndef LEFT_MIDDY_INDEX_HOLDING_TIME\n  #define LEFT_MIDDY_INDEX_HOLDING_TIME LEFT_MIDDY_CHORD_HOLDING_TIME\n  #endif\n  #ifndef LEFT_MIDDY_INDEX_STREAK_DECAY\n  #define LEFT_MIDDY_INDEX_STREAK_DECAY LEFT_MIDDY_CHORD_STREAK_DECAY\n  #endif\n  #ifndef LEFT_MIDDY_INDEX_REPEAT_DECAY\n  #define LEFT_MIDDY_INDEX_REPEAT_DECAY LEFT_MIDDY_CHORD_REPEAT_DECAY\n  #endif\n  left_middy_index: homey_left_middy_index {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = LEFT_MIDDY_HOLDING_TYPE;\n    hold-trigger-key-positions = <RIGHT_HAND_KEYS>;\n    hold-trigger-on-release; // wait for other home row mods\n    tapping-term-ms = <LEFT_MIDDY_HOLDING_TIME>;\n    quick-tap-ms = <LEFT_MIDDY_REPEAT_DECAY>;\n    require-prior-idle-ms = <LEFT_MIDDY_STREAK_DECAY>;\n    #binding-cells = <2>;\n    bindings = <&kp>, <&kp>;\n  };\n  left_middy_index_bilateral: homey_left_middy_index_bilateral {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = LEFT_MIDDY_HOLDING_TYPE;\n    hold-trigger-key-positions = <RIGHT_HAND_KEYS>;\n    hold-trigger-on-release; // wait for other home row mods\n    tapping-term-ms = <LEFT_MIDDY_HOLDING_TIME>;\n    quick-tap-ms = <LEFT_MIDDY_REPEAT_DECAY>;\n    require-prior-idle-ms = <LEFT_MIDDY_STREAK_DECAY>;\n    #binding-cells = <2>;\n    bindings = <&kp>, <&left_middy_tap>;\n  };\n  #define LeftMiddyIndex left_middy_index_bilateral LEFT_INDEX_MOD LEFT_INDEX_KEY\n  #ifndef RIGHT_PINKY_INDEX_HOLDING_TYPE\n  #define RIGHT_PINKY_INDEX_HOLDING_TYPE RIGHT_PINKY_CHORD_HOLDING_TYPE\n  #endif\n  #ifndef RIGHT_PINKY_INDEX_HOLDING_TIME\n  #define RIGHT_PINKY_INDEX_HOLDING_TIME RIGHT_PINKY_CHORD_HOLDING_TIME\n  #endif\n  #ifndef RIGHT_PINKY_INDEX_STREAK_DECAY\n  #define RIGHT_PINKY_INDEX_STREAK_DECAY RIGHT_PINKY_CHORD_STREAK_DECAY\n  #endif\n  #ifndef RIGHT_PINKY_INDEX_REPEAT_DECAY\n  #define RIGHT_PINKY_INDEX_REPEAT_DECAY RIGHT_PINKY_CHORD_REPEAT_DECAY\n  #endif\n  right_pinky_index: homey_right_pinky_index {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = RIGHT_PINKY_HOLDING_TYPE;\n    hold-trigger-key-positions = <LEFT_HAND_KEYS>;\n    hold-trigger-on-release; // wait for other home row mods\n    tapping-term-ms = <RIGHT_PINKY_HOLDING_TIME>;\n    quick-tap-ms = <RIGHT_PINKY_REPEAT_DECAY>;\n    require-prior-idle-ms = <RIGHT_PINKY_STREAK_DECAY>;\n    #binding-cells = <2>;\n    bindings = <&kp>, <&kp>;\n  };\n  right_pinky_index_bilateral: homey_right_pinky_index_bilateral {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = RIGHT_PINKY_HOLDING_TYPE;\n    hold-trigger-key-positions = <LEFT_HAND_KEYS>;\n    hold-trigger-on-release; // wait for other home row mods\n    tapping-term-ms = <RIGHT_PINKY_HOLDING_TIME>;\n    quick-tap-ms = <RIGHT_PINKY_REPEAT_DECAY>;\n    require-prior-idle-ms = <RIGHT_PINKY_STREAK_DECAY>;\n    #binding-cells = <2>;\n    bindings = <&kp>, <&right_pinky_tap>;\n  };\n  #define RightPinkyIndex right_pinky_index_bilateral RIGHT_INDEX_MOD RIGHT_INDEX_KEY\n  #ifndef RIGHT_RINGY_INDEX_HOLDING_TYPE\n  #define RIGHT_RINGY_INDEX_HOLDING_TYPE RIGHT_RINGY_CHORD_HOLDING_TYPE\n  #endif\n  #ifndef RIGHT_RINGY_INDEX_HOLDING_TIME\n  #define RIGHT_RINGY_INDEX_HOLDING_TIME RIGHT_RINGY_CHORD_HOLDING_TIME\n  #endif\n  #ifndef RIGHT_RINGY_INDEX_STREAK_DECAY\n  #define RIGHT_RINGY_INDEX_STREAK_DECAY RIGHT_RINGY_CHORD_STREAK_DECAY\n  #endif\n  #ifndef RIGHT_RINGY_INDEX_REPEAT_DECAY\n  #define RIGHT_RINGY_INDEX_REPEAT_DECAY RIGHT_RINGY_CHORD_REPEAT_DECAY\n  #endif\n  right_ringy_index: homey_right_ringy_index {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = RIGHT_RINGY_HOLDING_TYPE;\n    hold-trigger-key-positions = <LEFT_HAND_KEYS>;\n    hold-trigger-on-release; // wait for other home row mods\n    tapping-term-ms = <RIGHT_RINGY_HOLDING_TIME>;\n    quick-tap-ms = <RIGHT_RINGY_REPEAT_DECAY>;\n    require-prior-idle-ms = <RIGHT_RINGY_STREAK_DECAY>;\n    #binding-cells = <2>;\n    bindings = <&kp>, <&kp>;\n  };\n  right_ringy_index_bilateral: homey_right_ringy_index_bilateral {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = RIGHT_RINGY_HOLDING_TYPE;\n    hold-trigger-key-positions = <LEFT_HAND_KEYS>;\n    hold-trigger-on-release; // wait for other home row mods\n    tapping-term-ms = <RIGHT_RINGY_HOLDING_TIME>;\n    quick-tap-ms = <RIGHT_RINGY_REPEAT_DECAY>;\n    require-prior-idle-ms = <RIGHT_RINGY_STREAK_DECAY>;\n    #binding-cells = <2>;\n    bindings = <&kp>, <&right_ringy_tap>;\n  };\n  #define RightRingyIndex right_ringy_index_bilateral RIGHT_INDEX_MOD RIGHT_INDEX_KEY\n  #ifndef RIGHT_MIDDY_INDEX_HOLDING_TYPE\n  #define RIGHT_MIDDY_INDEX_HOLDING_TYPE RIGHT_MIDDY_CHORD_HOLDING_TYPE\n  #endif\n  #ifndef RIGHT_MIDDY_INDEX_HOLDING_TIME\n  #define RIGHT_MIDDY_INDEX_HOLDING_TIME RIGHT_MIDDY_CHORD_HOLDING_TIME\n  #endif\n  #ifndef RIGHT_MIDDY_INDEX_STREAK_DECAY\n  #define RIGHT_MIDDY_INDEX_STREAK_DECAY RIGHT_MIDDY_CHORD_STREAK_DECAY\n  #endif\n  #ifndef RIGHT_MIDDY_INDEX_REPEAT_DECAY\n  #define RIGHT_MIDDY_INDEX_REPEAT_DECAY RIGHT_MIDDY_CHORD_REPEAT_DECAY\n  #endif\n  right_middy_index: homey_right_middy_index {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = RIGHT_MIDDY_HOLDING_TYPE;\n    hold-trigger-key-positions = <LEFT_HAND_KEYS>;\n    hold-trigger-on-release; // wait for other home row mods\n    tapping-term-ms = <RIGHT_MIDDY_HOLDING_TIME>;\n    quick-tap-ms = <RIGHT_MIDDY_REPEAT_DECAY>;\n    require-prior-idle-ms = <RIGHT_MIDDY_STREAK_DECAY>;\n    #binding-cells = <2>;\n    bindings = <&kp>, <&kp>;\n  };\n  right_middy_index_bilateral: homey_right_middy_index_bilateral {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = RIGHT_MIDDY_HOLDING_TYPE;\n    hold-trigger-key-positions = <LEFT_HAND_KEYS>;\n    hold-trigger-on-release; // wait for other home row mods\n    tapping-term-ms = <RIGHT_MIDDY_HOLDING_TIME>;\n    quick-tap-ms = <RIGHT_MIDDY_REPEAT_DECAY>;\n    require-prior-idle-ms = <RIGHT_MIDDY_STREAK_DECAY>;\n    #binding-cells = <2>;\n    bindings = <&kp>, <&right_middy_tap>;\n  };\n  #define RightMiddyIndex right_middy_index_bilateral RIGHT_INDEX_MOD RIGHT_INDEX_KEY\n\n  //\n  // Thumb cluster hold-tap keys for Miryoku layers\n  //\n  thumb: thumb_layer_access {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = THUMB_HOLDING_TYPE;\n    tapping-term-ms = <THUMB_HOLDING_TIME>;\n    quick-tap-ms = <THUMB_REPEAT_DECAY>; // enable repeat\n    #binding-cells = <2>;\n    bindings = <&mo>, <&kp>;\n    #ifdef THUMB_FORGIVENESS\n    retro-tap; // tap on standalone hold\n    #endif\n  };\n  stumb: thumb_layer_access_sticky_key_oneshot {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = THUMB_HOLDING_TYPE;\n    tapping-term-ms = <THUMB_HOLDING_TIME>;\n    quick-tap-ms = <THUMB_REPEAT_DECAY>; // enable repeat\n    #binding-cells = <2>;\n    bindings = <&mo>, <&sticky_key_oneshot>;\n  };\n  crumb: thumb_layer_access_retro_tap {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = THUMB_HOLDING_TYPE;\n    tapping-term-ms = <THUMB_HOLDING_TIME>;\n    quick-tap-ms = <THUMB_REPEAT_DECAY>; // enable repeat\n    #binding-cells = <2>;\n    bindings = <&mo>, <&kp>;\n    retro-tap; // tap on standalone hold\n  };\n  crumb_parang_left: crumb_layer_access_parang_left {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = THUMB_HOLDING_TYPE;\n    tapping-term-ms = <THUMB_HOLDING_TIME>;\n    quick-tap-ms = <THUMB_REPEAT_DECAY>; // enable repeat\n    #binding-cells = <2>;\n    bindings = <&mo>, <&parang_left>;\n    retro-tap; // tap on standalone hold\n  };\n  crumb_parang_right: crumb_layer_access_parang_right {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = THUMB_HOLDING_TYPE;\n    tapping-term-ms = <THUMB_HOLDING_TIME>;\n    quick-tap-ms = <THUMB_REPEAT_DECAY>; // enable repeat\n    #binding-cells = <2>;\n    bindings = <&mo>, <&parang_right>;\n    retro-tap; // tap on standalone hold\n  };\n  #ifdef LAYER_Engram\n  crumb_engram_AT: crumb_layer_access_engram_AT {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = THUMB_HOLDING_TYPE;\n    tapping-term-ms = <THUMB_HOLDING_TIME>;\n    quick-tap-ms = <THUMB_REPEAT_DECAY>; // enable repeat\n    #binding-cells = <2>;\n    bindings = <&mo>, <&engram_AT>;\n    retro-tap; // tap on standalone hold\n  };\n  thumb_engram_AT: thumb_layer_access_engram_AT {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = THUMB_HOLDING_TYPE;\n    tapping-term-ms = <THUMB_HOLDING_TIME>;\n    quick-tap-ms = <THUMB_REPEAT_DECAY>; // enable repeat\n    #binding-cells = <2>;\n    bindings = <&mo>, <&engram_AT>;\n  };\n  #endif\n  space: thumb_layer_access_spacebar {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = SPACE_HOLDING_TYPE;\n    tapping-term-ms = <SPACE_HOLDING_TIME>;\n    quick-tap-ms = <SPACE_REPEAT_DECAY>; // enable repeat\n    #binding-cells = <2>;\n    bindings = <&mo>, <&kp>;\n    #ifdef SPACE_FORGIVENESS\n    retro-tap; // tap on standalone hold\n    #endif\n  };\n\n  //\n  // Shift + LEFT_PARENTHESIS = LESS_THAN\n  //\n  parang_left: left_parenthesis_and_less_than {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&kp LPAR>, <&kp LT>;\n    mods = <(MOD_LSFT|MOD_RSFT)>;\n  };\n\n  //\n  // Shift + RIGHT_PARENTHESIS = GREATER_THAN\n  //\n  parang_right: right_parenthesis_and_greater_than {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&kp RPAR>, <&kp GT>;\n    mods = <(MOD_LSFT|MOD_RSFT)>;\n  };\n\n  //\n  // Custom shifted pairs for the Engram layout\n  // - https://engram.dev/\n  // - https://sunaku.github.io/engram-keyboard-layout.html\n  //\n  #ifdef LAYER_Engram\n  engram_N1: engram_shift_N1_PIPE {\n      compatible = \"zmk,behavior-mod-morph\";\n      #binding-cells = <0>;\n      bindings = <&kp N1>, <&kp PIPE>;\n      mods = <(MOD_LSFT|MOD_RSFT)>;\n  };\n  engram_N2: engram_shift_N2_EQUAL {\n      compatible = \"zmk,behavior-mod-morph\";\n      #binding-cells = <0>;\n      bindings = <&kp N2>, <&kp EQUAL>;\n      mods = <(MOD_LSFT|MOD_RSFT)>;\n  };\n  engram_N3: engram_shift_N3_TILDE {\n      compatible = \"zmk,behavior-mod-morph\";\n      #binding-cells = <0>;\n      bindings = <&kp N3>, <&kp TILDE>;\n      mods = <(MOD_LSFT|MOD_RSFT)>;\n  };\n  engram_N4: engram_shift_N4_PLUS {\n      compatible = \"zmk,behavior-mod-morph\";\n      #binding-cells = <0>;\n      bindings = <&kp N4>, <&kp PLUS>;\n      mods = <(MOD_LSFT|MOD_RSFT)>;\n  };\n  engram_N5: engram_shift_N5_LT {\n      compatible = \"zmk,behavior-mod-morph\";\n      #binding-cells = <0>;\n      bindings = <&kp N5>, <&kp LT>;\n      mods = <(MOD_LSFT|MOD_RSFT)>;\n  };\n  engram_N6: engram_shift_N6_GT {\n      compatible = \"zmk,behavior-mod-morph\";\n      #binding-cells = <0>;\n      bindings = <&kp N6>, <&kp GT>;\n      mods = <(MOD_LSFT|MOD_RSFT)>;\n  };\n  engram_N7: engram_shift_N7_CARET {\n      compatible = \"zmk,behavior-mod-morph\";\n      #binding-cells = <0>;\n      bindings = <&kp N7>, <&kp CARET>;\n      mods = <(MOD_LSFT|MOD_RSFT)>;\n  };\n  engram_N8: engram_shift_N8_AMPS {\n      compatible = \"zmk,behavior-mod-morph\";\n      #binding-cells = <0>;\n      bindings = <&kp N8>, <&kp AMPS>;\n      mods = <(MOD_LSFT|MOD_RSFT)>;\n  };\n  engram_N9: engram_shift_N9_PRCNT {\n      compatible = \"zmk,behavior-mod-morph\";\n      #binding-cells = <0>;\n      bindings = <&kp N9>, <&kp PRCNT>;\n      mods = <(MOD_LSFT|MOD_RSFT)>;\n  };\n  engram_N0: engram_shift_N0_STAR {\n      compatible = \"zmk,behavior-mod-morph\";\n      #binding-cells = <0>;\n      bindings = <&kp N0>, <&kp STAR>;\n      mods = <(MOD_LSFT|MOD_RSFT)>;\n  };\n  engram_SQT: engram_shift_SQT_LPAR {\n      compatible = \"zmk,behavior-mod-morph\";\n      #binding-cells = <0>;\n      bindings = <&kp SQT>, <&kp LPAR>;\n      mods = <(MOD_LSFT|MOD_RSFT)>;\n  };\n  engram_DQT: engram_shift_DQT_RPAR {\n      compatible = \"zmk,behavior-mod-morph\";\n      #binding-cells = <0>;\n      bindings = <&kp DQT>, <&kp RPAR>;\n      mods = <(MOD_LSFT|MOD_RSFT)>;\n  };\n  engram_COMMA: engram_shift_COMMA_SEMI {\n      compatible = \"zmk,behavior-mod-morph\";\n      #binding-cells = <0>;\n      bindings = <&kp COMMA>, <&kp SEMI>;\n      mods = <(MOD_LSFT|MOD_RSFT)>;\n  };\n  engram_DOT: engram_shift_DOT_COLON {\n      compatible = \"zmk,behavior-mod-morph\";\n      #binding-cells = <0>;\n      bindings = <&kp DOT>, <&kp COLON>;\n      mods = <(MOD_LSFT|MOD_RSFT)>;\n  };\n  engram_QMARK: engram_shift_QMARK_EXCL {\n      compatible = \"zmk,behavior-mod-morph\";\n      #binding-cells = <0>;\n      bindings = <&kp QMARK>, <&kp EXCL>;\n      mods = <(MOD_LSFT|MOD_RSFT)>;\n  };\n  engram_HASH: engram_shift_HASH_DLLR {\n      compatible = \"zmk,behavior-mod-morph\";\n      #binding-cells = <0>;\n      bindings = <&kp HASH>, <&kp DLLR>;\n      mods = <(MOD_LSFT|MOD_RSFT)>;\n  };\n  engram_AT: engram_shift_AT_GRAVE {\n      compatible = \"zmk,behavior-mod-morph\";\n      #binding-cells = <0>;\n      bindings = <&kp AT>, <&kp GRAVE>;\n      mods = <(MOD_LSFT|MOD_RSFT)>;\n  };\n  engram_FSLH: engram_shift_FSLH_BSLH {\n      compatible = \"zmk,behavior-mod-morph\";\n      #binding-cells = <0>;\n      bindings = <&kp FSLH>, <&kp BSLH>;\n      mods = <(MOD_LSFT|MOD_RSFT)>;\n  };\n  #endif\n\n  //////////////////////////////////////////////////////////////////////////\n  //\n  // &sk (sticky key) variant that is truly one-shot\n  //\n  //////////////////////////////////////////////////////////////////////////\n\n  //\n  // STICKY_1SHOT_DECAY defines how much time you have left (milliseconds)\n  // after tapping a sticky key before it expires (won't apply to next tap).\n  //\n  #ifndef STICKY_1SHOT_DECAY\n  #define STICKY_1SHOT_DECAY 500\n  #endif\n\n  //\n  // STICKY_HOLDING_TIME defines how long you need to hold (milliseconds)\n  // sticky one-shot keys in order to trigger their hold (not tap) action.\n  //\n  #ifndef STICKY_HOLDING_TIME\n  #define STICKY_HOLDING_TIME (TAPPING_RESOLUTION + 50)\n  #endif\n\n  sticky_key_modtap: sticky_key_modtap {\n    compatible = \"zmk,behavior-hold-tap\";\n    flavor = \"tap-preferred\";\n    tapping-term-ms = <STICKY_HOLDING_TIME>;\n    #binding-cells = <2>;\n    bindings = <&kp>, <&sticky_key_oneshot>;\n  };\n  sticky_key_oneshot: sticky_key_oneshot_macro {\n    compatible = \"zmk,behavior-macro-one-param\";\n    wait-ms = <0>;\n    tap-ms = <0>;\n    #binding-cells = <1>;\n    bindings\n      = <&macro_param_1to1>\n      , <&macro_tap &sticky_key_quickrel MACRO_PLACEHOLDER>\n      ;\n  };\n  sticky_key_quickrel: sticky_key_quick_release {\n    compatible = \"zmk,behavior-sticky-key\";\n    #binding-cells = <1>;\n    bindings = <&kp>;\n    release-after-ms = <STICKY_1SHOT_DECAY>;\n    quick-release;\n    ignore-modifiers;\n  };\n\n  //////////////////////////////////////////////////////////////////////////\n  //\n  // ZMK global overrides\n  //\n  //////////////////////////////////////////////////////////////////////////\n\n  //\n  // CapsWord - ported from Pascal Getreuer's extension for QMK\n  // - https://zmk.dev/docs/behaviors/caps-word\n  // - https://getreuer.info/posts/keyboards/caps-word/index.html\n  //\n  caps_word {\n    continue-list = <\n      UNDERSCORE MINUS\n      BACKSPACE DELETE\n      N1 N2 N3 N4 N5 N6 N7 N8 N9 N0\n    >;\n  };\n\n};\n\nmacros {\n\n  ZMK_MACRO(dot_dot,\n    wait-ms = <0>;\n    tap-ms = <0>;\n    bindings = <&macro_tap &kp DOT &kp DOT>;\n  )\n\n  //\n  // Linux Magic System Request Key - hold this down and type REISUB\n  // - https://www.kernel.org/doc/html/latest/admin-guide/sysrq.html\n  // - https://github.com/manna-harbour/miryoku/discussions/259\n  // - https://unix.stackexchange.com/a/143955 (use LALT, not RALT)\n  //\n  ZMK_MACRO(linux_magic_sysrq,\n    wait-ms = <0>;\n    tap-ms = <0>;\n    bindings\n      = <&macro_press &mo 0 &kp LALT>\n      , <&macro_tap &kp PRINTSCREEN>\n      , <&macro_pause_for_release>\n      , <&macro_release &mo 0 &kp LALT>\n      ;\n  )\n\n  //\n  // Mod+Tab application switcher - hold this down to keep menu open\n  //\n  mod_tab: mod_tab_switcher {\n    compatible = \"zmk,behavior-macro-one-param\";\n    wait-ms = <0>;\n    tap-ms = <0>;\n    #binding-cells = <1>;\n    bindings\n      = <&macro_param_1to1>\n      , <&macro_press &kp MACRO_PLACEHOLDER>\n      , <&macro_tap &kp TAB>\n      , <&macro_pause_for_release>\n      , <&macro_param_1to1>\n      , <&macro_release &kp MACRO_PLACEHOLDER>\n      ;\n  };\n  mod_tab_chord: mod_tab_switcher_chord {\n    compatible = \"zmk,behavior-macro-two-param\";\n    wait-ms = <0>;\n    tap-ms = <0>;\n    #binding-cells = <2>;\n    bindings\n      = <&macro_param_2to1>\n      , <&macro_press &mo MACRO_PLACEHOLDER>\n      , <&macro_param_1to1>\n      , <&macro_press &mod_tab MACRO_PLACEHOLDER>\n      , <&macro_pause_for_release>\n      , <&macro_param_1to1>\n      , <&macro_release &mod_tab MACRO_PLACEHOLDER>\n      , <&macro_param_2to1>\n      , <&macro_release &mo MACRO_PLACEHOLDER>\n      ;\n  };\n\n  //////////////////////////////////////////////////////////////////////////\n  //\n  // Approximation of Pascal Getreuer's Select Word macro from QMK\n  // - https://getreuer.info/posts/keyboards/select-word/index.html\n  //\n  //////////////////////////////////////////////////////////////////////////\n\n  //\n  // SELECT_WORD_DELAY defines how long the macro waits (milliseconds)\n  // after moving the cursor before it selects a word.  A larger delay\n  // may allow the macro to move to the next word upon each invocation.\n  //\n  #ifndef SELECT_WORD_DELAY\n  #define SELECT_WORD_DELAY 1\n  #endif\n\n  #define select_all kp _C(A)\n\n  ZMK_MACRO(select_none,\n    wait-ms = <SELECT_WORD_DELAY>;\n    tap-ms = <SELECT_WORD_DELAY>;\n    bindings = <&kp DOWN &kp UP &kp RIGHT &kp LEFT>;\n  )\n\n  //\n  // select a word (jumps to next word upon each successive invocation)\n  //\n  select_word: select_word {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&select_word_right>, <&select_word_left>;\n    mods = <(MOD_LSFT|MOD_RSFT)>;\n  };\n  ZMK_MACRO(select_word_right,\n    wait-ms = <SELECT_WORD_DELAY>;\n    tap-ms = <SELECT_WORD_DELAY>;\n    bindings = <&kp _WORD(RIGHT) &kp _WORD(LEFT) &kp _WORD(LS(RIGHT))>;\n  )\n  ZMK_MACRO(select_word_left,\n    wait-ms = <SELECT_WORD_DELAY>;\n    tap-ms = <SELECT_WORD_DELAY>;\n    bindings = <&kp _WORD(LEFT) &kp _WORD(RIGHT) &kp _WORD(LS(LEFT))>;\n  )\n\n  //\n  // extend current selection by one word\n  //\n  extend_word: extend_word {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&extend_word_right>, <&extend_word_left>;\n    mods = <(MOD_LSFT|MOD_RSFT)>;\n  };\n  ZMK_MACRO(extend_word_right,\n    wait-ms = <SELECT_WORD_DELAY>;\n    tap-ms = <SELECT_WORD_DELAY>;\n    bindings = <&kp _WORD(LS(RIGHT))>;\n  )\n  ZMK_MACRO(extend_word_left,\n    wait-ms = <SELECT_WORD_DELAY>;\n    tap-ms = <SELECT_WORD_DELAY>;\n    bindings = <&kp _WORD(LS(LEFT))>;\n  )\n\n  //\n  // select current line\n  //\n  select_line: select_line {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&select_line_right>, <&select_line_left>;\n    mods = <(MOD_LSFT|MOD_RSFT)>;\n  };\n  ZMK_MACRO(select_line_right,\n    wait-ms = <SELECT_WORD_DELAY>;\n    tap-ms = <SELECT_WORD_DELAY>;\n    bindings = <&kp _HOME &kp LS(_END)>;\n  )\n  ZMK_MACRO(select_line_left,\n    wait-ms = <SELECT_WORD_DELAY>;\n    tap-ms = <SELECT_WORD_DELAY>;\n    bindings = <&kp _END &kp LS(_HOME)>;\n  )\n\n  //\n  // extend current selection by one line\n  //\n  extend_line: extend_line {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&extend_line_right>, <&extend_line_left>;\n    mods = <(MOD_LSFT|MOD_RSFT)>;\n  };\n  ZMK_MACRO(extend_line_right,\n    wait-ms = <SELECT_WORD_DELAY>;\n    tap-ms = <SELECT_WORD_DELAY>;\n    bindings = <&kp LS(DOWN) &kp LS(_END)>;\n  )\n  ZMK_MACRO(extend_line_left,\n    wait-ms = <SELECT_WORD_DELAY>;\n    tap-ms = <SELECT_WORD_DELAY>;\n    bindings = <&kp LS(UP) &kp LS(_HOME)>;\n  )\n\n  //////////////////////////////////////////////////////////////////////////\n  //\n  // World layer - international characters\n  //\n  //////////////////////////////////////////////////////////////////////////\n\n  //\n  // WORLD_USE_COMPOSE uses OS-native Compose keycodes instead of Unicode\n  // for characters in the \"compositions\" section of the `world.yaml` file.\n  //\n  // NOTE: keep this setting disabled when using UnicodeHexInput in macOS\n  // to avoid inconsistent behavior when typing World vs Emoji layer keys.\n  //\n  //#define WORLD_USE_COMPOSE\n\n  //\n  // WORLD_HOST_AZERTY indicates that your computer is set to AZERTY locale.\n  //\n  //#define WORLD_HOST_AZERTY\n  #ifdef WORLD_HOST_AZERTY\n    #define WORLD_SHIFT_NUMBER\n    #define _NA Q\n  #endif\n\n  //\n  // WORLD_SHIFT_NUMBER indicates that Shift must be applied when typing out\n  // digits from the number row, which is needed for locales such as AZERTY.\n  //\n  //#define WORLD_SHIFT_NUMBER\n  #ifdef WORLD_SHIFT_NUMBER\n    #define _N0 LS(N0)\n    #define _N1 LS(N1)\n    #define _N2 LS(N2)\n    #define _N3 LS(N3)\n    #define _N4 LS(N4)\n    #define _N5 LS(N5)\n    #define _N6 LS(N6)\n    #define _N7 LS(N7)\n    #define _N8 LS(N8)\n    #define _N9 LS(N9)\n  #endif\n\n  //\n  // UNICODE_TAP_DELAY defines how long the macro waits (milliseconds)\n  // between keystrokes while inputting the Unicode codepoint shortcut.\n  //\n  #ifndef UNICODE_TAP_DELAY\n  #define UNICODE_TAP_DELAY 1\n  #endif\n\n  //\n  // UNICODE_SEQ_DELAY defines how long the macro waits (milliseconds)\n  // between emitting Unicode codepoints in multi-codepoint characters.\n  //\n  #ifndef UNICODE_SEQ_DELAY\n  #define UNICODE_SEQ_DELAY 10\n  #endif\n\n  #define UNICODE(name, ...) \\\n    ZMK_MACRO(name, \\\n      wait-ms = <UNICODE_TAP_DELAY>; \\\n      tap-ms = <UNICODE_TAP_DELAY>; \\\n      bindings = __VA_ARGS__; \\\n    )\n\n  //\n  // UNICODE_SEQ_LINUX() specifies how Unicode hexadecimal codepoint\n  // keystrokes are transformed into Unicode characters under Linux.\n  //\n  #ifndef UNICODE_SEQ_LINUX\n  #define UNICODE_SEQ_LINUX(keystrokes) \\\n    <&macro_tap &kp LC(LS(U)) keystrokes &kp ENTER>\n  #endif\n\n  //\n  // UNICODE_SEQ_MACOS() specifies how Unicode hexadecimal codepoint\n  // keystrokes are transformed into Unicode characters under macOS.\n  //\n  #ifndef UNICODE_SEQ_MACOS\n  #define UNICODE_SEQ_MACOS(keystrokes) \\\n    <&macro_press &kp LALT> ,\\\n    <&macro_tap keystrokes> ,\\\n    <&macro_release &kp LALT>\n  #endif\n\n  //\n  // UNICODE_SEQ_WINDOWS() specifies how Unicode hexadecimal codepoint\n  // keystrokes are transformed into Unicode characters under Windows.\n  //\n  // If you've configured WinCompose to use a different trigger hotkey,\n  // such as F13 instead of the default RA(U) shortcut, simply override\n  // this definition to adapt all UNICODE() function calls accordingly.\n  //\n  #ifndef UNICODE_SEQ_WINDOWS\n  #define UNICODE_SEQ_WINDOWS(keystrokes) \\\n    <&macro_tap &kp RALT &kp U keystrokes &kp ENTER>\n  #endif\n\n  //\n  // COMPOSE_KEY_LINUX specifies the keycode for Compose key in Linux,\n  // which may be RALT by default but can be reconfigured as follows:\n  //\n  // $ setxkbmap -option compose:sclk # use ScrollLock as Compose key\n  //\n  // See xkeyboard-config(7) for possible choices for the Compose key:\n  // https://manpages.debian.org/stable/xkb-data/xkeyboard-config.7.en.html#Position_of_Compose_key\n  //\n  // #define COMPOSE_KEY_LINUX RALT            // compose:ralt\n  // #define COMPOSE_KEY_LINUX LGUI            // compose:lwin\n  // #define COMPOSE_KEY_LINUX RA(LGUI)        // compose:lwin-altgr\n  // #define COMPOSE_KEY_LINUX RGUI            // compose:rwin\n  // #define COMPOSE_KEY_LINUX RA(RGUI)        // compose:rwin-altgr\n  // #define COMPOSE_KEY_LINUX K_MENU          // compose:menu\n  // #define COMPOSE_KEY_LINUX RA(K_MENU)      // compose:menu-altgr\n  // #define COMPOSE_KEY_LINUX LCTL            // compose:lctrl\n  // #define COMPOSE_KEY_LINUX RA(LCTL)        // compose:lctrl-altgr\n  // #define COMPOSE_KEY_LINUX RCTL            // compose:rctrl\n  // #define COMPOSE_KEY_LINUX RA(RCTL)        // compose:rctrl-altgr\n  // #define COMPOSE_KEY_LINUX CAPS            // compose:caps\n  // #define COMPOSE_KEY_LINUX RA(CAPS)        // compose:caps-altgr\n  // #define COMPOSE_KEY_LINUX NON_US_BSLH     // compose:102\n  // #define COMPOSE_KEY_LINUX RA(NON_US_BSLH) // compose:102-altgr\n  // #define COMPOSE_KEY_LINUX PAUSE_BREAK     // compose:paus\n  // #define COMPOSE_KEY_LINUX PSCRN           // compose:prsc\n  // #define COMPOSE_KEY_LINUX SLCK            // compose:sclk\n  //\n  #ifndef COMPOSE_KEY_LINUX\n  #define COMPOSE_KEY_LINUX RALT\n  #endif\n\n  //\n  // COMPOSE_SEQ_LINUX() prefixes keystrokes with the Linux Compose key.\n  //\n  #ifndef COMPOSE_SEQ_LINUX\n  #define COMPOSE_SEQ_LINUX(keystrokes) \\\n    <&macro_tap &kp COMPOSE_KEY_LINUX keystrokes>\n  #endif\n\n  //\n  // COMPOSE_SEQ_MACOS() formats keystrokes for macOS character entry.\n  //\n  #ifndef COMPOSE_SEQ_MACOS\n  #define COMPOSE_SEQ_MACOS(keystrokes) \\\n    <&macro_tap keystrokes>\n  #endif\n\n  //\n  // COMPOSE_SEQ_WINDOWS() wraps keystrokes in Windows AltCode sequence.\n  //\n  #ifndef COMPOSE_SEQ_WINDOWS\n  #define COMPOSE_SEQ_WINDOWS(keystrokes) \\\n    <&macro_press &kp LALT>, \\\n    <&macro_tap keystrokes>, \\\n    <&macro_release &kp LALT>\n  #endif\n  #if OPERATING_SYSTEM == 'L'\n    #define UNICODE_MORPH_MODS (MOD_LCTL|MOD_LSFT)\n  #elif OPERATING_SYSTEM == 'M'\n    #define UNICODE_MORPH_MODS MOD_LALT\n  #elif OPERATING_SYSTEM == 'W'\n    #define UNICODE_MORPH_MODS MOD_RALT\n  #endif\n  #if OPERATING_SYSTEM == 'L'\n    // $ grep \"compose:\" /usr/share/X11/xkb/rules/base.lst\n    // compose:ralt         Right Alt\n    #if COMPOSE_KEY_LINUX == RALT\n      #define COMPOSE_MORPH_MODS MOD_RALT\n    // compose:lwin         Left Win\n    #elif COMPOSE_KEY_LINUX == LGUI\n      #define COMPOSE_MORPH_MODS MOD_LGUI\n    // compose:lwin-altgr   3rd level of Left Win\n    #elif COMPOSE_KEY_LINUX == RA(LGUI)\n      #define COMPOSE_MORPH_MODS (MOD_LGUI|MOD_RALT)\n    // compose:rwin         Right Win\n    #elif COMPOSE_KEY_LINUX == RGUI\n      #define COMPOSE_MORPH_MODS MOD_RGUI\n    // compose:rwin-altgr   3rd level of Right Win\n    #elif COMPOSE_KEY_LINUX == RA(RGUI)\n      #define COMPOSE_MORPH_MODS (MOD_RGUI|MOD_RALT)\n    // compose:menu         Menu\n    // compose:menu-altgr   3rd level of Menu\n    #elif COMPOSE_KEY_LINUX == RA(K_MENU)\n      #define COMPOSE_MORPH_MODS MOD_RALT\n    // compose:lctrl        Left Ctrl\n    #elif COMPOSE_KEY_LINUX == LCTL\n      #define COMPOSE_MORPH_MODS MOD_LCTL\n    // compose:lctrl-altgr  3rd level of Left Ctrl\n    #elif COMPOSE_KEY_LINUX == RA(LCTL)\n      #define COMPOSE_MORPH_MODS (MOD_LCTL|MOD_RALT)\n    // compose:rctrl        Right Ctrl\n    #elif COMPOSE_KEY_LINUX == RCTL\n      #define COMPOSE_MORPH_MODS MOD_RCTL\n    // compose:rctrl-altgr  3rd level of Right Ctrl\n    #elif COMPOSE_KEY_LINUX == RA(RCTL)\n      #define COMPOSE_MORPH_MODS (MOD_RCTL|MOD_RALT)\n    // compose:caps         Caps Lock\n    // compose:caps-altgr   3rd level of Caps Lock\n    #elif COMPOSE_KEY_LINUX == RA(CAPS)\n      #define COMPOSE_MORPH_MODS MOD_RALT\n    // compose:102          The \"&lt; &gt;\" key\n    // compose:102-altgr    3rd level of the \"&lt; &gt;\" key\n    #elif COMPOSE_KEY_LINUX == RA(NON_US_BSLH)\n      #define COMPOSE_MORPH_MODS MOD_RALT\n    // compose:paus         Pause\n    // compose:prsc         PrtSc\n    // compose:sclk         Scroll Lock\n    #else\n      #define COMPOSE_MORPH_MODS 0\n    #endif\n  #elif OPERATING_SYSTEM == 'M'\n    #define COMPOSE_MORPH_MODS 0\n  #elif OPERATING_SYSTEM == 'W'\n    #define COMPOSE_MORPH_MODS MOD_LALT\n  #endif\n  #ifndef _N0\n  #define _N0 N0\n  #endif\n  #ifndef _N1\n  #define _N1 N1\n  #endif\n  #ifndef _N2\n  #define _N2 N2\n  #endif\n  #ifndef _N3\n  #define _N3 N3\n  #endif\n  #ifndef _N4\n  #define _N4 N4\n  #endif\n  #ifndef _N5\n  #define _N5 N5\n  #endif\n  #ifndef _N6\n  #define _N6 N6\n  #endif\n  #ifndef _N7\n  #define _N7 N7\n  #endif\n  #ifndef _N8\n  #define _N8 N8\n  #endif\n  #ifndef _N9\n  #define _N9 N9\n  #endif\n  #ifndef _NA\n  #define _NA A\n  #endif\n  #ifndef _NB\n  #define _NB B\n  #endif\n  #ifndef _NC\n  #define _NC C\n  #endif\n  #ifndef _ND\n  #define _ND D\n  #endif\n  #ifndef _NE\n  #define _NE E\n  #endif\n  #ifndef _NF\n  #define _NF F\n  #endif\n\n  //\n  // NOTE: edit the world.yaml file and run `rake` to generate this:\n  //\n\n  //\n  // codepoints\n  //\n  UNICODE(world_currency_crypto_macro, /* ₿ */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N2 &kp _N0 &kp _NB &kp _NF)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _N2 &kp _N0 &kp _NB &kp _NF)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N2 &kp _N0 &kp _NB &kp _NF)\n    #endif\n  )\n  world_currency_crypto: world_currency_crypto {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_currency_crypto_macro>, <&world_currency_crypto_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_currency_crypto\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(world_currency_cent_macro, /* ¢ */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _NA &kp _N2)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _NA &kp _N2)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NA &kp _N2)\n    #endif\n  )\n  world_currency_cent: world_currency_cent {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_currency_cent_macro>, <&world_currency_cent_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_currency_cent\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(world_currency_sign_macro, /* ¤ */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _NA &kp _N4)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _NA &kp _N4)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NA &kp _N4)\n    #endif\n  )\n  world_currency_sign: world_currency_sign {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_currency_sign_macro>, <&world_currency_sign_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_currency_sign\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n\n  //\n  // characters\n  //\n  UNICODE(world_i_acute_lower_macro, /* í */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_i_acute_lower\n        COMPOSE_SEQ_LINUX(&kp SQT &kp I)\n      #else\n        UNICODE_SEQ_LINUX(&kp _NE &kp _ND)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_i_acute_lower\n        COMPOSE_SEQ_MACOS(&kp LA(E) &kp I)\n      #else\n        UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _NE &kp _ND)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_i_acute_lower\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N2 &kp KP_N3 &kp KP_N7)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NE &kp _ND)\n      #endif\n    #endif\n  )\n  world_i_acute_lower: world_i_acute_lower {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_i_acute_lower_macro>, <&world_i_acute_lower_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_i_acute_lower\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(world_i_acute_upper_macro, /* Í */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_i_acute_upper\n        COMPOSE_SEQ_LINUX(&kp SQT &kp LS(I))\n      #else\n        UNICODE_SEQ_LINUX(&kp _NC &kp _ND)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_i_acute_upper\n        COMPOSE_SEQ_MACOS(&kp LA(E) &kp LS(I))\n      #else\n        UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _NC &kp _ND)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_i_acute_upper\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N2 &kp KP_N0 &kp KP_N5)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NC &kp _ND)\n      #endif\n    #endif\n  )\n  world_i_acute_upper: world_i_acute_upper {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_i_acute_upper_macro>, <&world_i_acute_upper_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_i_acute_upper\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  world_i_acute: world_i_acute {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_i_acute_lower>, <&world_i_acute_upper>;\n    mods = <MOD_LSFT>;\n  };\n  UNICODE(world_i_diaeresis_lower_macro, /* ï */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_i_diaeresis_lower\n        COMPOSE_SEQ_LINUX(&kp DQT &kp I)\n      #else\n        UNICODE_SEQ_LINUX(&kp _NE &kp _NF)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_i_diaeresis_lower\n        COMPOSE_SEQ_MACOS(&kp LA(U) &kp I)\n      #else\n        UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _NE &kp _NF)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_i_diaeresis_lower\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N2 &kp KP_N3 &kp KP_N9)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NE &kp _NF)\n      #endif\n    #endif\n  )\n  world_i_diaeresis_lower: world_i_diaeresis_lower {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_i_diaeresis_lower_macro>, <&world_i_diaeresis_lower_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_i_diaeresis_lower\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(world_i_diaeresis_upper_macro, /* Ï */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_i_diaeresis_upper\n        COMPOSE_SEQ_LINUX(&kp DQT &kp LS(I))\n      #else\n        UNICODE_SEQ_LINUX(&kp _NC &kp _NF)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_i_diaeresis_upper\n        COMPOSE_SEQ_MACOS(&kp LA(U) &kp LS(I))\n      #else\n        UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _NC &kp _NF)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_i_diaeresis_upper\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N2 &kp KP_N0 &kp KP_N7)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NC &kp _NF)\n      #endif\n    #endif\n  )\n  world_i_diaeresis_upper: world_i_diaeresis_upper {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_i_diaeresis_upper_macro>, <&world_i_diaeresis_upper_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_i_diaeresis_upper\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  world_i_diaeresis: world_i_diaeresis {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_i_diaeresis_lower>, <&world_i_diaeresis_upper>;\n    mods = <MOD_LSFT>;\n  };\n  UNICODE(world_i_circumflex_lower_macro, /* î */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_i_circumflex_lower\n        COMPOSE_SEQ_LINUX(&kp CARET &kp I)\n      #else\n        UNICODE_SEQ_LINUX(&kp _NE &kp _NE)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_i_circumflex_lower\n        COMPOSE_SEQ_MACOS(&kp LA(I) &kp I)\n      #else\n        UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _NE &kp _NE)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_i_circumflex_lower\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N2 &kp KP_N3 &kp KP_N8)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NE &kp _NE)\n      #endif\n    #endif\n  )\n  world_i_circumflex_lower: world_i_circumflex_lower {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_i_circumflex_lower_macro>, <&world_i_circumflex_lower_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_i_circumflex_lower\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(world_i_circumflex_upper_macro, /* Î */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_i_circumflex_upper\n        COMPOSE_SEQ_LINUX(&kp CARET &kp LS(I))\n      #else\n        UNICODE_SEQ_LINUX(&kp _NC &kp _NE)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_i_circumflex_upper\n        COMPOSE_SEQ_MACOS(&kp LA(I) &kp LS(I))\n      #else\n        UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _NC &kp _NE)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_i_circumflex_upper\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N2 &kp KP_N0 &kp KP_N6)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NC &kp _NE)\n      #endif\n    #endif\n  )\n  world_i_circumflex_upper: world_i_circumflex_upper {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_i_circumflex_upper_macro>, <&world_i_circumflex_upper_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_i_circumflex_upper\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  world_i_circumflex: world_i_circumflex {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_i_circumflex_lower>, <&world_i_circumflex_upper>;\n    mods = <MOD_LSFT>;\n  };\n  UNICODE(world_i_grave_lower_macro, /* ì */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_i_grave_lower\n        COMPOSE_SEQ_LINUX(&kp GRAVE &kp I)\n      #else\n        UNICODE_SEQ_LINUX(&kp _NE &kp _NC)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_i_grave_lower\n        COMPOSE_SEQ_MACOS(&kp LA(GRAVE) &kp I)\n      #else\n        UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _NE &kp _NC)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_i_grave_lower\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N2 &kp KP_N3 &kp KP_N6)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NE &kp _NC)\n      #endif\n    #endif\n  )\n  world_i_grave_lower: world_i_grave_lower {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_i_grave_lower_macro>, <&world_i_grave_lower_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_i_grave_lower\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(world_i_grave_upper_macro, /* Ì */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_i_grave_upper\n        COMPOSE_SEQ_LINUX(&kp GRAVE &kp LS(I))\n      #else\n        UNICODE_SEQ_LINUX(&kp _NC &kp _NC)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_i_grave_upper\n        COMPOSE_SEQ_MACOS(&kp LA(GRAVE) &kp LS(I))\n      #else\n        UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _NC &kp _NC)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_i_grave_upper\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N2 &kp KP_N0 &kp KP_N6)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NC &kp _NC)\n      #endif\n    #endif\n  )\n  world_i_grave_upper: world_i_grave_upper {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_i_grave_upper_macro>, <&world_i_grave_upper_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_i_grave_upper\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  world_i_grave: world_i_grave {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_i_grave_lower>, <&world_i_grave_upper>;\n    mods = <MOD_LSFT>;\n  };\n  UNICODE(world_e_acute_lower_macro, /* é */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_e_acute_lower\n        COMPOSE_SEQ_LINUX(&kp SQT &kp E)\n      #else\n        UNICODE_SEQ_LINUX(&kp _NE &kp _N9)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_e_acute_lower\n        COMPOSE_SEQ_MACOS(&kp LA(E) &kp E)\n      #else\n        UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _NE &kp _N9)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_e_acute_lower\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N2 &kp KP_N3 &kp KP_N3)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NE &kp _N9)\n      #endif\n    #endif\n  )\n  world_e_acute_lower: world_e_acute_lower {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_e_acute_lower_macro>, <&world_e_acute_lower_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_e_acute_lower\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(world_e_acute_upper_macro, /* É */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_e_acute_upper\n        COMPOSE_SEQ_LINUX(&kp SQT &kp LS(E))\n      #else\n        UNICODE_SEQ_LINUX(&kp _NC &kp _N9)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_e_acute_upper\n        COMPOSE_SEQ_MACOS(&kp LA(E) &kp LS(E))\n      #else\n        UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _NC &kp _N9)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_e_acute_upper\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N2 &kp KP_N0 &kp KP_N1)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NC &kp _N9)\n      #endif\n    #endif\n  )\n  world_e_acute_upper: world_e_acute_upper {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_e_acute_upper_macro>, <&world_e_acute_upper_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_e_acute_upper\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  world_e_acute: world_e_acute {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_e_acute_lower>, <&world_e_acute_upper>;\n    mods = <MOD_LSFT>;\n  };\n  UNICODE(world_e_diaeresis_lower_macro, /* ë */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_e_diaeresis_lower\n        COMPOSE_SEQ_LINUX(&kp DQT &kp E)\n      #else\n        UNICODE_SEQ_LINUX(&kp _NE &kp _NB)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_e_diaeresis_lower\n        COMPOSE_SEQ_MACOS(&kp LA(U) &kp E)\n      #else\n        UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _NE &kp _NB)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_e_diaeresis_lower\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N2 &kp KP_N3 &kp KP_N5)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NE &kp _NB)\n      #endif\n    #endif\n  )\n  world_e_diaeresis_lower: world_e_diaeresis_lower {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_e_diaeresis_lower_macro>, <&world_e_diaeresis_lower_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_e_diaeresis_lower\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(world_e_diaeresis_upper_macro, /* Ë */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_e_diaeresis_upper\n        COMPOSE_SEQ_LINUX(&kp DQT &kp LS(E))\n      #else\n        UNICODE_SEQ_LINUX(&kp _NC &kp _NB)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_e_diaeresis_upper\n        COMPOSE_SEQ_MACOS(&kp LA(U) &kp LS(E))\n      #else\n        UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _NC &kp _NB)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_e_diaeresis_upper\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N2 &kp KP_N0 &kp KP_N3)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NC &kp _NB)\n      #endif\n    #endif\n  )\n  world_e_diaeresis_upper: world_e_diaeresis_upper {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_e_diaeresis_upper_macro>, <&world_e_diaeresis_upper_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_e_diaeresis_upper\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  world_e_diaeresis: world_e_diaeresis {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_e_diaeresis_lower>, <&world_e_diaeresis_upper>;\n    mods = <MOD_LSFT>;\n  };\n  UNICODE(world_e_circumflex_lower_macro, /* ê */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_e_circumflex_lower\n        COMPOSE_SEQ_LINUX(&kp CARET &kp E)\n      #else\n        UNICODE_SEQ_LINUX(&kp _NE &kp _NA)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_e_circumflex_lower\n        COMPOSE_SEQ_MACOS(&kp LA(I) &kp E)\n      #else\n        UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _NE &kp _NA)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_e_circumflex_lower\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N2 &kp KP_N3 &kp KP_N4)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NE &kp _NA)\n      #endif\n    #endif\n  )\n  world_e_circumflex_lower: world_e_circumflex_lower {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_e_circumflex_lower_macro>, <&world_e_circumflex_lower_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_e_circumflex_lower\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(world_e_circumflex_upper_macro, /* Ê */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_e_circumflex_upper\n        COMPOSE_SEQ_LINUX(&kp CARET &kp LS(E))\n      #else\n        UNICODE_SEQ_LINUX(&kp _NC &kp _NA)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_e_circumflex_upper\n        COMPOSE_SEQ_MACOS(&kp LA(I) &kp LS(E))\n      #else\n        UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _NC &kp _NA)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_e_circumflex_upper\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N2 &kp KP_N0 &kp KP_N2)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NC &kp _NA)\n      #endif\n    #endif\n  )\n  world_e_circumflex_upper: world_e_circumflex_upper {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_e_circumflex_upper_macro>, <&world_e_circumflex_upper_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_e_circumflex_upper\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  world_e_circumflex: world_e_circumflex {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_e_circumflex_lower>, <&world_e_circumflex_upper>;\n    mods = <MOD_LSFT>;\n  };\n  UNICODE(world_e_grave_lower_macro, /* è */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_e_grave_lower\n        COMPOSE_SEQ_LINUX(&kp GRAVE &kp E)\n      #else\n        UNICODE_SEQ_LINUX(&kp _NE &kp _N8)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_e_grave_lower\n        COMPOSE_SEQ_MACOS(&kp LA(GRAVE) &kp E)\n      #else\n        UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _NE &kp _N8)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_e_grave_lower\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N2 &kp KP_N3 &kp KP_N2)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NE &kp _N8)\n      #endif\n    #endif\n  )\n  world_e_grave_lower: world_e_grave_lower {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_e_grave_lower_macro>, <&world_e_grave_lower_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_e_grave_lower\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(world_e_grave_upper_macro, /* È */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_e_grave_upper\n        COMPOSE_SEQ_LINUX(&kp GRAVE &kp LS(E))\n      #else\n        UNICODE_SEQ_LINUX(&kp _NC &kp _N8)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_e_grave_upper\n        COMPOSE_SEQ_MACOS(&kp LA(GRAVE) &kp LS(E))\n      #else\n        UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _NC &kp _N8)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_e_grave_upper\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N2 &kp KP_N0 &kp KP_N0)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NC &kp _N8)\n      #endif\n    #endif\n  )\n  world_e_grave_upper: world_e_grave_upper {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_e_grave_upper_macro>, <&world_e_grave_upper_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_e_grave_upper\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  world_e_grave: world_e_grave {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_e_grave_lower>, <&world_e_grave_upper>;\n    mods = <MOD_LSFT>;\n  };\n  UNICODE(world_e_oe_lower_macro, /* œ */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_e_oe_lower\n        COMPOSE_SEQ_LINUX(&kp O &kp E)\n      #else\n        UNICODE_SEQ_LINUX(&kp _N1 &kp _N5 &kp _N3)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_e_oe_lower\n        COMPOSE_SEQ_MACOS(&kp LA(Q))\n      #else\n        UNICODE_SEQ_MACOS(&kp _N0 &kp _N1 &kp _N5 &kp _N3)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_e_oe_lower\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N1 &kp KP_N5 &kp KP_N6)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _N5 &kp _N3)\n      #endif\n    #endif\n  )\n  world_e_oe_lower: world_e_oe_lower {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_e_oe_lower_macro>, <&world_e_oe_lower_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_e_oe_lower\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(world_e_oe_upper_macro, /* Œ */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_e_oe_upper\n        COMPOSE_SEQ_LINUX(&kp LS(O) &kp LS(E))\n      #else\n        UNICODE_SEQ_LINUX(&kp _N1 &kp _N5 &kp _N2)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_e_oe_upper\n        COMPOSE_SEQ_MACOS(&kp LA(LS(Q)))\n      #else\n        UNICODE_SEQ_MACOS(&kp _N0 &kp _N1 &kp _N5 &kp _N2)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_e_oe_upper\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N1 &kp KP_N4 &kp KP_N0)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _N5 &kp _N2)\n      #endif\n    #endif\n  )\n  world_e_oe_upper: world_e_oe_upper {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_e_oe_upper_macro>, <&world_e_oe_upper_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_e_oe_upper\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  world_e_oe: world_e_oe {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_e_oe_lower>, <&world_e_oe_upper>;\n    mods = <MOD_LSFT>;\n  };\n  UNICODE(world_e_ae_lower_macro, /* æ */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_e_ae_lower\n        COMPOSE_SEQ_LINUX(&kp A &kp E)\n      #else\n        UNICODE_SEQ_LINUX(&kp _NE &kp _N6)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_e_ae_lower\n        COMPOSE_SEQ_MACOS(&kp LA(SQT))\n      #else\n        UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _NE &kp _N6)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_e_ae_lower\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N2 &kp KP_N3 &kp KP_N0)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NE &kp _N6)\n      #endif\n    #endif\n  )\n  world_e_ae_lower: world_e_ae_lower {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_e_ae_lower_macro>, <&world_e_ae_lower_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_e_ae_lower\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(world_e_ae_upper_macro, /* Æ */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_e_ae_upper\n        COMPOSE_SEQ_LINUX(&kp LS(A) &kp LS(E))\n      #else\n        UNICODE_SEQ_LINUX(&kp _NC &kp _N6)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_e_ae_upper\n        COMPOSE_SEQ_MACOS(&kp LA(LS(SQT)))\n      #else\n        UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _NC &kp _N6)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_e_ae_upper\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N1 &kp KP_N9 &kp KP_N8)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NC &kp _N6)\n      #endif\n    #endif\n  )\n  world_e_ae_upper: world_e_ae_upper {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_e_ae_upper_macro>, <&world_e_ae_upper_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_e_ae_upper\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  world_e_ae: world_e_ae {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_e_ae_lower>, <&world_e_ae_upper>;\n    mods = <MOD_LSFT>;\n  };\n  UNICODE(world_a_acute_lower_macro, /* á */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_a_acute_lower\n        COMPOSE_SEQ_LINUX(&kp SQT &kp A)\n      #else\n        UNICODE_SEQ_LINUX(&kp _NE &kp _N1)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_a_acute_lower\n        COMPOSE_SEQ_MACOS(&kp LA(E) &kp A)\n      #else\n        UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _NE &kp _N1)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_a_acute_lower\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N2 &kp KP_N2 &kp KP_N5)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NE &kp _N1)\n      #endif\n    #endif\n  )\n  world_a_acute_lower: world_a_acute_lower {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_a_acute_lower_macro>, <&world_a_acute_lower_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_a_acute_lower\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(world_a_acute_upper_macro, /* Á */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_a_acute_upper\n        COMPOSE_SEQ_LINUX(&kp SQT &kp LS(A))\n      #else\n        UNICODE_SEQ_LINUX(&kp _NC &kp _N1)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_a_acute_upper\n        COMPOSE_SEQ_MACOS(&kp LA(E) &kp LS(A))\n      #else\n        UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _NC &kp _N1)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_a_acute_upper\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N1 &kp KP_N9 &kp KP_N3)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NC &kp _N1)\n      #endif\n    #endif\n  )\n  world_a_acute_upper: world_a_acute_upper {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_a_acute_upper_macro>, <&world_a_acute_upper_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_a_acute_upper\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  world_a_acute: world_a_acute {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_a_acute_lower>, <&world_a_acute_upper>;\n    mods = <MOD_LSFT>;\n  };\n  UNICODE(world_a_diaeresis_lower_macro, /* ä */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_a_diaeresis_lower\n        COMPOSE_SEQ_LINUX(&kp DQT &kp A)\n      #else\n        UNICODE_SEQ_LINUX(&kp _NE &kp _N4)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_a_diaeresis_lower\n        COMPOSE_SEQ_MACOS(&kp LA(U) &kp A)\n      #else\n        UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _NE &kp _N4)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_a_diaeresis_lower\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N2 &kp KP_N2 &kp KP_N8)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NE &kp _N4)\n      #endif\n    #endif\n  )\n  world_a_diaeresis_lower: world_a_diaeresis_lower {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_a_diaeresis_lower_macro>, <&world_a_diaeresis_lower_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_a_diaeresis_lower\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(world_a_diaeresis_upper_macro, /* Ä */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_a_diaeresis_upper\n        COMPOSE_SEQ_LINUX(&kp DQT &kp LS(A))\n      #else\n        UNICODE_SEQ_LINUX(&kp _NC &kp _N4)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_a_diaeresis_upper\n        COMPOSE_SEQ_MACOS(&kp LA(U) &kp LS(A))\n      #else\n        UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _NC &kp _N4)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_a_diaeresis_upper\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N1 &kp KP_N9 &kp KP_N6)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NC &kp _N4)\n      #endif\n    #endif\n  )\n  world_a_diaeresis_upper: world_a_diaeresis_upper {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_a_diaeresis_upper_macro>, <&world_a_diaeresis_upper_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_a_diaeresis_upper\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  world_a_diaeresis: world_a_diaeresis {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_a_diaeresis_lower>, <&world_a_diaeresis_upper>;\n    mods = <MOD_LSFT>;\n  };\n  UNICODE(world_a_circumflex_lower_macro, /* â */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_a_circumflex_lower\n        COMPOSE_SEQ_LINUX(&kp CARET &kp A)\n      #else\n        UNICODE_SEQ_LINUX(&kp _NE &kp _N2)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_a_circumflex_lower\n        COMPOSE_SEQ_MACOS(&kp LA(I) &kp A)\n      #else\n        UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _NE &kp _N2)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_a_circumflex_lower\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N2 &kp KP_N2 &kp KP_N6)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NE &kp _N2)\n      #endif\n    #endif\n  )\n  world_a_circumflex_lower: world_a_circumflex_lower {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_a_circumflex_lower_macro>, <&world_a_circumflex_lower_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_a_circumflex_lower\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(world_a_circumflex_upper_macro, /* Â */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_a_circumflex_upper\n        COMPOSE_SEQ_LINUX(&kp CARET &kp LS(A))\n      #else\n        UNICODE_SEQ_LINUX(&kp _NC &kp _N2)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_a_circumflex_upper\n        COMPOSE_SEQ_MACOS(&kp LA(I) &kp LS(A))\n      #else\n        UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _NC &kp _N2)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_a_circumflex_upper\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N1 &kp KP_N9 &kp KP_N4)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NC &kp _N2)\n      #endif\n    #endif\n  )\n  world_a_circumflex_upper: world_a_circumflex_upper {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_a_circumflex_upper_macro>, <&world_a_circumflex_upper_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_a_circumflex_upper\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  world_a_circumflex: world_a_circumflex {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_a_circumflex_lower>, <&world_a_circumflex_upper>;\n    mods = <MOD_LSFT>;\n  };\n  UNICODE(world_a_grave_lower_macro, /* à */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_a_grave_lower\n        COMPOSE_SEQ_LINUX(&kp GRAVE &kp A)\n      #else\n        UNICODE_SEQ_LINUX(&kp _NE &kp _N0)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_a_grave_lower\n        COMPOSE_SEQ_MACOS(&kp LA(GRAVE) &kp A)\n      #else\n        UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _NE &kp _N0)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_a_grave_lower\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N2 &kp KP_N2 &kp KP_N4)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NE &kp _N0)\n      #endif\n    #endif\n  )\n  world_a_grave_lower: world_a_grave_lower {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_a_grave_lower_macro>, <&world_a_grave_lower_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_a_grave_lower\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(world_a_grave_upper_macro, /* À */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_a_grave_upper\n        COMPOSE_SEQ_LINUX(&kp GRAVE &kp LS(A))\n      #else\n        UNICODE_SEQ_LINUX(&kp _NC &kp _N0)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_a_grave_upper\n        COMPOSE_SEQ_MACOS(&kp LA(GRAVE) &kp LS(A))\n      #else\n        UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _NC &kp _N0)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_a_grave_upper\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N1 &kp KP_N9 &kp KP_N2)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NC &kp _N0)\n      #endif\n    #endif\n  )\n  world_a_grave_upper: world_a_grave_upper {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_a_grave_upper_macro>, <&world_a_grave_upper_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_a_grave_upper\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  world_a_grave: world_a_grave {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_a_grave_lower>, <&world_a_grave_upper>;\n    mods = <MOD_LSFT>;\n  };\n  UNICODE(world_a_tilde_lower_macro, /* ã */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_a_tilde_lower\n        COMPOSE_SEQ_LINUX(&kp TILDE &kp A)\n      #else\n        UNICODE_SEQ_LINUX(&kp _NE &kp _N3)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_a_tilde_lower\n        COMPOSE_SEQ_MACOS(&kp LA(N) &kp A)\n      #else\n        UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _NE &kp _N3)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_a_tilde_lower\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N2 &kp KP_N2 &kp KP_N7)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NE &kp _N3)\n      #endif\n    #endif\n  )\n  world_a_tilde_lower: world_a_tilde_lower {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_a_tilde_lower_macro>, <&world_a_tilde_lower_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_a_tilde_lower\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(world_a_tilde_upper_macro, /* Ã */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_a_tilde_upper\n        COMPOSE_SEQ_LINUX(&kp TILDE &kp LS(A))\n      #else\n        UNICODE_SEQ_LINUX(&kp _NC &kp _N3)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_a_tilde_upper\n        COMPOSE_SEQ_MACOS(&kp LA(N) &kp LS(A))\n      #else\n        UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _NC &kp _N3)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_a_tilde_upper\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N1 &kp KP_N9 &kp KP_N5)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NC &kp _N3)\n      #endif\n    #endif\n  )\n  world_a_tilde_upper: world_a_tilde_upper {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_a_tilde_upper_macro>, <&world_a_tilde_upper_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_a_tilde_upper\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  world_a_tilde: world_a_tilde {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_a_tilde_lower>, <&world_a_tilde_upper>;\n    mods = <MOD_LSFT>;\n  };\n  UNICODE(world_a_ring_lower_macro, /* å */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_a_ring_lower\n        COMPOSE_SEQ_LINUX(&kp O &kp A)\n      #else\n        UNICODE_SEQ_LINUX(&kp _NE &kp _N5)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_a_ring_lower\n        COMPOSE_SEQ_MACOS(&kp LA(A))\n      #else\n        UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _NE &kp _N5)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_a_ring_lower\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N2 &kp KP_N2 &kp KP_N9)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NE &kp _N5)\n      #endif\n    #endif\n  )\n  world_a_ring_lower: world_a_ring_lower {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_a_ring_lower_macro>, <&world_a_ring_lower_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_a_ring_lower\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(world_a_ring_upper_macro, /* Å */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_a_ring_upper\n        COMPOSE_SEQ_LINUX(&kp O &kp LS(A))\n      #else\n        UNICODE_SEQ_LINUX(&kp _NC &kp _N5)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_a_ring_upper\n        COMPOSE_SEQ_MACOS(&kp LA(LS(A)))\n      #else\n        UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _NC &kp _N5)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_a_ring_upper\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N1 &kp KP_N9 &kp KP_N7)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NC &kp _N5)\n      #endif\n    #endif\n  )\n  world_a_ring_upper: world_a_ring_upper {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_a_ring_upper_macro>, <&world_a_ring_upper_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_a_ring_upper\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  world_a_ring: world_a_ring {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_a_ring_lower>, <&world_a_ring_upper>;\n    mods = <MOD_LSFT>;\n  };\n  UNICODE(world_y_acute_lower_macro, /* ý */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_y_acute_lower\n        COMPOSE_SEQ_LINUX(&kp SQT &kp Y)\n      #else\n        UNICODE_SEQ_LINUX(&kp _NF &kp _ND)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_y_acute_lower\n        COMPOSE_SEQ_MACOS(&kp LA(E) &kp Y)\n      #else\n        UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _NF &kp _ND)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_y_acute_lower\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N2 &kp KP_N5 &kp KP_N3)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NF &kp _ND)\n      #endif\n    #endif\n  )\n  world_y_acute_lower: world_y_acute_lower {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_y_acute_lower_macro>, <&world_y_acute_lower_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_y_acute_lower\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(world_y_acute_upper_macro, /* Ý */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_y_acute_upper\n        COMPOSE_SEQ_LINUX(&kp SQT &kp LS(Y))\n      #else\n        UNICODE_SEQ_LINUX(&kp _ND &kp _ND)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_y_acute_upper\n        COMPOSE_SEQ_MACOS(&kp LA(E) &kp LS(Y))\n      #else\n        UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _ND &kp _ND)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_y_acute_upper\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N2 &kp KP_N2 &kp KP_N1)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _ND &kp _ND)\n      #endif\n    #endif\n  )\n  world_y_acute_upper: world_y_acute_upper {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_y_acute_upper_macro>, <&world_y_acute_upper_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_y_acute_upper\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  world_y_acute: world_y_acute {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_y_acute_lower>, <&world_y_acute_upper>;\n    mods = <MOD_LSFT>;\n  };\n  UNICODE(world_y_diaeresis_lower_macro, /* ÿ */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_y_diaeresis_lower\n        COMPOSE_SEQ_LINUX(&kp DQT &kp Y)\n      #else\n        UNICODE_SEQ_LINUX(&kp _NF &kp _NF)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_y_diaeresis_lower\n        COMPOSE_SEQ_MACOS(&kp LA(U) &kp Y)\n      #else\n        UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _NF &kp _NF)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_y_diaeresis_lower\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N2 &kp KP_N5 &kp KP_N5)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NF &kp _NF)\n      #endif\n    #endif\n  )\n  world_y_diaeresis_lower: world_y_diaeresis_lower {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_y_diaeresis_lower_macro>, <&world_y_diaeresis_lower_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_y_diaeresis_lower\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(world_y_diaeresis_upper_macro, /* Ÿ */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_y_diaeresis_upper\n        COMPOSE_SEQ_LINUX(&kp DQT &kp LS(Y))\n      #else\n        UNICODE_SEQ_LINUX(&kp _N1 &kp _N7 &kp _N8)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_y_diaeresis_upper\n        COMPOSE_SEQ_MACOS(&kp LA(U) &kp LS(Y))\n      #else\n        UNICODE_SEQ_MACOS(&kp _N0 &kp _N1 &kp _N7 &kp _N8)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_y_diaeresis_upper\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N1 &kp KP_N5 &kp KP_N9)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _N7 &kp _N8)\n      #endif\n    #endif\n  )\n  world_y_diaeresis_upper: world_y_diaeresis_upper {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_y_diaeresis_upper_macro>, <&world_y_diaeresis_upper_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_y_diaeresis_upper\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  world_y_diaeresis: world_y_diaeresis {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_y_diaeresis_lower>, <&world_y_diaeresis_upper>;\n    mods = <MOD_LSFT>;\n  };\n  UNICODE(world_o_acute_lower_macro, /* ó */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_o_acute_lower\n        COMPOSE_SEQ_LINUX(&kp SQT &kp O)\n      #else\n        UNICODE_SEQ_LINUX(&kp _NF &kp _N3)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_o_acute_lower\n        COMPOSE_SEQ_MACOS(&kp LA(E) &kp O)\n      #else\n        UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _NF &kp _N3)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_o_acute_lower\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N2 &kp KP_N4 &kp KP_N3)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NF &kp _N3)\n      #endif\n    #endif\n  )\n  world_o_acute_lower: world_o_acute_lower {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_o_acute_lower_macro>, <&world_o_acute_lower_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_o_acute_lower\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(world_o_acute_upper_macro, /* Ó */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_o_acute_upper\n        COMPOSE_SEQ_LINUX(&kp SQT &kp LS(O))\n      #else\n        UNICODE_SEQ_LINUX(&kp _ND &kp _N3)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_o_acute_upper\n        COMPOSE_SEQ_MACOS(&kp LA(E) &kp LS(O))\n      #else\n        UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _ND &kp _N3)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_o_acute_upper\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N2 &kp KP_N1 &kp KP_N1)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _ND &kp _N3)\n      #endif\n    #endif\n  )\n  world_o_acute_upper: world_o_acute_upper {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_o_acute_upper_macro>, <&world_o_acute_upper_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_o_acute_upper\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  world_o_acute: world_o_acute {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_o_acute_lower>, <&world_o_acute_upper>;\n    mods = <MOD_LSFT>;\n  };\n  UNICODE(world_o_diaeresis_lower_macro, /* ö */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_o_diaeresis_lower\n        COMPOSE_SEQ_LINUX(&kp DQT &kp O)\n      #else\n        UNICODE_SEQ_LINUX(&kp _NF &kp _N6)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_o_diaeresis_lower\n        COMPOSE_SEQ_MACOS(&kp LA(U) &kp O)\n      #else\n        UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _NF &kp _N6)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_o_diaeresis_lower\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N2 &kp KP_N4 &kp KP_N6)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NF &kp _N6)\n      #endif\n    #endif\n  )\n  world_o_diaeresis_lower: world_o_diaeresis_lower {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_o_diaeresis_lower_macro>, <&world_o_diaeresis_lower_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_o_diaeresis_lower\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(world_o_diaeresis_upper_macro, /* Ö */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_o_diaeresis_upper\n        COMPOSE_SEQ_LINUX(&kp DQT &kp LS(O))\n      #else\n        UNICODE_SEQ_LINUX(&kp _ND &kp _N6)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_o_diaeresis_upper\n        COMPOSE_SEQ_MACOS(&kp LA(U) &kp LS(O))\n      #else\n        UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _ND &kp _N6)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_o_diaeresis_upper\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N2 &kp KP_N1 &kp KP_N4)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _ND &kp _N6)\n      #endif\n    #endif\n  )\n  world_o_diaeresis_upper: world_o_diaeresis_upper {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_o_diaeresis_upper_macro>, <&world_o_diaeresis_upper_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_o_diaeresis_upper\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  world_o_diaeresis: world_o_diaeresis {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_o_diaeresis_lower>, <&world_o_diaeresis_upper>;\n    mods = <MOD_LSFT>;\n  };\n  UNICODE(world_o_circumflex_lower_macro, /* ô */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_o_circumflex_lower\n        COMPOSE_SEQ_LINUX(&kp CARET &kp O)\n      #else\n        UNICODE_SEQ_LINUX(&kp _NF &kp _N4)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_o_circumflex_lower\n        COMPOSE_SEQ_MACOS(&kp LA(I) &kp O)\n      #else\n        UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _NF &kp _N4)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_o_circumflex_lower\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N2 &kp KP_N4 &kp KP_N4)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NF &kp _N4)\n      #endif\n    #endif\n  )\n  world_o_circumflex_lower: world_o_circumflex_lower {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_o_circumflex_lower_macro>, <&world_o_circumflex_lower_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_o_circumflex_lower\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(world_o_circumflex_upper_macro, /* Ô */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_o_circumflex_upper\n        COMPOSE_SEQ_LINUX(&kp CARET &kp LS(O))\n      #else\n        UNICODE_SEQ_LINUX(&kp _ND &kp _N4)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_o_circumflex_upper\n        COMPOSE_SEQ_MACOS(&kp LA(I) &kp LS(O))\n      #else\n        UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _ND &kp _N4)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_o_circumflex_upper\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N2 &kp KP_N1 &kp KP_N2)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _ND &kp _N4)\n      #endif\n    #endif\n  )\n  world_o_circumflex_upper: world_o_circumflex_upper {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_o_circumflex_upper_macro>, <&world_o_circumflex_upper_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_o_circumflex_upper\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  world_o_circumflex: world_o_circumflex {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_o_circumflex_lower>, <&world_o_circumflex_upper>;\n    mods = <MOD_LSFT>;\n  };\n  UNICODE(world_o_grave_lower_macro, /* ò */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_o_grave_lower\n        COMPOSE_SEQ_LINUX(&kp GRAVE &kp O)\n      #else\n        UNICODE_SEQ_LINUX(&kp _NF &kp _N2)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_o_grave_lower\n        COMPOSE_SEQ_MACOS(&kp LA(GRAVE) &kp O)\n      #else\n        UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _NF &kp _N2)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_o_grave_lower\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N2 &kp KP_N4 &kp KP_N2)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NF &kp _N2)\n      #endif\n    #endif\n  )\n  world_o_grave_lower: world_o_grave_lower {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_o_grave_lower_macro>, <&world_o_grave_lower_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_o_grave_lower\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(world_o_grave_upper_macro, /* Ò */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_o_grave_upper\n        COMPOSE_SEQ_LINUX(&kp GRAVE &kp LS(O))\n      #else\n        UNICODE_SEQ_LINUX(&kp _ND &kp _N2)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_o_grave_upper\n        COMPOSE_SEQ_MACOS(&kp LA(GRAVE) &kp LS(O))\n      #else\n        UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _ND &kp _N2)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_o_grave_upper\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N2 &kp KP_N1 &kp KP_N0)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _ND &kp _N2)\n      #endif\n    #endif\n  )\n  world_o_grave_upper: world_o_grave_upper {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_o_grave_upper_macro>, <&world_o_grave_upper_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_o_grave_upper\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  world_o_grave: world_o_grave {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_o_grave_lower>, <&world_o_grave_upper>;\n    mods = <MOD_LSFT>;\n  };\n  UNICODE(world_o_tilde_lower_macro, /* õ */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_o_tilde_lower\n        COMPOSE_SEQ_LINUX(&kp TILDE &kp O)\n      #else\n        UNICODE_SEQ_LINUX(&kp _NF &kp _N5)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_o_tilde_lower\n        COMPOSE_SEQ_MACOS(&kp LA(N) &kp O)\n      #else\n        UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _NF &kp _N5)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_o_tilde_lower\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N2 &kp KP_N4 &kp KP_N5)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NF &kp _N5)\n      #endif\n    #endif\n  )\n  world_o_tilde_lower: world_o_tilde_lower {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_o_tilde_lower_macro>, <&world_o_tilde_lower_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_o_tilde_lower\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(world_o_tilde_upper_macro, /* Õ */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_o_tilde_upper\n        COMPOSE_SEQ_LINUX(&kp TILDE &kp LS(O))\n      #else\n        UNICODE_SEQ_LINUX(&kp _ND &kp _N5)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_o_tilde_upper\n        COMPOSE_SEQ_MACOS(&kp LA(N) &kp LS(O))\n      #else\n        UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _ND &kp _N5)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_o_tilde_upper\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N2 &kp KP_N1 &kp KP_N3)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _ND &kp _N5)\n      #endif\n    #endif\n  )\n  world_o_tilde_upper: world_o_tilde_upper {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_o_tilde_upper_macro>, <&world_o_tilde_upper_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_o_tilde_upper\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  world_o_tilde: world_o_tilde {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_o_tilde_lower>, <&world_o_tilde_upper>;\n    mods = <MOD_LSFT>;\n  };\n  UNICODE(world_o_slash_lower_macro, /* ø */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_o_slash_lower\n        COMPOSE_SEQ_LINUX(&kp FSLH &kp O)\n      #else\n        UNICODE_SEQ_LINUX(&kp _NF &kp _N8)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_o_slash_lower\n        COMPOSE_SEQ_MACOS(&kp LA(O))\n      #else\n        UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _NF &kp _N8)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_o_slash_lower\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N2 &kp KP_N4 &kp KP_N8)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NF &kp _N8)\n      #endif\n    #endif\n  )\n  world_o_slash_lower: world_o_slash_lower {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_o_slash_lower_macro>, <&world_o_slash_lower_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_o_slash_lower\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(world_o_slash_upper_macro, /* Ø */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_o_slash_upper\n        COMPOSE_SEQ_LINUX(&kp FSLH &kp LS(O))\n      #else\n        UNICODE_SEQ_LINUX(&kp _ND &kp _N8)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_o_slash_upper\n        COMPOSE_SEQ_MACOS(&kp LA(LS(O)))\n      #else\n        UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _ND &kp _N8)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_o_slash_upper\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N2 &kp KP_N1 &kp KP_N6)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _ND &kp _N8)\n      #endif\n    #endif\n  )\n  world_o_slash_upper: world_o_slash_upper {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_o_slash_upper_macro>, <&world_o_slash_upper_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_o_slash_upper\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  world_o_slash: world_o_slash {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_o_slash_lower>, <&world_o_slash_upper>;\n    mods = <MOD_LSFT>;\n  };\n  UNICODE(world_u_acute_lower_macro, /* ú */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_u_acute_lower\n        COMPOSE_SEQ_LINUX(&kp SQT &kp U)\n      #else\n        UNICODE_SEQ_LINUX(&kp _NF &kp _NA)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_u_acute_lower\n        COMPOSE_SEQ_MACOS(&kp LA(E) &kp U)\n      #else\n        UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _NF &kp _NA)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_u_acute_lower\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N2 &kp KP_N5 &kp KP_N0)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NF &kp _NA)\n      #endif\n    #endif\n  )\n  world_u_acute_lower: world_u_acute_lower {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_u_acute_lower_macro>, <&world_u_acute_lower_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_u_acute_lower\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(world_u_acute_upper_macro, /* Ú */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_u_acute_upper\n        COMPOSE_SEQ_LINUX(&kp SQT &kp LS(U))\n      #else\n        UNICODE_SEQ_LINUX(&kp _ND &kp _NA)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_u_acute_upper\n        COMPOSE_SEQ_MACOS(&kp LA(E) &kp LS(U))\n      #else\n        UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _ND &kp _NA)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_u_acute_upper\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N2 &kp KP_N1 &kp KP_N8)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _ND &kp _NA)\n      #endif\n    #endif\n  )\n  world_u_acute_upper: world_u_acute_upper {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_u_acute_upper_macro>, <&world_u_acute_upper_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_u_acute_upper\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  world_u_acute: world_u_acute {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_u_acute_lower>, <&world_u_acute_upper>;\n    mods = <MOD_LSFT>;\n  };\n  UNICODE(world_u_diaeresis_lower_macro, /* ü */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_u_diaeresis_lower\n        COMPOSE_SEQ_LINUX(&kp DQT &kp U)\n      #else\n        UNICODE_SEQ_LINUX(&kp _NF &kp _NC)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_u_diaeresis_lower\n        COMPOSE_SEQ_MACOS(&kp LA(U) &kp U)\n      #else\n        UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _NF &kp _NC)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_u_diaeresis_lower\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N2 &kp KP_N5 &kp KP_N2)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NF &kp _NC)\n      #endif\n    #endif\n  )\n  world_u_diaeresis_lower: world_u_diaeresis_lower {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_u_diaeresis_lower_macro>, <&world_u_diaeresis_lower_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_u_diaeresis_lower\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(world_u_diaeresis_upper_macro, /* Ü */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_u_diaeresis_upper\n        COMPOSE_SEQ_LINUX(&kp DQT &kp LS(U))\n      #else\n        UNICODE_SEQ_LINUX(&kp _ND &kp _NC)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_u_diaeresis_upper\n        COMPOSE_SEQ_MACOS(&kp LA(U) &kp LS(U))\n      #else\n        UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _ND &kp _NC)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_u_diaeresis_upper\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N2 &kp KP_N2 &kp KP_N0)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _ND &kp _NC)\n      #endif\n    #endif\n  )\n  world_u_diaeresis_upper: world_u_diaeresis_upper {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_u_diaeresis_upper_macro>, <&world_u_diaeresis_upper_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_u_diaeresis_upper\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  world_u_diaeresis: world_u_diaeresis {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_u_diaeresis_lower>, <&world_u_diaeresis_upper>;\n    mods = <MOD_LSFT>;\n  };\n  UNICODE(world_u_circumflex_lower_macro, /* û */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_u_circumflex_lower\n        COMPOSE_SEQ_LINUX(&kp CARET &kp U)\n      #else\n        UNICODE_SEQ_LINUX(&kp _NF &kp _NB)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_u_circumflex_lower\n        COMPOSE_SEQ_MACOS(&kp LA(I) &kp U)\n      #else\n        UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _NF &kp _NB)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_u_circumflex_lower\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N2 &kp KP_N5 &kp KP_N1)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NF &kp _NB)\n      #endif\n    #endif\n  )\n  world_u_circumflex_lower: world_u_circumflex_lower {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_u_circumflex_lower_macro>, <&world_u_circumflex_lower_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_u_circumflex_lower\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(world_u_circumflex_upper_macro, /* Û */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_u_circumflex_upper\n        COMPOSE_SEQ_LINUX(&kp CARET &kp LS(U))\n      #else\n        UNICODE_SEQ_LINUX(&kp _ND &kp _NB)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_u_circumflex_upper\n        COMPOSE_SEQ_MACOS(&kp LA(I) &kp LS(U))\n      #else\n        UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _ND &kp _NB)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_u_circumflex_upper\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N2 &kp KP_N1 &kp KP_N9)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _ND &kp _NB)\n      #endif\n    #endif\n  )\n  world_u_circumflex_upper: world_u_circumflex_upper {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_u_circumflex_upper_macro>, <&world_u_circumflex_upper_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_u_circumflex_upper\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  world_u_circumflex: world_u_circumflex {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_u_circumflex_lower>, <&world_u_circumflex_upper>;\n    mods = <MOD_LSFT>;\n  };\n  UNICODE(world_u_grave_lower_macro, /* ù */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_u_grave_lower\n        COMPOSE_SEQ_LINUX(&kp GRAVE &kp U)\n      #else\n        UNICODE_SEQ_LINUX(&kp _NF &kp _N9)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_u_grave_lower\n        COMPOSE_SEQ_MACOS(&kp LA(GRAVE) &kp U)\n      #else\n        UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _NF &kp _N9)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_u_grave_lower\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N2 &kp KP_N4 &kp KP_N9)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NF &kp _N9)\n      #endif\n    #endif\n  )\n  world_u_grave_lower: world_u_grave_lower {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_u_grave_lower_macro>, <&world_u_grave_lower_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_u_grave_lower\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(world_u_grave_upper_macro, /* Ù */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_u_grave_upper\n        COMPOSE_SEQ_LINUX(&kp GRAVE &kp LS(U))\n      #else\n        UNICODE_SEQ_LINUX(&kp _ND &kp _N9)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_u_grave_upper\n        COMPOSE_SEQ_MACOS(&kp LA(GRAVE) &kp LS(U))\n      #else\n        UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _ND &kp _N9)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_u_grave_upper\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N2 &kp KP_N1 &kp KP_N7)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _ND &kp _N9)\n      #endif\n    #endif\n  )\n  world_u_grave_upper: world_u_grave_upper {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_u_grave_upper_macro>, <&world_u_grave_upper_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_u_grave_upper\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  world_u_grave: world_u_grave {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_u_grave_lower>, <&world_u_grave_upper>;\n    mods = <MOD_LSFT>;\n  };\n  UNICODE(world_consonants_cedilla_lower_macro, /* ç */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_consonants_cedilla_lower\n        COMPOSE_SEQ_LINUX(&kp COMMA &kp C)\n      #else\n        UNICODE_SEQ_LINUX(&kp _NE &kp _N7)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_consonants_cedilla_lower\n        COMPOSE_SEQ_MACOS(&kp LA(C))\n      #else\n        UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _NE &kp _N7)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_consonants_cedilla_lower\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N2 &kp KP_N3 &kp KP_N1)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NE &kp _N7)\n      #endif\n    #endif\n  )\n  world_consonants_cedilla_lower: world_consonants_cedilla_lower {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_consonants_cedilla_lower_macro>, <&world_consonants_cedilla_lower_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_consonants_cedilla_lower\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(world_consonants_cedilla_upper_macro, /* Ç */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_consonants_cedilla_upper\n        COMPOSE_SEQ_LINUX(&kp COMMA &kp LS(C))\n      #else\n        UNICODE_SEQ_LINUX(&kp _NC &kp _N7)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_consonants_cedilla_upper\n        COMPOSE_SEQ_MACOS(&kp LA(LS(C)))\n      #else\n        UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _NC &kp _N7)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_consonants_cedilla_upper\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N1 &kp KP_N9 &kp KP_N9)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NC &kp _N7)\n      #endif\n    #endif\n  )\n  world_consonants_cedilla_upper: world_consonants_cedilla_upper {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_consonants_cedilla_upper_macro>, <&world_consonants_cedilla_upper_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_consonants_cedilla_upper\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  world_consonants_cedilla: world_consonants_cedilla {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_consonants_cedilla_lower>, <&world_consonants_cedilla_upper>;\n    mods = <MOD_LSFT>;\n  };\n  UNICODE(world_consonants_eszett_lower_macro, /* ß */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_consonants_eszett_lower\n        COMPOSE_SEQ_LINUX(&kp S &kp S)\n      #else\n        UNICODE_SEQ_LINUX(&kp _ND &kp _NF)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_consonants_eszett_lower\n        COMPOSE_SEQ_MACOS(&kp LA(S))\n      #else\n        UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _ND &kp _NF)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_consonants_eszett_lower\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N2 &kp KP_N2 &kp KP_N3)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _ND &kp _NF)\n      #endif\n    #endif\n  )\n  world_consonants_eszett_lower: world_consonants_eszett_lower {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_consonants_eszett_lower_macro>, <&world_consonants_eszett_lower_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_consonants_eszett_lower\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(world_consonants_eszett_upper_macro, /* ẞ */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_consonants_eszett_upper\n        COMPOSE_SEQ_LINUX(&kp LS(S) &kp LS(S))\n      #else\n        UNICODE_SEQ_LINUX(&kp _N1 &kp _NE &kp _N9 &kp _NE)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_consonants_eszett_upper\n        COMPOSE_SEQ_MACOS(&kp LA(LS(S)))\n      #else\n        UNICODE_SEQ_MACOS(&kp _N1 &kp _NE &kp _N9 &kp _NE)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NE &kp _N9 &kp _NE)\n    #endif\n  )\n  world_consonants_eszett_upper: world_consonants_eszett_upper {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_consonants_eszett_upper_macro>, <&world_consonants_eszett_upper_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_consonants_eszett_upper\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  world_consonants_eszett: world_consonants_eszett {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_consonants_eszett_lower>, <&world_consonants_eszett_upper>;\n    mods = <MOD_LSFT>;\n  };\n  UNICODE(world_consonants_ntilde_lower_macro, /* ñ */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_consonants_ntilde_lower\n        COMPOSE_SEQ_LINUX(&kp TILDE &kp N)\n      #else\n        UNICODE_SEQ_LINUX(&kp _NF &kp _N1)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_consonants_ntilde_lower\n        COMPOSE_SEQ_MACOS(&kp LA(N) &kp N)\n      #else\n        UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _NF &kp _N1)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_consonants_ntilde_lower\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N2 &kp KP_N4 &kp KP_N1)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NF &kp _N1)\n      #endif\n    #endif\n  )\n  world_consonants_ntilde_lower: world_consonants_ntilde_lower {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_consonants_ntilde_lower_macro>, <&world_consonants_ntilde_lower_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_consonants_ntilde_lower\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(world_consonants_ntilde_upper_macro, /* Ñ */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_consonants_ntilde_upper\n        COMPOSE_SEQ_LINUX(&kp TILDE &kp LS(N))\n      #else\n        UNICODE_SEQ_LINUX(&kp _ND &kp _N1)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_consonants_ntilde_upper\n        COMPOSE_SEQ_MACOS(&kp LA(N) &kp LS(N))\n      #else\n        UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _ND &kp _N1)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_consonants_ntilde_upper\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N2 &kp KP_N0 &kp KP_N9)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _ND &kp _N1)\n      #endif\n    #endif\n  )\n  world_consonants_ntilde_upper: world_consonants_ntilde_upper {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_consonants_ntilde_upper_macro>, <&world_consonants_ntilde_upper_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_consonants_ntilde_upper\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  world_consonants_ntilde: world_consonants_ntilde {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_consonants_ntilde_lower>, <&world_consonants_ntilde_upper>;\n    mods = <MOD_LSFT>;\n  };\n  UNICODE(world_consonants_micro_macro, /* µ */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_consonants_micro\n        COMPOSE_SEQ_LINUX(&kp M &kp U)\n      #else\n        UNICODE_SEQ_LINUX(&kp _NB &kp _N5)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_consonants_micro\n        COMPOSE_SEQ_MACOS(&kp LA(M))\n      #else\n        UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _NB &kp _N5)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_consonants_micro\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N1 &kp KP_N8 &kp KP_N1)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NB &kp _N5)\n      #endif\n    #endif\n  )\n  world_consonants_micro: world_consonants_micro {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_consonants_micro_macro>, <&world_consonants_micro_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_consonants_micro\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(world_quotes_left_angle_lower_macro, /* ‹ */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N2 &kp _N0 &kp _N3 &kp _N9)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _N2 &kp _N0 &kp _N3 &kp _N9)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N2 &kp _N0 &kp _N3 &kp _N9)\n    #endif\n  )\n  world_quotes_left_angle_lower: world_quotes_left_angle_lower {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_quotes_left_angle_lower_macro>, <&world_quotes_left_angle_lower_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_quotes_left_angle_lower\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(world_quotes_left_angle_upper_macro, /* « */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _NA &kp _NB)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _NA &kp _NB)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NA &kp _NB)\n    #endif\n  )\n  world_quotes_left_angle_upper: world_quotes_left_angle_upper {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_quotes_left_angle_upper_macro>, <&world_quotes_left_angle_upper_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_quotes_left_angle_upper\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  world_quotes_left_angle: world_quotes_left_angle {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_quotes_left_angle_lower>, <&world_quotes_left_angle_upper>;\n    mods = <MOD_LSFT>;\n  };\n  UNICODE(world_quotes_left_curly_lower_macro, /* ‘ */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N2 &kp _N0 &kp _N1 &kp _N8)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _N2 &kp _N0 &kp _N1 &kp _N8)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N2 &kp _N0 &kp _N1 &kp _N8)\n    #endif\n  )\n  world_quotes_left_curly_lower: world_quotes_left_curly_lower {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_quotes_left_curly_lower_macro>, <&world_quotes_left_curly_lower_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_quotes_left_curly_lower\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(world_quotes_left_curly_upper_macro, /* “ */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N2 &kp _N0 &kp _N1 &kp _NC)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _N2 &kp _N0 &kp _N1 &kp _NC)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N2 &kp _N0 &kp _N1 &kp _NC)\n    #endif\n  )\n  world_quotes_left_curly_upper: world_quotes_left_curly_upper {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_quotes_left_curly_upper_macro>, <&world_quotes_left_curly_upper_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_quotes_left_curly_upper\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  world_quotes_left_curly: world_quotes_left_curly {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_quotes_left_curly_lower>, <&world_quotes_left_curly_upper>;\n    mods = <MOD_LSFT>;\n  };\n  UNICODE(world_quotes_left_low_lower_macro, /* ‚ */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N2 &kp _N0 &kp _N1 &kp _NA)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _N2 &kp _N0 &kp _N1 &kp _NA)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N2 &kp _N0 &kp _N1 &kp _NA)\n    #endif\n  )\n  world_quotes_left_low_lower: world_quotes_left_low_lower {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_quotes_left_low_lower_macro>, <&world_quotes_left_low_lower_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_quotes_left_low_lower\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(world_quotes_left_low_upper_macro, /* „ */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N2 &kp _N0 &kp _N1 &kp _NE)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _N2 &kp _N0 &kp _N1 &kp _NE)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N2 &kp _N0 &kp _N1 &kp _NE)\n    #endif\n  )\n  world_quotes_left_low_upper: world_quotes_left_low_upper {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_quotes_left_low_upper_macro>, <&world_quotes_left_low_upper_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_quotes_left_low_upper\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  world_quotes_left_low: world_quotes_left_low {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_quotes_left_low_lower>, <&world_quotes_left_low_upper>;\n    mods = <MOD_LSFT>;\n  };\n  UNICODE(world_quotes_left_corner1_lower_macro, /* 「 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N3 &kp _N0 &kp _N0 &kp _NC)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _N3 &kp _N0 &kp _N0 &kp _NC)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N3 &kp _N0 &kp _N0 &kp _NC)\n    #endif\n  )\n  world_quotes_left_corner1_lower: world_quotes_left_corner1_lower {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_quotes_left_corner1_lower_macro>, <&world_quotes_left_corner1_lower_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_quotes_left_corner1_lower\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(world_quotes_left_corner1_upper_macro, /* ﹁ */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _NF &kp _NE &kp _N4 &kp _N1)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _NF &kp _NE &kp _N4 &kp _N1)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NF &kp _NE &kp _N4 &kp _N1)\n    #endif\n  )\n  world_quotes_left_corner1_upper: world_quotes_left_corner1_upper {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_quotes_left_corner1_upper_macro>, <&world_quotes_left_corner1_upper_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_quotes_left_corner1_upper\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  world_quotes_left_corner1: world_quotes_left_corner1 {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_quotes_left_corner1_lower>, <&world_quotes_left_corner1_upper>;\n    mods = <MOD_LSFT>;\n  };\n  UNICODE(world_quotes_left_corner2_lower_macro, /* 『 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N3 &kp _N0 &kp _N0 &kp _NE)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _N3 &kp _N0 &kp _N0 &kp _NE)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N3 &kp _N0 &kp _N0 &kp _NE)\n    #endif\n  )\n  world_quotes_left_corner2_lower: world_quotes_left_corner2_lower {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_quotes_left_corner2_lower_macro>, <&world_quotes_left_corner2_lower_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_quotes_left_corner2_lower\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(world_quotes_left_corner2_upper_macro, /* ﹃ */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _NF &kp _NE &kp _N4 &kp _N3)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _NF &kp _NE &kp _N4 &kp _N3)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NF &kp _NE &kp _N4 &kp _N3)\n    #endif\n  )\n  world_quotes_left_corner2_upper: world_quotes_left_corner2_upper {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_quotes_left_corner2_upper_macro>, <&world_quotes_left_corner2_upper_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_quotes_left_corner2_upper\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  world_quotes_left_corner2: world_quotes_left_corner2 {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_quotes_left_corner2_lower>, <&world_quotes_left_corner2_upper>;\n    mods = <MOD_LSFT>;\n  };\n  UNICODE(world_quotes_left_grave_macro, /* ` */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N6 &kp _N0)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _N6 &kp _N0)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N6 &kp _N0)\n    #endif\n  )\n  world_quotes_left_grave: world_quotes_left_grave {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_quotes_left_grave_macro>, <&world_quotes_left_grave_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_quotes_left_grave\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(world_quotes_right_angle_lower_macro, /* › */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N2 &kp _N0 &kp _N3 &kp _NA)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _N2 &kp _N0 &kp _N3 &kp _NA)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N2 &kp _N0 &kp _N3 &kp _NA)\n    #endif\n  )\n  world_quotes_right_angle_lower: world_quotes_right_angle_lower {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_quotes_right_angle_lower_macro>, <&world_quotes_right_angle_lower_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_quotes_right_angle_lower\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(world_quotes_right_angle_upper_macro, /* » */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _NB &kp _NB)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _NB &kp _NB)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NB &kp _NB)\n    #endif\n  )\n  world_quotes_right_angle_upper: world_quotes_right_angle_upper {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_quotes_right_angle_upper_macro>, <&world_quotes_right_angle_upper_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_quotes_right_angle_upper\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  world_quotes_right_angle: world_quotes_right_angle {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_quotes_right_angle_lower>, <&world_quotes_right_angle_upper>;\n    mods = <MOD_LSFT>;\n  };\n  UNICODE(world_quotes_right_curly_lower_macro, /* ’ */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N2 &kp _N0 &kp _N1 &kp _N9)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _N2 &kp _N0 &kp _N1 &kp _N9)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N2 &kp _N0 &kp _N1 &kp _N9)\n    #endif\n  )\n  world_quotes_right_curly_lower: world_quotes_right_curly_lower {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_quotes_right_curly_lower_macro>, <&world_quotes_right_curly_lower_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_quotes_right_curly_lower\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(world_quotes_right_curly_upper_macro, /* ” */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N2 &kp _N0 &kp _N1 &kp _ND)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _N2 &kp _N0 &kp _N1 &kp _ND)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N2 &kp _N0 &kp _N1 &kp _ND)\n    #endif\n  )\n  world_quotes_right_curly_upper: world_quotes_right_curly_upper {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_quotes_right_curly_upper_macro>, <&world_quotes_right_curly_upper_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_quotes_right_curly_upper\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  world_quotes_right_curly: world_quotes_right_curly {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_quotes_right_curly_lower>, <&world_quotes_right_curly_upper>;\n    mods = <MOD_LSFT>;\n  };\n  world_quotes_right_low: world_quotes_right_low {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_quotes_left_low_lower>, <&world_quotes_left_low_upper>;\n    mods = <MOD_LSFT>;\n  };\n  UNICODE(world_quotes_right_corner1_lower_macro, /* 」 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N3 &kp _N0 &kp _N0 &kp _ND)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _N3 &kp _N0 &kp _N0 &kp _ND)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N3 &kp _N0 &kp _N0 &kp _ND)\n    #endif\n  )\n  world_quotes_right_corner1_lower: world_quotes_right_corner1_lower {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_quotes_right_corner1_lower_macro>, <&world_quotes_right_corner1_lower_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_quotes_right_corner1_lower\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(world_quotes_right_corner1_upper_macro, /* ﹂ */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _NF &kp _NE &kp _N4 &kp _N2)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _NF &kp _NE &kp _N4 &kp _N2)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NF &kp _NE &kp _N4 &kp _N2)\n    #endif\n  )\n  world_quotes_right_corner1_upper: world_quotes_right_corner1_upper {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_quotes_right_corner1_upper_macro>, <&world_quotes_right_corner1_upper_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_quotes_right_corner1_upper\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  world_quotes_right_corner1: world_quotes_right_corner1 {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_quotes_right_corner1_lower>, <&world_quotes_right_corner1_upper>;\n    mods = <MOD_LSFT>;\n  };\n  UNICODE(world_quotes_right_corner2_lower_macro, /* 』 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N3 &kp _N0 &kp _N0 &kp _NF)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _N3 &kp _N0 &kp _N0 &kp _NF)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N3 &kp _N0 &kp _N0 &kp _NF)\n    #endif\n  )\n  world_quotes_right_corner2_lower: world_quotes_right_corner2_lower {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_quotes_right_corner2_lower_macro>, <&world_quotes_right_corner2_lower_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_quotes_right_corner2_lower\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(world_quotes_right_corner2_upper_macro, /* ﹄ */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _NF &kp _NE &kp _N4 &kp _N4)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _NF &kp _NE &kp _N4 &kp _N4)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NF &kp _NE &kp _N4 &kp _N4)\n    #endif\n  )\n  world_quotes_right_corner2_upper: world_quotes_right_corner2_upper {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_quotes_right_corner2_upper_macro>, <&world_quotes_right_corner2_upper_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_quotes_right_corner2_upper\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  world_quotes_right_corner2: world_quotes_right_corner2 {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_quotes_right_corner2_lower>, <&world_quotes_right_corner2_upper>;\n    mods = <MOD_LSFT>;\n  };\n  UNICODE(world_quotes_right_grave_macro, /* ´ */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _NB &kp _N4)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _NB &kp _N4)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NB &kp _N4)\n    #endif\n  )\n  world_quotes_right_grave: world_quotes_right_grave {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_quotes_right_grave_macro>, <&world_quotes_right_grave_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_quotes_right_grave\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(world_currency_dollar_lower_macro, /* $ */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N2 &kp _N4)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _N2 &kp _N4)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N2 &kp _N4)\n    #endif\n  )\n  world_currency_dollar_lower: world_currency_dollar_lower {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_currency_dollar_lower_macro>, <&world_currency_dollar_lower_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_currency_dollar_lower\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  world_currency_dollar: world_currency_dollar {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_currency_dollar_lower>, <&world_currency_cent>;\n    mods = <MOD_LSFT>;\n  };\n  UNICODE(world_currency_yen_macro, /* ¥ */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _NA &kp _N5)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _NA &kp _N5)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NA &kp _N5)\n    #endif\n  )\n  world_currency_yen: world_currency_yen {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_currency_yen_macro>, <&world_currency_yen_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_currency_yen\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(world_currency_euro_macro, /* € */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_currency_euro\n        COMPOSE_SEQ_LINUX(&kp E &kp EQUAL)\n      #else\n        UNICODE_SEQ_LINUX(&kp _N2 &kp _N0 &kp _NA &kp _NC)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_currency_euro\n        COMPOSE_SEQ_MACOS(&kp LA(LS(N2)))\n      #else\n        UNICODE_SEQ_MACOS(&kp _N2 &kp _N0 &kp _NA &kp _NC)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_currency_euro\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N1 &kp KP_N2 &kp KP_N8)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N2 &kp _N0 &kp _NA &kp _NC)\n      #endif\n    #endif\n  )\n  world_currency_euro: world_currency_euro {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_currency_euro_macro>, <&world_currency_euro_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_currency_euro\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(world_currency_won_macro, /* ₩ */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N2 &kp _N0 &kp _NA &kp _N9)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _N2 &kp _N0 &kp _NA &kp _N9)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N2 &kp _N0 &kp _NA &kp _N9)\n    #endif\n  )\n  world_currency_won: world_currency_won {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_currency_won_macro>, <&world_currency_won_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_currency_won\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(world_currency_pound_macro, /* £ */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _NA &kp _N3)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _NA &kp _N3)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NA &kp _N3)\n    #endif\n  )\n  world_currency_pound: world_currency_pound {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_currency_pound_macro>, <&world_currency_pound_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_currency_pound\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  world_currency_generic: world_currency_generic {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_currency_sign>, <&world_currency_crypto>;\n    mods = <MOD_LSFT>;\n  };\n  UNICODE(world_sign_copyright_regular_macro, /* © */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_sign_copyright_regular\n        COMPOSE_SEQ_LINUX(&kp O &kp C)\n      #else\n        UNICODE_SEQ_LINUX(&kp _NA &kp _N9)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_sign_copyright_regular\n        COMPOSE_SEQ_MACOS(&kp LA(G))\n      #else\n        UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _NA &kp _N9)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_sign_copyright_regular\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N1 &kp KP_N6 &kp KP_N9)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NA &kp _N9)\n      #endif\n    #endif\n  )\n  world_sign_copyright_regular: world_sign_copyright_regular {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_sign_copyright_regular_macro>, <&world_sign_copyright_regular_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_sign_copyright_regular\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(world_sign_copyright_shifted_macro, /* ® */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_sign_copyright_shifted\n        COMPOSE_SEQ_LINUX(&kp O &kp R)\n      #else\n        UNICODE_SEQ_LINUX(&kp _NA &kp _NE)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_sign_copyright_shifted\n        COMPOSE_SEQ_MACOS(&kp LA(R))\n      #else\n        UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _NA &kp _NE)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_sign_copyright_shifted\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N1 &kp KP_N7 &kp KP_N4)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NA &kp _NE)\n      #endif\n    #endif\n  )\n  world_sign_copyright_shifted: world_sign_copyright_shifted {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_sign_copyright_shifted_macro>, <&world_sign_copyright_shifted_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_sign_copyright_shifted\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  world_sign_copyright: world_sign_copyright {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_sign_copyright_regular>, <&world_sign_copyright_shifted>;\n    mods = <MOD_LSFT>;\n  };\n  UNICODE(world_sign_trademark_regular_macro, /* ™ */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_sign_trademark_regular\n        COMPOSE_SEQ_LINUX(&kp T &kp M)\n      #else\n        UNICODE_SEQ_LINUX(&kp _N2 &kp _N1 &kp _N2 &kp _N2)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_sign_trademark_regular\n        COMPOSE_SEQ_MACOS(&kp LA(N2))\n      #else\n        UNICODE_SEQ_MACOS(&kp _N2 &kp _N1 &kp _N2 &kp _N2)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_sign_trademark_regular\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N1 &kp KP_N5 &kp KP_N3)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N2 &kp _N1 &kp _N2 &kp _N2)\n      #endif\n    #endif\n  )\n  world_sign_trademark_regular: world_sign_trademark_regular {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_sign_trademark_regular_macro>, <&world_sign_trademark_regular_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_sign_trademark_regular\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(world_sign_trademark_shifted_macro, /* ℠ */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_sign_trademark_shifted\n        COMPOSE_SEQ_LINUX(&kp S &kp M)\n      #else\n        UNICODE_SEQ_LINUX(&kp _N2 &kp _N1 &kp _N2 &kp _N0)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _N2 &kp _N1 &kp _N2 &kp _N0)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N2 &kp _N1 &kp _N2 &kp _N0)\n    #endif\n  )\n  world_sign_trademark_shifted: world_sign_trademark_shifted {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_sign_trademark_shifted_macro>, <&world_sign_trademark_shifted_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_sign_trademark_shifted\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  world_sign_trademark: world_sign_trademark {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_sign_trademark_regular>, <&world_sign_trademark_shifted>;\n    mods = <MOD_LSFT>;\n  };\n  UNICODE(world_sign_landmark_section_macro, /* § */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_sign_landmark_section\n        COMPOSE_SEQ_LINUX(&kp S &kp O)\n      #else\n        UNICODE_SEQ_LINUX(&kp _NA &kp _N7)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_sign_landmark_section\n        COMPOSE_SEQ_MACOS(&kp LA(N6))\n      #else\n        UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _NA &kp _N7)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_sign_landmark_section\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N1 &kp KP_N6 &kp KP_N7)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NA &kp _N7)\n      #endif\n    #endif\n  )\n  world_sign_landmark_section: world_sign_landmark_section {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_sign_landmark_section_macro>, <&world_sign_landmark_section_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_sign_landmark_section\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(world_sign_landmark_pilcrow_macro, /* ¶ */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_sign_landmark_pilcrow\n        COMPOSE_SEQ_LINUX(&kp P &kp EXCL)\n      #else\n        UNICODE_SEQ_LINUX(&kp _NB &kp _N6)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_sign_landmark_pilcrow\n        COMPOSE_SEQ_MACOS(&kp LA(N7))\n      #else\n        UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _NB &kp _N6)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_sign_landmark_pilcrow\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N1 &kp KP_N8 &kp KP_N2)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NB &kp _N6)\n      #endif\n    #endif\n  )\n  world_sign_landmark_pilcrow: world_sign_landmark_pilcrow {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_sign_landmark_pilcrow_macro>, <&world_sign_landmark_pilcrow_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_sign_landmark_pilcrow\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  world_sign_landmark: world_sign_landmark {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_sign_landmark_section>, <&world_sign_landmark_pilcrow>;\n    mods = <MOD_LSFT>;\n  };\n  UNICODE(world_sign_exclaim_left_macro, /* ¡ */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_sign_exclaim_left\n        COMPOSE_SEQ_LINUX(&kp EXCL &kp EXCL)\n      #else\n        UNICODE_SEQ_LINUX(&kp _NA &kp _N1)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_sign_exclaim_left\n        COMPOSE_SEQ_MACOS(&kp LA(N1))\n      #else\n        UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _NA &kp _N1)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_sign_exclaim_left\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N1 &kp KP_N6 &kp KP_N1)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NA &kp _N1)\n      #endif\n    #endif\n  )\n  world_sign_exclaim_left: world_sign_exclaim_left {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_sign_exclaim_left_macro>, <&world_sign_exclaim_left_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_sign_exclaim_left\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(world_sign_exclaim_right_macro, /* ! */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N2 &kp _N1)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _N2 &kp _N1)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N2 &kp _N1)\n    #endif\n  )\n  world_sign_exclaim_right: world_sign_exclaim_right {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_sign_exclaim_right_macro>, <&world_sign_exclaim_right_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_sign_exclaim_right\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  world_sign_exclaim: world_sign_exclaim {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_sign_exclaim_left>, <&world_sign_exclaim_right>;\n    mods = <MOD_LSFT>;\n  };\n  UNICODE(world_sign_question_left_macro, /* ¿ */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_sign_question_left\n        COMPOSE_SEQ_LINUX(&kp QMARK &kp QMARK)\n      #else\n        UNICODE_SEQ_LINUX(&kp _NB &kp _NF)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_sign_question_left\n        COMPOSE_SEQ_MACOS(&kp LA(LS(FSLH)))\n      #else\n        UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _NB &kp _NF)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_sign_question_left\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N1 &kp KP_N9 &kp KP_N1)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NB &kp _NF)\n      #endif\n    #endif\n  )\n  world_sign_question_left: world_sign_question_left {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_sign_question_left_macro>, <&world_sign_question_left_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_sign_question_left\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(world_sign_question_right_macro, /* ? */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N3 &kp _NF)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _N3 &kp _NF)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N3 &kp _NF)\n    #endif\n  )\n  world_sign_question_right: world_sign_question_right {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_sign_question_right_macro>, <&world_sign_question_right_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_sign_question_right\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  world_sign_question: world_sign_question {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_sign_question_left>, <&world_sign_question_right>;\n    mods = <MOD_LSFT>;\n  };\n  UNICODE(world_sign_ordinal_o_macro, /* º */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_sign_ordinal_o\n        COMPOSE_SEQ_LINUX(&kp CARET &kp UNDER &kp O)\n      #else\n        UNICODE_SEQ_LINUX(&kp _NB &kp _NA)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_sign_ordinal_o\n        COMPOSE_SEQ_MACOS(&kp LA(N0))\n      #else\n        UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _NB &kp _NA)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_sign_ordinal_o\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N1 &kp KP_N8 &kp KP_N6)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NB &kp _NA)\n      #endif\n    #endif\n  )\n  world_sign_ordinal_o: world_sign_ordinal_o {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_sign_ordinal_o_macro>, <&world_sign_ordinal_o_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_sign_ordinal_o\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(world_sign_ordinal_a_macro, /* ª */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_sign_ordinal_a\n        COMPOSE_SEQ_LINUX(&kp CARET &kp UNDER &kp A)\n      #else\n        UNICODE_SEQ_LINUX(&kp _NA &kp _NA)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_sign_ordinal_a\n        COMPOSE_SEQ_MACOS(&kp LA(N9))\n      #else\n        UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _NA &kp _NA)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_sign_ordinal_a\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N1 &kp KP_N7 &kp KP_N0)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NA &kp _NA)\n      #endif\n    #endif\n  )\n  world_sign_ordinal_a: world_sign_ordinal_a {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_sign_ordinal_a_macro>, <&world_sign_ordinal_a_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_sign_ordinal_a\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  world_sign_ordinal: world_sign_ordinal {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_sign_ordinal_o>, <&world_sign_ordinal_a>;\n    mods = <MOD_LSFT>;\n  };\n  UNICODE(world_sign_angle_degree_macro, /* ° */\n    #if OPERATING_SYSTEM == 'L'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_sign_angle_degree\n        COMPOSE_SEQ_LINUX(&kp O &kp O)\n      #else\n        UNICODE_SEQ_LINUX(&kp _NB &kp _N0)\n      #endif\n    #elif OPERATING_SYSTEM == 'M'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_sign_angle_degree\n        COMPOSE_SEQ_MACOS(&kp LA(LS(N8)))\n      #else\n        UNICODE_SEQ_MACOS(&kp _N0 &kp _N0 &kp _NB &kp _N0)\n      #endif\n    #elif OPERATING_SYSTEM == 'W'\n      #ifdef WORLD_USE_COMPOSE\n        #define WORLD_USE_COMPOSE_FOR_world_sign_angle_degree\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N1 &kp KP_N7 &kp KP_N6)\n      #else\n        UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NB &kp _N0)\n      #endif\n    #endif\n  )\n  world_sign_angle_degree: world_sign_angle_degree {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_sign_angle_degree_macro>, <&world_sign_angle_degree_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_sign_angle_degree\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(world_sign_angle_pi_macro, /* π */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N3 &kp _NC &kp _N0)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _N0 &kp _N3 &kp _NC &kp _N0)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N3 &kp _NC &kp _N0)\n    #endif\n  )\n  world_sign_angle_pi: world_sign_angle_pi {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_sign_angle_pi_macro>, <&world_sign_angle_pi_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_sign_angle_pi\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  world_sign_angle: world_sign_angle {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_sign_angle_degree>, <&world_sign_angle_pi>;\n    mods = <MOD_LSFT>;\n  };\n  UNICODE(world_sign_dash_emdash_macro, /* — */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N2 &kp _N0 &kp _N1 &kp _N4)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _N2 &kp _N0 &kp _N1 &kp _N4)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N2 &kp _N0 &kp _N1 &kp _N4)\n    #endif\n  )\n  world_sign_dash_emdash: world_sign_dash_emdash {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_sign_dash_emdash_macro>, <&world_sign_dash_emdash_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_sign_dash_emdash\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(world_sign_dash_endash_macro, /* – */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N2 &kp _N0 &kp _N1 &kp _N3)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _N2 &kp _N0 &kp _N1 &kp _N3)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N2 &kp _N0 &kp _N1 &kp _N3)\n    #endif\n  )\n  world_sign_dash_endash: world_sign_dash_endash {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_sign_dash_endash_macro>, <&world_sign_dash_endash_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_world_sign_dash_endash\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  world_sign_dash: world_sign_dash {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_sign_dash_emdash>, <&world_sign_dash_endash>;\n    mods = <MOD_LSFT>;\n  };\n\n  //\n  // transforms\n  //\n  world_i_base: world_i_base {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_i_acute>, <&world_i_LCTL>;\n    mods = <(MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n  };\n  world_i_LCTL: world_i_LCTL {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_i_diaeresis>, <&world_i_RCTL>;\n    mods = <(MOD_RCTL|MOD_RSFT)>;\n  };\n  world_i_RCTL: world_i_RCTL {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_i_circumflex>, <&world_i_grave>;\n    mods = <(MOD_RSFT)>;\n  };\n  world_e_base: world_e_base {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_e_acute>, <&world_e_LALT>;\n    mods = <(MOD_LALT|MOD_RALT|MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n  };\n  world_e_LALT: world_e_LALT {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_e_oe>, <&world_e_RALT>;\n    mods = <(MOD_RALT|MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n  };\n  world_e_RALT: world_e_RALT {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_e_ae>, <&world_e_LCTL>;\n    mods = <(MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n  };\n  world_e_LCTL: world_e_LCTL {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_e_diaeresis>, <&world_e_RCTL>;\n    mods = <(MOD_RCTL|MOD_RSFT)>;\n  };\n  world_e_RCTL: world_e_RCTL {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_e_circumflex>, <&world_e_RSFT>;\n    mods = <(MOD_RSFT)>;\n  };\n  world_e_RSFT: world_e_RSFT {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_e_grave>, <&world_e_LCTL_RSFT>;\n    mods = <(MOD_LCTL|MOD_RCTL)>;\n  };\n  world_e_LCTL_RSFT: world_e_LCTL_RSFT {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_e_oe>, <&world_e_ae>;\n    mods = <(MOD_RCTL)>;\n  };\n  world_a_base: world_a_base {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_a_acute>, <&world_a_LALT>;\n    mods = <(MOD_LALT|MOD_RALT|MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n  };\n  world_a_LALT: world_a_LALT {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_a_tilde>, <&world_a_RALT>;\n    mods = <(MOD_RALT|MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n  };\n  world_a_RALT: world_a_RALT {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_a_ring>, <&world_a_LCTL>;\n    mods = <(MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n  };\n  world_a_LCTL: world_a_LCTL {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_a_diaeresis>, <&world_a_RCTL>;\n    mods = <(MOD_RCTL|MOD_RSFT)>;\n  };\n  world_a_RCTL: world_a_RCTL {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_a_circumflex>, <&world_a_RSFT>;\n    mods = <(MOD_RSFT)>;\n  };\n  world_a_RSFT: world_a_RSFT {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_a_grave>, <&world_a_LCTL_RSFT>;\n    mods = <(MOD_LCTL|MOD_RCTL)>;\n  };\n  world_a_LCTL_RSFT: world_a_LCTL_RSFT {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_a_tilde>, <&world_a_ring>;\n    mods = <(MOD_RCTL)>;\n  };\n  world_y_base: world_y_base {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_y_acute>, <&world_y_diaeresis>;\n    mods = <(MOD_LCTL)>;\n  };\n  world_o_base: world_o_base {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_o_acute>, <&world_o_LALT>;\n    mods = <(MOD_LALT|MOD_RALT|MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n  };\n  world_o_LALT: world_o_LALT {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_o_tilde>, <&world_o_RALT>;\n    mods = <(MOD_RALT|MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n  };\n  world_o_RALT: world_o_RALT {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_o_slash>, <&world_o_LCTL>;\n    mods = <(MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n  };\n  world_o_LCTL: world_o_LCTL {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_o_diaeresis>, <&world_o_RCTL>;\n    mods = <(MOD_RCTL|MOD_RSFT)>;\n  };\n  world_o_RCTL: world_o_RCTL {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_o_circumflex>, <&world_o_RSFT>;\n    mods = <(MOD_RSFT)>;\n  };\n  world_o_RSFT: world_o_RSFT {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_o_grave>, <&world_o_LCTL_RSFT>;\n    mods = <(MOD_LCTL|MOD_RCTL)>;\n  };\n  world_o_LCTL_RSFT: world_o_LCTL_RSFT {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_o_tilde>, <&world_o_slash>;\n    mods = <(MOD_RCTL)>;\n  };\n  world_u_base: world_u_base {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_u_acute>, <&world_u_LCTL>;\n    mods = <(MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n  };\n  world_u_LCTL: world_u_LCTL {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_u_diaeresis>, <&world_u_RCTL>;\n    mods = <(MOD_RCTL|MOD_RSFT)>;\n  };\n  world_u_RCTL: world_u_RCTL {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_u_circumflex>, <&world_u_grave>;\n    mods = <(MOD_RSFT)>;\n  };\n  world_consonants_base: world_consonants_base {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_consonants_cedilla>, <&world_consonants_LCTL>;\n    mods = <(MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n  };\n  world_consonants_LCTL: world_consonants_LCTL {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_consonants_eszett>, <&world_consonants_RCTL>;\n    mods = <(MOD_RCTL|MOD_RSFT)>;\n  };\n  world_consonants_RCTL: world_consonants_RCTL {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_consonants_ntilde>, <&world_consonants_micro>;\n    mods = <(MOD_RSFT)>;\n  };\n  world_quotes_left_base: world_quotes_left_base {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_quotes_left_angle>, <&world_quotes_left_LALT>;\n    mods = <(MOD_LALT|MOD_RALT|MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n  };\n  world_quotes_left_LALT: world_quotes_left_LALT {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_quotes_left_corner1>, <&world_quotes_left_RALT>;\n    mods = <(MOD_RALT|MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n  };\n  world_quotes_left_RALT: world_quotes_left_RALT {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_quotes_left_corner2>, <&world_quotes_left_LCTL>;\n    mods = <(MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n  };\n  world_quotes_left_LCTL: world_quotes_left_LCTL {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_quotes_left_curly>, <&world_quotes_left_RCTL>;\n    mods = <(MOD_RCTL|MOD_RSFT)>;\n  };\n  world_quotes_left_RCTL: world_quotes_left_RCTL {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_quotes_left_low>, <&world_quotes_left_RSFT>;\n    mods = <(MOD_RSFT)>;\n  };\n  world_quotes_left_RSFT: world_quotes_left_RSFT {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_quotes_left_grave>, <&world_quotes_left_LCTL_RSFT>;\n    mods = <(MOD_LCTL|MOD_RCTL)>;\n  };\n  world_quotes_left_LCTL_RSFT: world_quotes_left_LCTL_RSFT {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_quotes_left_corner1>, <&world_quotes_left_corner2>;\n    mods = <(MOD_RCTL)>;\n  };\n  world_quotes_right_base: world_quotes_right_base {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_quotes_right_angle>, <&world_quotes_right_LALT>;\n    mods = <(MOD_LALT|MOD_RALT|MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n  };\n  world_quotes_right_LALT: world_quotes_right_LALT {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_quotes_right_corner1>, <&world_quotes_right_RALT>;\n    mods = <(MOD_RALT|MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n  };\n  world_quotes_right_RALT: world_quotes_right_RALT {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_quotes_right_corner2>, <&world_quotes_right_LCTL>;\n    mods = <(MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n  };\n  world_quotes_right_LCTL: world_quotes_right_LCTL {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_quotes_right_curly>, <&world_quotes_right_RCTL>;\n    mods = <(MOD_RCTL|MOD_RSFT)>;\n  };\n  world_quotes_right_RCTL: world_quotes_right_RCTL {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_quotes_right_low>, <&world_quotes_right_RSFT>;\n    mods = <(MOD_RSFT)>;\n  };\n  world_quotes_right_RSFT: world_quotes_right_RSFT {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_quotes_right_grave>, <&world_quotes_right_LCTL_RSFT>;\n    mods = <(MOD_LCTL|MOD_RCTL)>;\n  };\n  world_quotes_right_LCTL_RSFT: world_quotes_right_LCTL_RSFT {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_quotes_right_corner1>, <&world_quotes_right_corner2>;\n    mods = <(MOD_RCTL)>;\n  };\n  world_currency_base: world_currency_base {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_currency_dollar>, <&world_currency_LALT>;\n    mods = <(MOD_LALT|MOD_RALT|MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n  };\n  world_currency_LALT: world_currency_LALT {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_currency_yen>, <&world_currency_RALT>;\n    mods = <(MOD_RALT|MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n  };\n  world_currency_RALT: world_currency_RALT {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_currency_won>, <&world_currency_LCTL>;\n    mods = <(MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n  };\n  world_currency_LCTL: world_currency_LCTL {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_currency_euro>, <&world_currency_RCTL>;\n    mods = <(MOD_RCTL|MOD_RSFT)>;\n  };\n  world_currency_RCTL: world_currency_RCTL {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_currency_pound>, <&world_currency_RSFT>;\n    mods = <(MOD_RSFT)>;\n  };\n  world_currency_RSFT: world_currency_RSFT {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_currency_generic>, <&world_currency_LCTL_RSFT>;\n    mods = <(MOD_LCTL|MOD_RCTL)>;\n  };\n  world_currency_LCTL_RSFT: world_currency_LCTL_RSFT {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_currency_yen>, <&world_currency_won>;\n    mods = <(MOD_RCTL)>;\n  };\n  world_sign_base: world_sign_base {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&world_sign_copyright>, <&world_sign_trademark>;\n    mods = <(MOD_LCTL)>;\n  };\n\n  //////////////////////////////////////////////////////////////////////////\n  //\n  // Emoji layer - modern age pictograms\n  //\n  //////////////////////////////////////////////////////////////////////////\n\n  //\n  // EMOJI_GENDER_SIGN_PRESET defines an Emoji gender sign for use as a\n  // convenient inward-rolling shortcut on the home row of the layer.\n  //\n  #ifndef EMOJI_GENDER_SIGN_PRESET\n  #define EMOJI_GENDER_SIGN_PRESET 'N' // neutral\n  //#define EMOJI_GENDER_SIGN_PRESET 'M' // male\n  //#define EMOJI_GENDER_SIGN_PRESET 'F' // female\n  #endif\n\n  //\n  // EMOJI_SKIN_TONE_PRESET defines an Emoji skin tone for use as a\n  // convenient inward-rolling shortcut on the home row of the layer.\n  //\n  #ifndef EMOJI_SKIN_TONE_PRESET\n  #define EMOJI_SKIN_TONE_PRESET 'N' // neutral\n  //#define EMOJI_SKIN_TONE_PRESET 'L' // light_skin_tone\n  //#define EMOJI_SKIN_TONE_PRESET 'l' // medium_light_skin_tone\n  //#define EMOJI_SKIN_TONE_PRESET 'M' // medium_skin_tone\n  //#define EMOJI_SKIN_TONE_PRESET 'd' // medium_dark_skin_tone\n  //#define EMOJI_SKIN_TONE_PRESET 'D' // dark_skin_tone\n  #endif\n\n  //\n  // EMOJI_HAIR_STYLE_PRESET defines an Emoji hair style for use as a\n  // convenient inward-rolling shortcut on the home row of the layer.\n  //\n  #ifndef EMOJI_HAIR_STYLE_PRESET\n  #define EMOJI_HAIR_STYLE_PRESET 'N' // neutral\n  //#define EMOJI_HAIR_STYLE_PRESET 'B' // bald\n  //#define EMOJI_HAIR_STYLE_PRESET 'R' // red_hair\n  //#define EMOJI_HAIR_STYLE_PRESET 'C' // curly_hair\n  //#define EMOJI_HAIR_STYLE_PRESET 'W' // white_hair\n  #endif\n\n  //\n  // NOTE: edit the emoji.yaml file and run `rake` to generate this:\n  //\n\n  //\n  // codepoints\n  //\n  UNICODE(emoji_zwj_macro, /* ‍ */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N2 &kp _N0 &kp _N0 &kp _ND)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _N2 &kp _N0 &kp _N0 &kp _ND)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N2 &kp _N0 &kp _N0 &kp _ND)\n    #endif\n  )\n  emoji_zwj: emoji_zwj {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_zwj_macro>, <&emoji_zwj_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_zwj\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_male_sign_macro, /* ♂️ */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N2 &kp _N6 &kp _N4 &kp _N2), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_LINUX(&kp _NF &kp _NE &kp _N0 &kp _NF)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _N2 &kp _N6 &kp _N4 &kp _N2), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_MACOS(&kp _NF &kp _NE &kp _N0 &kp _NF)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N2 &kp _N6 &kp _N4 &kp _N2), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NF &kp _NE &kp _N0 &kp _NF)\n    #endif\n  )\n  emoji_male_sign: emoji_male_sign {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_male_sign_macro>, <&emoji_male_sign_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_male_sign\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_female_sign_macro, /* ♀️ */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N2 &kp _N6 &kp _N4 &kp _N0), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_LINUX(&kp _NF &kp _NE &kp _N0 &kp _NF)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _N2 &kp _N6 &kp _N4 &kp _N0), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_MACOS(&kp _NF &kp _NE &kp _N0 &kp _NF)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N2 &kp _N6 &kp _N4 &kp _N0), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NF &kp _NE &kp _N0 &kp _NF)\n    #endif\n  )\n  emoji_female_sign: emoji_female_sign {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_female_sign_macro>, <&emoji_female_sign_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_female_sign\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_right_arrow_macro, /* ➡️ */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N2 &kp _N7 &kp _NA &kp _N1), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_LINUX(&kp _NF &kp _NE &kp _N0 &kp _NF)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _N2 &kp _N7 &kp _NA &kp _N1), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_MACOS(&kp _NF &kp _NE &kp _N0 &kp _NF)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N2 &kp _N7 &kp _NA &kp _N1), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NF &kp _NE &kp _N0 &kp _NF)\n    #endif\n  )\n  emoji_right_arrow: emoji_right_arrow {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_right_arrow_macro>, <&emoji_right_arrow_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_right_arrow\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_left_arrow_macro, /* ⬅️ */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N2 &kp _NB &kp _N0 &kp _N5), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_LINUX(&kp _NF &kp _NE &kp _N0 &kp _NF)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _N2 &kp _NB &kp _N0 &kp _N5), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_MACOS(&kp _NF &kp _NE &kp _N0 &kp _NF)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N2 &kp _NB &kp _N0 &kp _N5), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NF &kp _NE &kp _N0 &kp _NF)\n    #endif\n  )\n  emoji_left_arrow: emoji_left_arrow {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_left_arrow_macro>, <&emoji_left_arrow_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_left_arrow\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_rainbow_macro, /* 🌈 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N3 &kp _N0 &kp _N8)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _NC &kp _ND &kp _NF &kp _N0 &kp _N8)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N3 &kp _N0 &kp _N8)\n    #endif\n  )\n  emoji_rainbow: emoji_rainbow {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_rainbow_macro>, <&emoji_rainbow_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_rainbow\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_cloudy_macro, /* ️☁️ */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _NF &kp _NE &kp _N0 &kp _NF), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_LINUX(&kp _N2 &kp _N6 &kp _N0 &kp _N1), UNICODE_SEQ_LINUX(&kp _NF &kp _NE &kp _N0 &kp _NF)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _NF &kp _NE &kp _N0 &kp _NF), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_MACOS(&kp _N2 &kp _N6 &kp _N0 &kp _N1), UNICODE_SEQ_MACOS(&kp _NF &kp _NE &kp _N0 &kp _NF)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NF &kp _NE &kp _N0 &kp _NF), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N2 &kp _N6 &kp _N0 &kp _N1), UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NF &kp _NE &kp _N0 &kp _NF)\n    #endif\n  )\n  emoji_cloudy: emoji_cloudy {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_cloudy_macro>, <&emoji_cloudy_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_cloudy\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_mostly_cloudy_macro, /* 🌥 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N3 &kp _N2 &kp _N5)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _NC &kp _ND &kp _NF &kp _N2 &kp _N5)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N3 &kp _N2 &kp _N5)\n    #endif\n  )\n  emoji_mostly_cloudy: emoji_mostly_cloudy {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_mostly_cloudy_macro>, <&emoji_mostly_cloudy_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_mostly_cloudy\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_partly_cloudy_macro, /* ⛅ */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N2 &kp _N6 &kp _NC &kp _N5)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _N2 &kp _N6 &kp _NC &kp _N5)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N2 &kp _N6 &kp _NC &kp _N5)\n    #endif\n  )\n  emoji_partly_cloudy: emoji_partly_cloudy {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_partly_cloudy_macro>, <&emoji_partly_cloudy_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_partly_cloudy\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_mostly_sunny_macro, /* ️🌤️ */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _NF &kp _NE &kp _N0 &kp _NF), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N3 &kp _N2 &kp _N4), UNICODE_SEQ_LINUX(&kp _NF &kp _NE &kp _N0 &kp _NF)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _NF &kp _NE &kp _N0 &kp _NF), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _NC &kp _ND &kp _NF &kp _N2 &kp _N4), UNICODE_SEQ_MACOS(&kp _NF &kp _NE &kp _N0 &kp _NF)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NF &kp _NE &kp _N0 &kp _NF), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N3 &kp _N2 &kp _N4), UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NF &kp _NE &kp _N0 &kp _NF)\n    #endif\n  )\n  emoji_mostly_sunny: emoji_mostly_sunny {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_mostly_sunny_macro>, <&emoji_mostly_sunny_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_mostly_sunny\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_sunny_macro, /* ☀️ */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N2 &kp _N6 &kp _N0 &kp _N0), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_LINUX(&kp _NF &kp _NE &kp _N0 &kp _NF)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _N2 &kp _N6 &kp _N0 &kp _N0), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_MACOS(&kp _NF &kp _NE &kp _N0 &kp _NF)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N2 &kp _N6 &kp _N0 &kp _N0), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NF &kp _NE &kp _N0 &kp _NF)\n    #endif\n  )\n  emoji_sunny: emoji_sunny {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_sunny_macro>, <&emoji_sunny_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_sunny\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_sunrise_macro, /* 🌅 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N3 &kp _N0 &kp _N5)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _NC &kp _ND &kp _NF &kp _N0 &kp _N5)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N3 &kp _N0 &kp _N5)\n    #endif\n  )\n  emoji_sunrise: emoji_sunrise {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_sunrise_macro>, <&emoji_sunrise_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_sunrise\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_sunrise_mountains_macro, /* 🌄 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N3 &kp _N0 &kp _N4)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _NC &kp _ND &kp _NF &kp _N0 &kp _N4)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N3 &kp _N0 &kp _N4)\n    #endif\n  )\n  emoji_sunrise_mountains: emoji_sunrise_mountains {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_sunrise_mountains_macro>, <&emoji_sunrise_mountains_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_sunrise_mountains\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_cityscape_macro, /* ️🏙️ */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _NF &kp _NE &kp _N0 &kp _NF), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N3 &kp _ND &kp _N9), UNICODE_SEQ_LINUX(&kp _NF &kp _NE &kp _N0 &kp _NF)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _NF &kp _NE &kp _N0 &kp _NF), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _NC &kp _ND &kp _NF &kp _ND &kp _N9), UNICODE_SEQ_MACOS(&kp _NF &kp _NE &kp _N0 &kp _NF)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NF &kp _NE &kp _N0 &kp _NF), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N3 &kp _ND &kp _N9), UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NF &kp _NE &kp _N0 &kp _NF)\n    #endif\n  )\n  emoji_cityscape: emoji_cityscape {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_cityscape_macro>, <&emoji_cityscape_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_cityscape\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_cityscape_dusk_macro, /* ️🌇 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _NF &kp _NE &kp _N0 &kp _NF), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N3 &kp _N0 &kp _N7)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _NF &kp _NE &kp _N0 &kp _NF), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _NC &kp _ND &kp _NF &kp _N0 &kp _N7)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NF &kp _NE &kp _N0 &kp _NF), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N3 &kp _N0 &kp _N7)\n    #endif\n  )\n  emoji_cityscape_dusk: emoji_cityscape_dusk {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_cityscape_dusk_macro>, <&emoji_cityscape_dusk_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_cityscape_dusk\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_cityscape_night_macro, /* 🌃 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N3 &kp _N0 &kp _N3)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _NC &kp _ND &kp _NF &kp _N0 &kp _N3)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N3 &kp _N0 &kp _N3)\n    #endif\n  )\n  emoji_cityscape_night: emoji_cityscape_night {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_cityscape_night_macro>, <&emoji_cityscape_night_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_cityscape_night\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_light_skin_tone_macro, /* 🏻 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N3 &kp _NF &kp _NB)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _NC &kp _ND &kp _NF &kp _NF &kp _NB)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N3 &kp _NF &kp _NB)\n    #endif\n  )\n  emoji_light_skin_tone: emoji_light_skin_tone {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_light_skin_tone_macro>, <&emoji_light_skin_tone_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_light_skin_tone\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_medium_light_skin_tone_macro, /* 🏼 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N3 &kp _NF &kp _NC)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _NC &kp _ND &kp _NF &kp _NF &kp _NC)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N3 &kp _NF &kp _NC)\n    #endif\n  )\n  emoji_medium_light_skin_tone: emoji_medium_light_skin_tone {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_medium_light_skin_tone_macro>, <&emoji_medium_light_skin_tone_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_medium_light_skin_tone\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_medium_skin_tone_macro, /* 🏽 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N3 &kp _NF &kp _ND)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _NC &kp _ND &kp _NF &kp _NF &kp _ND)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N3 &kp _NF &kp _ND)\n    #endif\n  )\n  emoji_medium_skin_tone: emoji_medium_skin_tone {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_medium_skin_tone_macro>, <&emoji_medium_skin_tone_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_medium_skin_tone\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_medium_dark_skin_tone_macro, /* 🏾 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N3 &kp _NF &kp _NE)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _NC &kp _ND &kp _NF &kp _NF &kp _NE)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N3 &kp _NF &kp _NE)\n    #endif\n  )\n  emoji_medium_dark_skin_tone: emoji_medium_dark_skin_tone {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_medium_dark_skin_tone_macro>, <&emoji_medium_dark_skin_tone_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_medium_dark_skin_tone\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_dark_skin_tone_macro, /* 🏿 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N3 &kp _NF &kp _NF)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _NC &kp _ND &kp _NF &kp _NF &kp _NF)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N3 &kp _NF &kp _NF)\n    #endif\n  )\n  emoji_dark_skin_tone: emoji_dark_skin_tone {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_dark_skin_tone_macro>, <&emoji_dark_skin_tone_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_dark_skin_tone\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_baby_bottle_macro, /* 🍼 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N3 &kp _N7 &kp _NC)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _NC &kp _ND &kp _NF &kp _N7 &kp _NC)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N3 &kp _N7 &kp _NC)\n    #endif\n  )\n  emoji_baby_bottle: emoji_baby_bottle {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_baby_bottle_macro>, <&emoji_baby_bottle_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_baby_bottle\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_baby_macro, /* 👶 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N4 &kp _N7 &kp _N6)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _ND &kp _ND &kp _NC &kp _N7 &kp _N6)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N4 &kp _N7 &kp _N6)\n    #endif\n  )\n  emoji_baby: emoji_baby {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_baby_macro>, <&emoji_baby_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_baby\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_boy_macro, /* 👦 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N4 &kp _N6 &kp _N6)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _ND &kp _ND &kp _NC &kp _N6 &kp _N6)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N4 &kp _N6 &kp _N6)\n    #endif\n  )\n  emoji_boy: emoji_boy {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_boy_macro>, <&emoji_boy_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_boy\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_girl_macro, /* 👧 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N4 &kp _N6 &kp _N7)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _ND &kp _ND &kp _NC &kp _N6 &kp _N7)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N4 &kp _N6 &kp _N7)\n    #endif\n  )\n  emoji_girl: emoji_girl {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_girl_macro>, <&emoji_girl_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_girl\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_man_macro, /* 👨 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N4 &kp _N6 &kp _N8)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _ND &kp _ND &kp _NC &kp _N6 &kp _N8)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N4 &kp _N6 &kp _N8)\n    #endif\n  )\n  emoji_man: emoji_man {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_man_macro>, <&emoji_man_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_man\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_woman_macro, /* 👩 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N4 &kp _N6 &kp _N9)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _ND &kp _ND &kp _NC &kp _N6 &kp _N9)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N4 &kp _N6 &kp _N9)\n    #endif\n  )\n  emoji_woman: emoji_woman {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_woman_macro>, <&emoji_woman_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_woman\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_old_man_macro, /* 👴 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N4 &kp _N7 &kp _N4)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _ND &kp _ND &kp _NC &kp _N7 &kp _N4)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N4 &kp _N7 &kp _N4)\n    #endif\n  )\n  emoji_old_man: emoji_old_man {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_old_man_macro>, <&emoji_old_man_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_old_man\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_old_woman_macro, /* 👵 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N4 &kp _N7 &kp _N5)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _ND &kp _ND &kp _NC &kp _N7 &kp _N5)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N4 &kp _N7 &kp _N5)\n    #endif\n  )\n  emoji_old_woman: emoji_old_woman {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_old_woman_macro>, <&emoji_old_woman_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_old_woman\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_white_hair_macro, /* 🦳 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N9 &kp _NB &kp _N3)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _NE &kp _ND &kp _ND &kp _NB &kp _N3)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N9 &kp _NB &kp _N3)\n    #endif\n  )\n  emoji_white_hair: emoji_white_hair {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_white_hair_macro>, <&emoji_white_hair_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_white_hair\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_curly_hair_macro, /* 🦱 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N9 &kp _NB &kp _N1)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _NE &kp _ND &kp _ND &kp _NB &kp _N1)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N9 &kp _NB &kp _N1)\n    #endif\n  )\n  emoji_curly_hair: emoji_curly_hair {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_curly_hair_macro>, <&emoji_curly_hair_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_curly_hair\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_red_hair_macro, /* 🦰 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N9 &kp _NB &kp _N0)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _NE &kp _ND &kp _ND &kp _NB &kp _N0)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N9 &kp _NB &kp _N0)\n    #endif\n  )\n  emoji_red_hair: emoji_red_hair {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_red_hair_macro>, <&emoji_red_hair_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_red_hair\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_bald_macro, /* 🦲 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N9 &kp _NB &kp _N2)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _NE &kp _ND &kp _ND &kp _NB &kp _N2)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N9 &kp _NB &kp _N2)\n    #endif\n  )\n  emoji_bald: emoji_bald {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_bald_macro>, <&emoji_bald_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_bald\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_new_moon_macro, /* 🌑 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N3 &kp _N1 &kp _N1)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _NC &kp _ND &kp _NF &kp _N1 &kp _N1)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N3 &kp _N1 &kp _N1)\n    #endif\n  )\n  emoji_new_moon: emoji_new_moon {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_new_moon_macro>, <&emoji_new_moon_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_new_moon\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_waxing_crescent_moon_macro, /* 🌒 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N3 &kp _N1 &kp _N2)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _NC &kp _ND &kp _NF &kp _N1 &kp _N2)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N3 &kp _N1 &kp _N2)\n    #endif\n  )\n  emoji_waxing_crescent_moon: emoji_waxing_crescent_moon {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_waxing_crescent_moon_macro>, <&emoji_waxing_crescent_moon_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_waxing_crescent_moon\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_first_quarter_moon_macro, /* 🌓 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N3 &kp _N1 &kp _N3)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _NC &kp _ND &kp _NF &kp _N1 &kp _N3)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N3 &kp _N1 &kp _N3)\n    #endif\n  )\n  emoji_first_quarter_moon: emoji_first_quarter_moon {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_first_quarter_moon_macro>, <&emoji_first_quarter_moon_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_first_quarter_moon\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_waxing_gibbous_moon_macro, /* 🌔 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N3 &kp _N1 &kp _N4)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _NC &kp _ND &kp _NF &kp _N1 &kp _N4)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N3 &kp _N1 &kp _N4)\n    #endif\n  )\n  emoji_waxing_gibbous_moon: emoji_waxing_gibbous_moon {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_waxing_gibbous_moon_macro>, <&emoji_waxing_gibbous_moon_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_waxing_gibbous_moon\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_full_moon_macro, /* 🌕 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N3 &kp _N1 &kp _N5)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _NC &kp _ND &kp _NF &kp _N1 &kp _N5)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N3 &kp _N1 &kp _N5)\n    #endif\n  )\n  emoji_full_moon: emoji_full_moon {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_full_moon_macro>, <&emoji_full_moon_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_full_moon\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_waning_gibbous_moon_macro, /* 🌖 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N3 &kp _N1 &kp _N6)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _NC &kp _ND &kp _NF &kp _N1 &kp _N6)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N3 &kp _N1 &kp _N6)\n    #endif\n  )\n  emoji_waning_gibbous_moon: emoji_waning_gibbous_moon {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_waning_gibbous_moon_macro>, <&emoji_waning_gibbous_moon_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_waning_gibbous_moon\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_last_quarter_moon_macro, /* 🌗 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N3 &kp _N1 &kp _N7)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _NC &kp _ND &kp _NF &kp _N1 &kp _N7)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N3 &kp _N1 &kp _N7)\n    #endif\n  )\n  emoji_last_quarter_moon: emoji_last_quarter_moon {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_last_quarter_moon_macro>, <&emoji_last_quarter_moon_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_last_quarter_moon\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_waning_crescent_moon_macro, /* 🌘 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N3 &kp _N1 &kp _N8)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _NC &kp _ND &kp _NF &kp _N1 &kp _N8)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N3 &kp _N1 &kp _N8)\n    #endif\n  )\n  emoji_waning_crescent_moon: emoji_waning_crescent_moon {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_waning_crescent_moon_macro>, <&emoji_waning_crescent_moon_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_waning_crescent_moon\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_tada_macro, /* 🎉 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N3 &kp _N8 &kp _N9)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _NC &kp _ND &kp _NF &kp _N8 &kp _N9)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N3 &kp _N8 &kp _N9)\n    #endif\n  )\n  emoji_tada: emoji_tada {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_tada_macro>, <&emoji_tada_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_tada\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_heart_macro, /* ️❤️ */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _NF &kp _NE &kp _N0 &kp _NF), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_LINUX(&kp _N2 &kp _N7 &kp _N6 &kp _N4), UNICODE_SEQ_LINUX(&kp _NF &kp _NE &kp _N0 &kp _NF)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _NF &kp _NE &kp _N0 &kp _NF), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_MACOS(&kp _N2 &kp _N7 &kp _N6 &kp _N4), UNICODE_SEQ_MACOS(&kp _NF &kp _NE &kp _N0 &kp _NF)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NF &kp _NE &kp _N0 &kp _NF), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N2 &kp _N7 &kp _N6 &kp _N4), UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NF &kp _NE &kp _N0 &kp _NF)\n    #endif\n  )\n  emoji_heart: emoji_heart {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_heart_macro>, <&emoji_heart_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_heart\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_fire_macro, /* 🔥 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N5 &kp _N2 &kp _N5)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _ND &kp _ND &kp _ND &kp _N2 &kp _N5)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N5 &kp _N2 &kp _N5)\n    #endif\n  )\n  emoji_fire: emoji_fire {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_fire_macro>, <&emoji_fire_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_fire\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_muscle_macro, /* 💪 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N4 &kp _NA &kp _NA)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _ND &kp _ND &kp _NC &kp _NA &kp _NA)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N4 &kp _NA &kp _NA)\n    #endif\n  )\n  emoji_muscle: emoji_muscle {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_muscle_macro>, <&emoji_muscle_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_muscle\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_person_climbing_macro, /* 🧗 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N9 &kp _ND &kp _N7)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _NE &kp _ND &kp _ND &kp _ND &kp _N7)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N9 &kp _ND &kp _N7)\n    #endif\n  )\n  emoji_person_climbing: emoji_person_climbing {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_person_climbing_macro>, <&emoji_person_climbing_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_person_climbing\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_lab_coat_macro, /* 🥼 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N9 &kp _N7 &kp _NC)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _NE &kp _ND &kp _ND &kp _N7 &kp _NC)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N9 &kp _N7 &kp _NC)\n    #endif\n  )\n  emoji_lab_coat: emoji_lab_coat {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_lab_coat_macro>, <&emoji_lab_coat_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_lab_coat\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_rocket_macro, /* 🚀 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N6 &kp _N8 &kp _N0)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _ND &kp _ND &kp _NE &kp _N8 &kp _N0)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N6 &kp _N8 &kp _N0)\n    #endif\n  )\n  emoji_rocket: emoji_rocket {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_rocket_macro>, <&emoji_rocket_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_rocket\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_joy_macro, /* 😂 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N6 &kp _N0 &kp _N2)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _ND &kp _ND &kp _NE &kp _N0 &kp _N2)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N6 &kp _N0 &kp _N2)\n    #endif\n  )\n  emoji_joy: emoji_joy {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_joy_macro>, <&emoji_joy_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_joy\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_rofl_macro, /* 🤣 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N9 &kp _N2 &kp _N3)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _NE &kp _ND &kp _ND &kp _N2 &kp _N3)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N9 &kp _N2 &kp _N3)\n    #endif\n  )\n  emoji_rofl: emoji_rofl {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_rofl_macro>, <&emoji_rofl_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_rofl\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_star_struck_macro, /* 🤩 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N9 &kp _N2 &kp _N9)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _NE &kp _ND &kp _ND &kp _N2 &kp _N9)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N9 &kp _N2 &kp _N9)\n    #endif\n  )\n  emoji_star_struck: emoji_star_struck {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_star_struck_macro>, <&emoji_star_struck_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_star_struck\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_love_struck_macro, /* 😍 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N6 &kp _N0 &kp _ND)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _ND &kp _ND &kp _NE &kp _N0 &kp _ND)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N6 &kp _N0 &kp _ND)\n    #endif\n  )\n  emoji_love_struck: emoji_love_struck {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_love_struck_macro>, <&emoji_love_struck_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_love_struck\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_saluting_face_macro, /* 🫡 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _NA &kp _NE &kp _N1)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _NE &kp _ND &kp _NE &kp _NE &kp _N1)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _NA &kp _NE &kp _N1)\n    #endif\n  )\n  emoji_saluting_face: emoji_saluting_face {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_saluting_face_macro>, <&emoji_saluting_face_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_saluting_face\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_shocked_face_macro, /* 🤯 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N9 &kp _N2 &kp _NF)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _NE &kp _ND &kp _ND &kp _N2 &kp _NF)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N9 &kp _N2 &kp _NF)\n    #endif\n  )\n  emoji_shocked_face: emoji_shocked_face {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_shocked_face_macro>, <&emoji_shocked_face_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_shocked_face\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_cold_sweat_macro, /* 😰 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N6 &kp _N3 &kp _N0)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _ND &kp _ND &kp _NE &kp _N3 &kp _N0)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N6 &kp _N3 &kp _N0)\n    #endif\n  )\n  emoji_cold_sweat: emoji_cold_sweat {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_cold_sweat_macro>, <&emoji_cold_sweat_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_cold_sweat\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_monocle_face_macro, /* 🧐 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N9 &kp _ND &kp _N0)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _NE &kp _ND &kp _ND &kp _ND &kp _N0)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N9 &kp _ND &kp _N0)\n    #endif\n  )\n  emoji_monocle_face: emoji_monocle_face {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_monocle_face_macro>, <&emoji_monocle_face_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_monocle_face\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_snap_fingers_macro, /* 🫰 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _NA &kp _NF &kp _N0)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _NE &kp _ND &kp _NE &kp _NF &kp _N0)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _NA &kp _NF &kp _N0)\n    #endif\n  )\n  emoji_snap_fingers: emoji_snap_fingers {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_snap_fingers_macro>, <&emoji_snap_fingers_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_snap_fingers\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_ok_hand_macro, /* 👌 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N4 &kp _N4 &kp _NC)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _ND &kp _ND &kp _NC &kp _N4 &kp _NC)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N4 &kp _N4 &kp _NC)\n    #endif\n  )\n  emoji_ok_hand: emoji_ok_hand {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_ok_hand_macro>, <&emoji_ok_hand_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_ok_hand\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_pray_macro, /* 🙏 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N6 &kp _N4 &kp _NF)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _ND &kp _ND &kp _NE &kp _N4 &kp _NF)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N6 &kp _N4 &kp _NF)\n    #endif\n  )\n  emoji_pray: emoji_pray {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_pray_macro>, <&emoji_pray_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_pray\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_sweat_smile_macro, /* 😅 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N6 &kp _N0 &kp _N5)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _ND &kp _ND &kp _NE &kp _N0 &kp _N5)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N6 &kp _N0 &kp _N5)\n    #endif\n  )\n  emoji_sweat_smile: emoji_sweat_smile {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_sweat_smile_macro>, <&emoji_sweat_smile_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_sweat_smile\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_disappointed_macro, /* 😞 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N6 &kp _N1 &kp _NE)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _ND &kp _ND &kp _NE &kp _N1 &kp _NE)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N6 &kp _N1 &kp _NE)\n    #endif\n  )\n  emoji_disappointed: emoji_disappointed {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_disappointed_macro>, <&emoji_disappointed_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_disappointed\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_thinking_macro, /* 🤔 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N9 &kp _N1 &kp _N4)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _NE &kp _ND &kp _ND &kp _N1 &kp _N4)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N9 &kp _N1 &kp _N4)\n    #endif\n  )\n  emoji_thinking: emoji_thinking {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_thinking_macro>, <&emoji_thinking_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_thinking\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_person_tipping_hand_macro, /* 💁 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N4 &kp _N8 &kp _N1)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _ND &kp _ND &kp _NC &kp _N8 &kp _N1)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N4 &kp _N8 &kp _N1)\n    #endif\n  )\n  emoji_person_tipping_hand: emoji_person_tipping_hand {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_person_tipping_hand_macro>, <&emoji_person_tipping_hand_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_person_tipping_hand\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_person_gesturing_ok_macro, /* 🙆 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N6 &kp _N4 &kp _N6)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _ND &kp _ND &kp _NE &kp _N4 &kp _N6)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N6 &kp _N4 &kp _N6)\n    #endif\n  )\n  emoji_person_gesturing_ok: emoji_person_gesturing_ok {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_person_gesturing_ok_macro>, <&emoji_person_gesturing_ok_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_person_gesturing_ok\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_person_bowing_macro, /* 🙇 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N6 &kp _N4 &kp _N7)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _ND &kp _ND &kp _NE &kp _N4 &kp _N7)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N6 &kp _N4 &kp _N7)\n    #endif\n  )\n  emoji_person_bowing: emoji_person_bowing {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_person_bowing_macro>, <&emoji_person_bowing_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_person_bowing\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_person_raising_hand_macro, /* 🙋 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N6 &kp _N4 &kp _NB)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _ND &kp _ND &kp _NE &kp _N4 &kp _NB)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N6 &kp _N4 &kp _NB)\n    #endif\n  )\n  emoji_person_raising_hand: emoji_person_raising_hand {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_person_raising_hand_macro>, <&emoji_person_raising_hand_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_person_raising_hand\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_person_gesturing_no_macro, /* 🙅 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N6 &kp _N4 &kp _N5)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _ND &kp _ND &kp _NE &kp _N4 &kp _N5)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N6 &kp _N4 &kp _N5)\n    #endif\n  )\n  emoji_person_gesturing_no: emoji_person_gesturing_no {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_person_gesturing_no_macro>, <&emoji_person_gesturing_no_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_person_gesturing_no\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_person_shrugging_macro, /* 🤷 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N9 &kp _N3 &kp _N7)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _NE &kp _ND &kp _ND &kp _N3 &kp _N7)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N9 &kp _N3 &kp _N7)\n    #endif\n  )\n  emoji_person_shrugging: emoji_person_shrugging {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_person_shrugging_macro>, <&emoji_person_shrugging_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_person_shrugging\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_check_macro, /* ✅ */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N2 &kp _N7 &kp _N0 &kp _N5)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _N2 &kp _N7 &kp _N0 &kp _N5)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N2 &kp _N7 &kp _N0 &kp _N5)\n    #endif\n  )\n  emoji_check: emoji_check {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_check_macro>, <&emoji_check_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_check\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_100_macro, /* 💯 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N4 &kp _NA &kp _NF)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _ND &kp _ND &kp _NC &kp _NA &kp _NF)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N4 &kp _NA &kp _NF)\n    #endif\n  )\n  emoji_100: emoji_100 {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_100_macro>, <&emoji_100_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_100\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_warning_macro, /* ⚠️ */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N2 &kp _N6 &kp _NA &kp _N0), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_LINUX(&kp _NF &kp _NE &kp _N0 &kp _NF)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _N2 &kp _N6 &kp _NA &kp _N0), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_MACOS(&kp _NF &kp _NE &kp _N0 &kp _NF)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N2 &kp _N6 &kp _NA &kp _N0), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NF &kp _NE &kp _N0 &kp _NF)\n    #endif\n  )\n  emoji_warning: emoji_warning {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_warning_macro>, <&emoji_warning_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_warning\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_cross_macro, /* ❌ */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N2 &kp _N7 &kp _N4 &kp _NC)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _N2 &kp _N7 &kp _N4 &kp _NC)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N2 &kp _N7 &kp _N4 &kp _NC)\n    #endif\n  )\n  emoji_cross: emoji_cross {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_cross_macro>, <&emoji_cross_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_cross\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_question_macro, /* ❓ */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N2 &kp _N7 &kp _N5 &kp _N3)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _N2 &kp _N7 &kp _N5 &kp _N3)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N2 &kp _N7 &kp _N5 &kp _N3)\n    #endif\n  )\n  emoji_question: emoji_question {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_question_macro>, <&emoji_question_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_question\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_astronaut_macro, /* 🧑‍🚀 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N9 &kp _ND &kp _N1), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_LINUX(&kp _N2 &kp _N0 &kp _N0 &kp _ND), UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N6 &kp _N8 &kp _N0)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _NE &kp _ND &kp _ND &kp _ND &kp _N1), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_MACOS(&kp _N2 &kp _N0 &kp _N0 &kp _ND), UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _ND &kp _ND &kp _NE &kp _N8 &kp _N0)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N9 &kp _ND &kp _N1), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N2 &kp _N0 &kp _N0 &kp _ND), UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N6 &kp _N8 &kp _N0)\n    #endif\n  )\n  emoji_astronaut: emoji_astronaut {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_astronaut_macro>, <&emoji_astronaut_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_astronaut\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_nerd_macro, /* 🤓 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N9 &kp _N1 &kp _N3)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _NE &kp _ND &kp _ND &kp _N1 &kp _N3)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N9 &kp _N1 &kp _N3)\n    #endif\n  )\n  emoji_nerd: emoji_nerd {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_nerd_macro>, <&emoji_nerd_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_nerd\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_sparkles_macro, /* ✨ */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N2 &kp _N7 &kp _N2 &kp _N8)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _N2 &kp _N7 &kp _N2 &kp _N8)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N2 &kp _N7 &kp _N2 &kp _N8)\n    #endif\n  )\n  emoji_sparkles: emoji_sparkles {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_sparkles_macro>, <&emoji_sparkles_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_sparkles\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_raised_hands_macro, /* 🙌 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N6 &kp _N4 &kp _NC)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _ND &kp _ND &kp _NE &kp _N4 &kp _NC)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N6 &kp _N4 &kp _NC)\n    #endif\n  )\n  emoji_raised_hands: emoji_raised_hands {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_raised_hands_macro>, <&emoji_raised_hands_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_raised_hands\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_point_up_macro, /* ☝️ */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N2 &kp _N6 &kp _N1 &kp _ND), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_LINUX(&kp _NF &kp _NE &kp _N0 &kp _NF)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _N2 &kp _N6 &kp _N1 &kp _ND), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_MACOS(&kp _NF &kp _NE &kp _N0 &kp _NF)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N2 &kp _N6 &kp _N1 &kp _ND), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NF &kp _NE &kp _N0 &kp _NF)\n    #endif\n  )\n  emoji_point_up: emoji_point_up {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_point_up_macro>, <&emoji_point_up_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_point_up\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_thumbs_up_macro, /* 👍 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N4 &kp _N4 &kp _ND)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _ND &kp _ND &kp _NC &kp _N4 &kp _ND)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N4 &kp _N4 &kp _ND)\n    #endif\n  )\n  emoji_thumbs_up: emoji_thumbs_up {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_thumbs_up_macro>, <&emoji_thumbs_up_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_thumbs_up\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n\n  //\n  // characters\n  //\n  emoji_moon_complete: emoji_moon_complete {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_new_moon>, <&emoji_full_moon>;\n    mods = <MOD_LSFT>;\n  };\n  emoji_moon_gibbous: emoji_moon_gibbous {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_waning_gibbous_moon>, <&emoji_waxing_gibbous_moon>;\n    mods = <MOD_LSFT>;\n  };\n  emoji_moon_quarter: emoji_moon_quarter {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_last_quarter_moon>, <&emoji_first_quarter_moon>;\n    mods = <MOD_LSFT>;\n  };\n  emoji_moon_crescent: emoji_moon_crescent {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_waning_crescent_moon>, <&emoji_waxing_crescent_moon>;\n    mods = <MOD_LSFT>;\n  };\n  UNICODE(emoji_face_smile_up_macro, /* 🙂 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N6 &kp _N4 &kp _N2)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _ND &kp _ND &kp _NE &kp _N4 &kp _N2)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N6 &kp _N4 &kp _N2)\n    #endif\n  )\n  emoji_face_smile_up: emoji_face_smile_up {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_face_smile_up_macro>, <&emoji_face_smile_up_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_face_smile_up\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_face_smile_down_macro, /* 🙃 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N6 &kp _N4 &kp _N3)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _ND &kp _ND &kp _NE &kp _N4 &kp _N3)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N6 &kp _N4 &kp _N3)\n    #endif\n  )\n  emoji_face_smile_down: emoji_face_smile_down {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_face_smile_down_macro>, <&emoji_face_smile_down_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_face_smile_down\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  emoji_face_smile: emoji_face_smile {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_face_smile_up>, <&emoji_face_smile_down>;\n    mods = <MOD_LSFT>;\n  };\n  emoji_face_laugh: emoji_face_laugh {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_joy>, <&emoji_rofl>;\n    mods = <MOD_LSFT>;\n  };\n  emoji_face_eyes: emoji_face_eyes {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_star_struck>, <&emoji_love_struck>;\n    mods = <MOD_LSFT>;\n  };\n  UNICODE(emoji_face_joke_wink_macro, /* 😉 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N6 &kp _N0 &kp _N9)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _ND &kp _ND &kp _NE &kp _N0 &kp _N9)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N6 &kp _N0 &kp _N9)\n    #endif\n  )\n  emoji_face_joke_wink: emoji_face_joke_wink {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_face_joke_wink_macro>, <&emoji_face_joke_wink_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_face_joke_wink\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_face_joke_tongue_macro, /* 😜 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N6 &kp _N1 &kp _NC)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _ND &kp _ND &kp _NE &kp _N1 &kp _NC)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N6 &kp _N1 &kp _NC)\n    #endif\n  )\n  emoji_face_joke_tongue: emoji_face_joke_tongue {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_face_joke_tongue_macro>, <&emoji_face_joke_tongue_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_face_joke_tongue\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  emoji_face_joke: emoji_face_joke {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_face_joke_wink>, <&emoji_face_joke_tongue>;\n    mods = <MOD_LSFT>;\n  };\n  UNICODE(emoji_face_fear_scared_macro, /* 😨 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N6 &kp _N2 &kp _N8)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _ND &kp _ND &kp _NE &kp _N2 &kp _N8)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N6 &kp _N2 &kp _N8)\n    #endif\n  )\n  emoji_face_fear_scared: emoji_face_fear_scared {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_face_fear_scared_macro>, <&emoji_face_fear_scared_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_face_fear_scared\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_face_fear_scream_macro, /* 😱 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N6 &kp _N3 &kp _N1)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _ND &kp _ND &kp _NE &kp _N3 &kp _N1)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N6 &kp _N3 &kp _N1)\n    #endif\n  )\n  emoji_face_fear_scream: emoji_face_fear_scream {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_face_fear_scream_macro>, <&emoji_face_fear_scream_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_face_fear_scream\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  emoji_face_fear: emoji_face_fear {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_face_fear_scared>, <&emoji_face_fear_scream>;\n    mods = <MOD_LSFT>;\n  };\n  UNICODE(emoji_face_surprise_dizzy_macro, /* 😵 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N6 &kp _N3 &kp _N5)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _ND &kp _ND &kp _NE &kp _N3 &kp _N5)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N6 &kp _N3 &kp _N5)\n    #endif\n  )\n  emoji_face_surprise_dizzy: emoji_face_surprise_dizzy {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_face_surprise_dizzy_macro>, <&emoji_face_surprise_dizzy_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_face_surprise_dizzy\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  emoji_face_surprise: emoji_face_surprise {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_shocked_face>, <&emoji_face_surprise_dizzy>;\n    mods = <MOD_LSFT>;\n  };\n  UNICODE(emoji_gesture_attention_wave_macro, /* 👋 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N4 &kp _N4 &kp _NB)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _ND &kp _ND &kp _NC &kp _N4 &kp _NB)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N4 &kp _N4 &kp _NB)\n    #endif\n  )\n  emoji_gesture_attention_wave: emoji_gesture_attention_wave {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_gesture_attention_wave_macro>, <&emoji_gesture_attention_wave_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_gesture_attention_wave\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  emoji_gesture_attention: emoji_gesture_attention {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_snap_fingers>, <&emoji_gesture_attention_wave>;\n    mods = <MOD_LSFT>;\n  };\n  UNICODE(emoji_gesture_approval_cool_macro, /* 😎 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N6 &kp _N0 &kp _NE)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _ND &kp _ND &kp _NE &kp _N0 &kp _NE)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N6 &kp _N0 &kp _NE)\n    #endif\n  )\n  emoji_gesture_approval_cool: emoji_gesture_approval_cool {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_gesture_approval_cool_macro>, <&emoji_gesture_approval_cool_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_gesture_approval_cool\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  emoji_gesture_approval: emoji_gesture_approval {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_ok_hand>, <&emoji_gesture_approval_cool>;\n    mods = <MOD_LSFT>;\n  };\n  emoji_gesture_gratitude: emoji_gesture_gratitude {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_pray>, <&emoji_saluting_face>;\n    mods = <MOD_LSFT>;\n  };\n  emoji_gesture_anxiety: emoji_gesture_anxiety {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_sweat_smile>, <&emoji_cold_sweat>;\n    mods = <MOD_LSFT>;\n  };\n  UNICODE(emoji_gesture_despair_cry_macro, /* 😢 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N6 &kp _N2 &kp _N2)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _ND &kp _ND &kp _NE &kp _N2 &kp _N2)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N6 &kp _N2 &kp _N2)\n    #endif\n  )\n  emoji_gesture_despair_cry: emoji_gesture_despair_cry {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_gesture_despair_cry_macro>, <&emoji_gesture_despair_cry_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_gesture_despair_cry\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  emoji_gesture_despair: emoji_gesture_despair {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_disappointed>, <&emoji_gesture_despair_cry>;\n    mods = <MOD_LSFT>;\n  };\n  emoji_gesture_curious: emoji_gesture_curious {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_thinking>, <&emoji_monocle_face>;\n    mods = <MOD_LSFT>;\n  };\n  UNICODE(emoji_gesture_point_you_macro, /* 🫵 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _NA &kp _NF &kp _N5)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _NE &kp _ND &kp _NE &kp _NF &kp _N5)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _NA &kp _NF &kp _N5)\n    #endif\n  )\n  emoji_gesture_point_you: emoji_gesture_point_you {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_gesture_point_you_macro>, <&emoji_gesture_point_you_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_gesture_point_you\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  emoji_gesture_point: emoji_gesture_point {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_point_up>, <&emoji_gesture_point_you>;\n    mods = <MOD_LSFT>;\n  };\n  UNICODE(emoji_gesture_thumbs_down_macro, /* 👎 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N4 &kp _N4 &kp _NE)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _ND &kp _ND &kp _NC &kp _N4 &kp _NE)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N4 &kp _N4 &kp _NE)\n    #endif\n  )\n  emoji_gesture_thumbs_down: emoji_gesture_thumbs_down {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_gesture_thumbs_down_macro>, <&emoji_gesture_thumbs_down_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_gesture_thumbs_down\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  emoji_gesture_thumbs: emoji_gesture_thumbs {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_thumbs_up>, <&emoji_gesture_thumbs_down>;\n    mods = <MOD_LSFT>;\n  };\n  UNICODE(emoji_gesture_hands_clap_macro, /* 👏 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N4 &kp _N4 &kp _NF)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _ND &kp _ND &kp _NC &kp _N4 &kp _NF)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N4 &kp _N4 &kp _NF)\n    #endif\n  )\n  emoji_gesture_hands_clap: emoji_gesture_hands_clap {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_gesture_hands_clap_macro>, <&emoji_gesture_hands_clap_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_gesture_hands_clap\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  emoji_gesture_hands: emoji_gesture_hands {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_raised_hands>, <&emoji_gesture_hands_clap>;\n    mods = <MOD_LSFT>;\n  };\n  UNICODE(emoji_theme_awesome_shine_macro, /* 🌟 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N3 &kp _N1 &kp _NF)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _NC &kp _ND &kp _NF &kp _N1 &kp _NF)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N3 &kp _N1 &kp _NF)\n    #endif\n  )\n  emoji_theme_awesome_shine: emoji_theme_awesome_shine {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_theme_awesome_shine_macro>, <&emoji_theme_awesome_shine_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_theme_awesome_shine\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  emoji_theme_awesome: emoji_theme_awesome {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_sparkles>, <&emoji_theme_awesome_shine>;\n    mods = <MOD_LSFT>;\n  };\n  UNICODE(emoji_theme_magic_wand_macro, /* 🪄 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _NA &kp _N8 &kp _N4)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _NE &kp _ND &kp _NE &kp _N8 &kp _N4)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _NA &kp _N8 &kp _N4)\n    #endif\n  )\n  emoji_theme_magic_wand: emoji_theme_magic_wand {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_theme_magic_wand_macro>, <&emoji_theme_magic_wand_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_theme_magic_wand\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_theme_magic_wizard_macro, /* 🧙 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N9 &kp _ND &kp _N9)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _NE &kp _ND &kp _ND &kp _ND &kp _N9)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N9 &kp _ND &kp _N9)\n    #endif\n  )\n  emoji_theme_magic_wizard: emoji_theme_magic_wizard {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_theme_magic_wizard_macro>, <&emoji_theme_magic_wizard_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_theme_magic_wizard\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  emoji_theme_magic: emoji_theme_magic {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_theme_magic_wand>, <&emoji_theme_magic_wizard>;\n    mods = <MOD_LSFT>;\n  };\n  emoji_theme_space: emoji_theme_space {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_rocket>, <&emoji_astronaut>;\n    mods = <MOD_LSFT>;\n  };\n  emoji_theme_science: emoji_theme_science {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_nerd>, <&emoji_lab_coat>;\n    mods = <MOD_LSFT>;\n  };\n  UNICODE(emoji_theme_strength_lifting_macro, /* 🏋️ */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N3 &kp _NC &kp _NB), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_LINUX(&kp _NF &kp _NE &kp _N0 &kp _NF)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _NC &kp _ND &kp _NF &kp _NC &kp _NB), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_MACOS(&kp _NF &kp _NE &kp _N0 &kp _NF)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N3 &kp _NC &kp _NB), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NF &kp _NE &kp _N0 &kp _NF)\n    #endif\n  )\n  emoji_theme_strength_lifting: emoji_theme_strength_lifting {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_theme_strength_lifting_macro>, <&emoji_theme_strength_lifting_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_theme_strength_lifting\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  emoji_theme_strength: emoji_theme_strength {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_muscle>, <&emoji_theme_strength_lifting>;\n    mods = <MOD_LSFT>;\n  };\n  UNICODE(emoji_theme_effort_juggle_macro, /* 🤹 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N9 &kp _N3 &kp _N9)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _NE &kp _ND &kp _ND &kp _N3 &kp _N9)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N9 &kp _N3 &kp _N9)\n    #endif\n  )\n  emoji_theme_effort_juggle: emoji_theme_effort_juggle {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_theme_effort_juggle_macro>, <&emoji_theme_effort_juggle_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_theme_effort_juggle\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  emoji_theme_effort: emoji_theme_effort {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_person_climbing>, <&emoji_theme_effort_juggle>;\n    mods = <MOD_LSFT>;\n  };\n  UNICODE(emoji_theme_nature_water_macro, /* 🌊 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N3 &kp _N0 &kp _NA)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _NC &kp _ND &kp _NF &kp _N0 &kp _NA)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N3 &kp _N0 &kp _NA)\n    #endif\n  )\n  emoji_theme_nature_water: emoji_theme_nature_water {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_theme_nature_water_macro>, <&emoji_theme_nature_water_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_theme_nature_water\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  emoji_theme_nature: emoji_theme_nature {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_fire>, <&emoji_theme_nature_water>;\n    mods = <MOD_LSFT>;\n  };\n  UNICODE(emoji_theme_love_heart_macro, /* ❤️ */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N2 &kp _N7 &kp _N6 &kp _N4), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_LINUX(&kp _NF &kp _NE &kp _N0 &kp _NF)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _N2 &kp _N7 &kp _N6 &kp _N4), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_MACOS(&kp _NF &kp _NE &kp _N0 &kp _NF)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N2 &kp _N7 &kp _N6 &kp _N4), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_WINDOWS(&kp _N0 &kp _NF &kp _NE &kp _N0 &kp _NF)\n    #endif\n  )\n  emoji_theme_love_heart: emoji_theme_love_heart {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_theme_love_heart_macro>, <&emoji_theme_love_heart_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_theme_love_heart\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_theme_love_face_macro, /* 🥰 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N9 &kp _N7 &kp _N0)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _NE &kp _ND &kp _ND &kp _N7 &kp _N0)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N9 &kp _N7 &kp _N0)\n    #endif\n  )\n  emoji_theme_love_face: emoji_theme_love_face {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_theme_love_face_macro>, <&emoji_theme_love_face_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_theme_love_face\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  emoji_theme_love: emoji_theme_love {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_theme_love_heart>, <&emoji_theme_love_face>;\n    mods = <MOD_LSFT>;\n  };\n  UNICODE(emoji_theme_party_face_macro, /* 🥳 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N9 &kp _N7 &kp _N3)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _NE &kp _ND &kp _ND &kp _N7 &kp _N3)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N9 &kp _N7 &kp _N3)\n    #endif\n  )\n  emoji_theme_party_face: emoji_theme_party_face {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_theme_party_face_macro>, <&emoji_theme_party_face_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_theme_party_face\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  emoji_theme_party: emoji_theme_party {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_tada>, <&emoji_theme_party_face>;\n    mods = <MOD_LSFT>;\n  };\n  UNICODE(emoji_theme_game_dart_macro, /* 🎯 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N3 &kp _NA &kp _NF)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _NC &kp _ND &kp _NF &kp _NA &kp _NF)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N3 &kp _NA &kp _NF)\n    #endif\n  )\n  emoji_theme_game_dart: emoji_theme_game_dart {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_theme_game_dart_macro>, <&emoji_theme_game_dart_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_theme_game_dart\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_theme_game_dice_macro, /* 🎲 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N3 &kp _NB &kp _N2)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _NC &kp _ND &kp _NF &kp _NB &kp _N2)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N3 &kp _NB &kp _N2)\n    #endif\n  )\n  emoji_theme_game_dice: emoji_theme_game_dice {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_theme_game_dice_macro>, <&emoji_theme_game_dice_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_theme_game_dice\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  emoji_theme_game: emoji_theme_game {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_theme_game_dart>, <&emoji_theme_game_dice>;\n    mods = <MOD_LSFT>;\n  };\n  UNICODE(emoji_theme_trend_up_macro, /* 📈 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N4 &kp _NC &kp _N8)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _ND &kp _ND &kp _NC &kp _NC &kp _N8)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N4 &kp _NC &kp _N8)\n    #endif\n  )\n  emoji_theme_trend_up: emoji_theme_trend_up {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_theme_trend_up_macro>, <&emoji_theme_trend_up_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_theme_trend_up\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  UNICODE(emoji_theme_trend_down_macro, /* 📉 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N4 &kp _NC &kp _N9)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _ND &kp _ND &kp _NC &kp _NC &kp _N9)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N4 &kp _NC &kp _N9)\n    #endif\n  )\n  emoji_theme_trend_down: emoji_theme_trend_down {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_theme_trend_down_macro>, <&emoji_theme_trend_down_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_theme_trend_down\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  emoji_theme_trend: emoji_theme_trend {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_theme_trend_up>, <&emoji_theme_trend_down>;\n    mods = <MOD_LSFT>;\n  };\n  UNICODE(emoji_theme_sigh_fail_macro, /* 🤦 */\n    #if OPERATING_SYSTEM == 'L'\n      UNICODE_SEQ_LINUX(&kp _N1 &kp _NF &kp _N9 &kp _N2 &kp _N6)\n    #elif OPERATING_SYSTEM == 'M'\n      UNICODE_SEQ_MACOS(&kp _ND &kp _N8 &kp _N3 &kp _NE &kp _ND &kp _ND &kp _N2 &kp _N6)\n    #elif OPERATING_SYSTEM == 'W'\n      UNICODE_SEQ_WINDOWS(&kp _N0 &kp _N1 &kp _NF &kp _N9 &kp _N2 &kp _N6)\n    #endif\n  )\n  emoji_theme_sigh_fail: emoji_theme_sigh_fail {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_theme_sigh_fail_macro>, <&emoji_theme_sigh_fail_macro>;\n    mods = <(~(\n#ifdef WORLD_USE_COMPOSE_FOR_emoji_theme_sigh_fail\n  COMPOSE_MORPH_MODS\n#else\n  UNICODE_MORPH_MODS\n#endif\n))>;\n  };\n  emoji_theme_sigh: emoji_theme_sigh {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&emoji_person_shrugging>, <&emoji_theme_sigh_fail>;\n    mods = <MOD_LSFT>;\n  };\n};\n/*HACK*/};\n#if EMOJI_GENDER_SIGN_PRESET == 'N'\n  emoji_gender_sign_preset: &none {};\n#elif EMOJI_GENDER_SIGN_PRESET == 'M'\n  emoji_gender_sign_preset: &emoji_male_sign {};\n#elif EMOJI_GENDER_SIGN_PRESET == 'F'\n  emoji_gender_sign_preset: &emoji_female_sign {};\n#endif\n\n#if EMOJI_SKIN_TONE_PRESET == 'N'\n  emoji_skin_tone_preset: &none {};\n#elif EMOJI_SKIN_TONE_PRESET == 'L'\n  emoji_skin_tone_preset: &emoji_light_skin_tone {};\n#elif EMOJI_SKIN_TONE_PRESET == 'l'\n  emoji_skin_tone_preset: &emoji_medium_light_skin_tone {};\n#elif EMOJI_SKIN_TONE_PRESET == 'M'\n  emoji_skin_tone_preset: &emoji_medium_skin_tone {};\n#elif EMOJI_SKIN_TONE_PRESET == 'd'\n  emoji_skin_tone_preset: &emoji_medium_dark_skin_tone {};\n#elif EMOJI_SKIN_TONE_PRESET == 'D'\n  emoji_skin_tone_preset: &emoji_dark_skin_tone {};\n#endif\n\n#if EMOJI_HAIR_STYLE_PRESET == 'N'\n  emoji_hair_style_preset: &none {};\n#elif EMOJI_HAIR_STYLE_PRESET == 'B'\n  emoji_hair_style_preset: &emoji_bald {};\n#elif EMOJI_HAIR_STYLE_PRESET == 'R'\n  emoji_hair_style_preset: &emoji_red_hair {};\n#elif EMOJI_HAIR_STYLE_PRESET == 'C'\n  emoji_hair_style_preset: &emoji_curly_hair {};\n#elif EMOJI_HAIR_STYLE_PRESET == 'W'\n  emoji_hair_style_preset: &emoji_white_hair {};\n#endif\n/*HACK*//{\n\n//////////////////////////////////////////////////////////////////////////\n//\n// Mouse keys (keyboard mouse control) requires v24.12 firmware or newer:\n// override the \"HID_POINTING\" setting to \"y\" in Advanced Configuration\n// and then select \"v24.12\" firmware from the drop-down menu located at\n// Glove80 Layout Editor > Settings > Advanced Settings > Firmware Version\n//\n// Alternatively, you can use either PR36 or PR23 beta firmware for this:\n// select \"community.pr36.mouse-keys\" from the drop-down menu located at\n// Glove80 Layout Editor > Settings > Advanced Settings > Firmware Version\n//\n// - https://github.com/moergo-sc/zmk/pull/36\n// - https://github.com/moergo-sc/zmk/pull/23\n// - https://gist.github.com/krissen/dd27082e7ab0575619c7a31f4d2ec7ae\n// - https://github.com/zmkfirmware/zmk/compare/main...urob:zmk:mouse-3.2\n// - https://github.com/caksoylar/zmk-config/commit/0020c23c544cd7111013f0114609d1fb90e0e475\n// - https://github.com/caksoylar/zmk-config/commit/e35ee2f08788927683df7bbdd7fc73434473886e\n//\n//////////////////////////////////////////////////////////////////////////\n\n//\n// NATURAL_SCROLLING reverses the directionality of the mouse scroll wheel\n// to support \"natural scrolling\" in macOS and other desktop environments.\n//\n//#define NATURAL_SCROLLING\n\n#ifdef NATURAL_SCROLLING\n  #define MOUSE_SCROLL_UP    SCRL_DOWN\n  #define MOUSE_SCROLL_DOWN  SCRL_UP\n  #define MOUSE_SCROLL_LEFT  SCRL_RIGHT\n  #define MOUSE_SCROLL_RIGHT SCRL_LEFT\n#else\n  #define MOUSE_SCROLL_UP    SCRL_UP\n  #define MOUSE_SCROLL_DOWN  SCRL_DOWN\n  #define MOUSE_SCROLL_LEFT  SCRL_LEFT\n  #define MOUSE_SCROLL_RIGHT SCRL_RIGHT\n#endif\n\n//\n// MOUSE_MOTION_DELAY defines how long to wait (milliseconds) before starting\n// to move the mouse pointer.\n//\n#ifndef MOUSE_MOTION_DELAY\n#define MOUSE_MOTION_DELAY 0\n#endif\n\n//\n// MOUSE_MOTION_ACCELERATION_EXPONENT sets how the mouse pointer accelerates:\n//\n// acceleration exponent 0: uniform speed\n// acceleration exponent 1: uniform acceleration\n// acceleration exponent 2: uniform jerk\n//\n#ifndef MOUSE_MOTION_ACCELERATION_EXPONENT\n#define MOUSE_MOTION_ACCELERATION_EXPONENT 1\n#endif\n\n//\n// MOUSE_MOTION_TIME_TO_MAXIMUM_SPEED defines how long to wait (milliseconds)\n// before the mouse pointer speed is suddenly boosted to the maximum value.\n//\n#ifndef MOUSE_MOTION_TIME_TO_MAXIMUM_SPEED\n#define MOUSE_MOTION_TIME_TO_MAXIMUM_SPEED 300\n#endif\n\n//\n// MOUSE_MOTION_MAXIMUM_SPEED defines how quickly the mouse pointer can move.\n//\n#ifndef MOUSE_MOTION_MAXIMUM_SPEED\n#define MOUSE_MOTION_MAXIMUM_SPEED 600\n#endif\n\n//\n// MOUSE_SCROLL_DELAY defines how long to wait (milliseconds) before starting\n// to move the mouse pointer.\n//\n#ifndef MOUSE_SCROLL_DELAY\n#define MOUSE_SCROLL_DELAY 0\n#endif\n\n//\n// MOUSE_SCROLL_ACCELERATION_EXPONENT sets how the mouse pointer accelerates:\n//\n// acceleration exponent 0: uniform speed\n// acceleration exponent 1: uniform acceleration\n// acceleration exponent 2: uniform jerk\n//\n#ifndef MOUSE_SCROLL_ACCELERATION_EXPONENT\n#define MOUSE_SCROLL_ACCELERATION_EXPONENT 0\n#endif\n\n//\n// MOUSE_SCROLL_TIME_TO_MAXIMUM_SPEED defines how long to wait (milliseconds)\n// before the mouse pointer speed is suddenly boosted to the maximum value.\n//\n#ifndef MOUSE_SCROLL_TIME_TO_MAXIMUM_SPEED\n#define MOUSE_SCROLL_TIME_TO_MAXIMUM_SPEED 300\n#endif\n\n//\n// MOUSE_SCROLL_MAXIMUM_SPEED defines how quickly the mouse wheel can scroll.\n//\n#ifndef MOUSE_SCROLL_MAXIMUM_SPEED\n#define MOUSE_SCROLL_MAXIMUM_SPEED 10\n#endif\n\n//\n// MOUSE_SCALER_FINE sets parameters for the &zip_xy_scaler input processor:\n// https://zmk.dev/docs/keymaps/input-processors/scaler\n//\n#ifndef MOUSE_SCALER_FINE\n#define MOUSE_SCALER_FINE 1 16\n#endif\n\n//\n// MOUSE_SCALER_SLOW sets parameters for the &zip_xy_scaler input processor:\n// https://zmk.dev/docs/keymaps/input-processors/scaler\n//\n#ifndef MOUSE_SCALER_SLOW\n#define MOUSE_SCALER_SLOW 1 4\n#endif\n\n//\n// MOUSE_SCALER_FAST sets parameters for the &zip_xy_scaler input processor:\n// https://zmk.dev/docs/keymaps/input-processors/scaler\n//\n#ifndef MOUSE_SCALER_FAST\n#define MOUSE_SCALER_FAST 4 1\n#endif\n\n//\n// MOUSE_SCALER_WARP sets parameters for the &zip_xy_scaler input processor:\n// https://zmk.dev/docs/keymaps/input-processors/scaler\n//\n#ifndef MOUSE_SCALER_WARP\n#define MOUSE_SCALER_WARP 12 1\n#endif\n/*HACK*/};\n#ifdef ENABLE_MOUSE_KEYS\n  // ==== MOUSE-KEY <section begins> ====\n  #define ZMK_POINTING_DEFAULT_MOVE_VAL MOUSE_MOTION_MAXIMUM_SPEED\n  #define ZMK_POINTING_DEFAULT_SCRL_VAL MOUSE_SCROLL_MAXIMUM_SPEED\n  #include <dt-bindings/zmk/pointing.h>\n  &mmv {\n    delay-ms = <MOUSE_MOTION_DELAY>;\n    acceleration-exponent = <MOUSE_MOTION_ACCELERATION_EXPONENT>;\n    time-to-max-speed-ms = <MOUSE_MOTION_TIME_TO_MAXIMUM_SPEED>;\n  };\n  &msc {\n    delay-ms = <MOUSE_SCROLL_DELAY>;\n    acceleration-exponent = <MOUSE_SCROLL_ACCELERATION_EXPONENT>;\n    time-to-max-speed-ms = <MOUSE_SCROLL_TIME_TO_MAXIMUM_SPEED>;\n  };\n  //\n  // Scaling for mouse movement, based on @caksoylar's example:\n  // https://github.com/caksoylar/zmk-config/commit/0020c23c544cd7111013f0114609d1fb90e0e475\n  //\n  #include <input/processors.dtsi>\n  &mmv_input_listener {\n    #ifdef LAYER_MouseFine\n    fine {\n      layers = <LAYER_MouseFine>;\n      input-processors = <&zip_xy_scaler MOUSE_SCALER_FINE>;\n    };\n    #endif\n    #ifdef LAYER_MouseSlow\n    slow {\n      layers = <LAYER_MouseSlow>;\n      input-processors = <&zip_xy_scaler MOUSE_SCALER_SLOW>;\n    };\n    #endif\n    #ifdef LAYER_MouseFast\n    fast {\n      layers = <LAYER_MouseFast>;\n      input-processors = <&zip_xy_scaler MOUSE_SCALER_FAST>;\n    };\n    #endif\n    #ifdef LAYER_MouseWarp\n    warp {\n      layers = <LAYER_MouseWarp>;\n      input-processors = <&zip_xy_scaler MOUSE_SCALER_WARP>;\n    };\n    #endif\n  };\n  //\n  // Scaling for mouse scrolling, based on @caksoylar's example:\n  // https://github.com/caksoylar/zmk-config/commit/e35ee2f08788927683df7bbdd7fc73434473886e\n  //\n  #include <zephyr/dt-bindings/input/input-event-codes.h>\n  / {\n    input_processors {\n      zip_scroll_scaling_processor: zip_scroll_scaling_processor {\n        compatible = \"zmk,input-processor-scaler\";\n        #input-processor-cells = <2>;\n        type = <INPUT_EV_REL>;\n        codes = <INPUT_REL_WHEEL INPUT_REL_HWHEEL>;\n        track-remainders;\n      };\n    };\n  };\n  &msc_input_listener {\n    #ifdef LAYER_MouseFine\n    fine {\n      layers = <LAYER_MouseFine>;\n      input-processors = <&zip_scroll_scaling_processor MOUSE_SCALER_FINE>;\n    };\n    #endif\n    #ifdef LAYER_MouseSlow\n    slow {\n      layers = <LAYER_MouseSlow>;\n      input-processors = <&zip_scroll_scaling_processor MOUSE_SCALER_SLOW>;\n    };\n    #endif\n    #ifdef LAYER_MouseFast\n    fast {\n      layers = <LAYER_MouseFast>;\n      input-processors = <&zip_scroll_scaling_processor MOUSE_SCALER_FAST>;\n    };\n    #endif\n    #ifdef LAYER_MouseWarp\n    warp {\n      layers = <LAYER_MouseWarp>;\n      input-processors = <&zip_scroll_scaling_processor MOUSE_SCALER_WARP>;\n    };\n    #endif\n  };\n  // ==== MOUSE-KEY <section ends> =====\n#else\n  #define mkp none\n  #define mmv none\n  #define msc none\n  #define LCLK\n  #define MCLK\n  #define RCLK\n  #define MB1\n  #define MB2\n  #define MB3\n  #define MB4\n  #define MB5\n  #define MOVE_UP\n  #define MOVE_DOWN\n  #define MOVE_LEFT\n  #define MOVE_RIGHT\n  #define SCRL_UP\n  #define SCRL_DOWN\n  #define SCRL_LEFT\n  #define SCRL_RIGHT\n#endif\n/*HACK*//{\n",
  "custom_devicetree": "//////////////////////////////////////////////////////////////////////////////\n//\n// Per-key RGB indicators for layers & mods -- requires PR36 beta firmware:\n// override \"EXPERIMENTAL_RGB_LAYER\" to \"y\" in Advanced Configuration and\n// select \"community.pr36.per-key-rgb\" from the drop-down menu located at\n// Glove80 Layout Editor > Settings > Advanced Settings > Firmware Version\n//\n// - https://github.com/moergo-sc/zmk/pull/36\n// - https://github.com/moergo-sc/zmk/pull/30\n// - https://github.com/zmkfirmware/zmk/pull/2752\n// - https://dev.glove80.com/#/layout/user/c42ac32d-dc0d-4160-9ee3-fd0fc15f1725\n//\n//////////////////////////////////////////////////////////////////////////////\n\n#if __has_include(<dt-bindings/zmk/rgb_colors.h>)\n  //\n  // Color definitions with conflict guard to prevent\n  // accidental redefinition of common abbreviations.\n  //\n  #if defined(RED) || defined(RED_RGB) || \\\n      defined(COR) || defined(COR_RGB) || \\\n      defined(ORN) || defined(ORN_RGB) || \\\n      defined(GDN) || defined(GDN_RGB) || \\\n      defined(GOL) || defined(GOL_RGB) || \\\n      defined(YLW) || defined(YLW_RGB) || \\\n      defined(CHU) || defined(CHU_RGB) || \\\n      defined(GRN) || defined(GRN_RGB) || \\\n      defined(SPG) || defined(SPG_RGB) || \\\n      defined(CYN) || defined(CYN_RGB) || \\\n      defined(AZU) || defined(AZU_RGB) || \\\n      defined(TEA) || defined(TEA_RGB) || \\\n      defined(TUR) || defined(TUR_RGB) || \\\n      defined(BLU) || defined(BLU_RGB) || \\\n      defined(PUR) || defined(PUR_RGB) || \\\n      defined(MAJ) || defined(MAJ_RGB) || \\\n      defined(PNK) || defined(PNK_RGB) || \\\n      defined(WHT) || defined(WHT_RGB) || \\\n      defined(BLK) || defined(BLK_RGB) || \\\n      defined(___) || \\\n      defined(DUG) || defined(DUG_RGB) || \\\n      defined(LAC) || defined(LAC_RGB) || \\\n      defined(BSL) || defined(BNL) || defined(BCL) || \\\n      defined(SSL) || defined(SNL) || defined(SCL) || \\\n      defined(FST) || defined(WRP) || defined(SLO) || defined(FIN)\n  #error \"Naming conflict: 3-letter color abbreviation already defined!\"\n  #endif\n\n  //\n  // color definitions from QMK\n  // https://github.com/qmk/qmk_firmware/blob/master/quantum/color.h\n  //\n  #define RED_RGB 0xFF0000 // #FF0000 RED      => RED (red)\n  #define COR_RGB 0xFF7C4D // #FF7C4D CORAL    => COR (coral)\n  #define ORN_RGB 0xFF8000 // #FF8000 ORANGE   => ORN (ornj)\n  #define GDN_RGB 0xD9A521 // #D9A521 GOLDNROD => GDN (gold'nrod)\n  #define GOL_RGB 0xFFD900 // #FFD900 GOLD     => GOL (gold)\n  #define YLW_RGB 0xFFFF00 // #FFFF00 YELLOW   => YLW (yellow)\n  #define CHU_RGB 0x80FF00 // #80FF00 CHARTRSE => CHU (chartreuse)\n  #define GRN_RGB 0x00FF00 // #00FF00 GREEN    => GRN (green)\n  #define SPG_RGB 0x00FF80 // #00FF80 SPRINGRN => SPG (spring green)\n  #define CYN_RGB 0x00FFFF // #00FFFF CYAN     => CYN (sigh-an)\n  #define AZU_RGB 0x99F5FF // #99F5FF AZURE    => AZU (a-zur)\n  #define TEA_RGB 0x008080 // #008080 TEAL     => TEA (teel)\n  #define TUR_RGB 0x476E6A // #476E6A TURQUOIS => TUR (turquoise)\n  #define BLU_RGB 0x0000FF // #0000FF BLUE     => BLU (bloo)\n  #define PUR_RGB 0x7A00FF // #7A00FF PURPLE   => PUR (purp)\n  #define MAJ_RGB 0xFF00FF // #FF00FF MAGENTA  => MAJ (mah-jenta)\n  #define PNK_RGB 0xFF80BF // #FF80BF PINK     => PNK (pink)\n  #define WHT_RGB 0xFFFFFF // #FFFFFF WHITE    => WHT (white)\n  #define BLK_RGB 0x000000 // #000000 BLACK    => BLK (blak)\n\n  //\n  // color definitions from MoErgo\n  // https://github.com/moergo-sc/zmk/blob/aca523dfce9b6447ffd19d833b791d44f1f286de/app/src/rgb_underglow.c#L259-L265\n  //\n  #define DUG_RGB 0x00ff68 // #00ff68 DULL_GRN => DUG (dull green)\n  #define LAC_RGB 0x6b1fce // #6b1fce LILAC    => LAC (lilac)\n\n  //\n  // underglow for the colors above\n  //\n  #define RED &ug RED_RGB\n  #define COR &ug COR_RGB\n  #define ORN &ug ORN_RGB\n  #define GDN &ug GDN_RGB\n  #define GOL &ug GOL_RGB\n  #define YLW &ug YLW_RGB\n  #define CHU &ug CHU_RGB\n  #define GRN &ug GRN_RGB\n  #define SPG &ug SPG_RGB\n  #define CYN &ug CYN_RGB\n  #define AZU &ug AZU_RGB\n  #define TEA &ug TEA_RGB\n  #define TUR &ug TUR_RGB\n  #define BLU &ug BLU_RGB\n  #define PUR &ug PUR_RGB\n  #define MAJ &ug MAJ_RGB\n  #define PNK &ug PNK_RGB\n  #define WHT &ug WHT_RGB\n  #define BLK &ug BLK_RGB\n  #define ___ &ug BLK_RGB\n  #define DUG &ug DUG_RGB\n  #define LAC &ug LAC_RGB\n\n  //\n  // underglow for keyboard locks on the Base layer\n  //\n  #define BSL &ug_sl LAC_RGB ORN_RGB // ScrollLock COLOR_OFF COLOR_ON\n  #define BNL &ug_nl LAC_RGB ORN_RGB // NumLock    COLOR_OFF COLOR_ON\n  #define BCL &ug_cl BLU_RGB ORN_RGB // CapsLock   COLOR_OFF COLOR_ON\n\n  //\n  // underglow for keyboard locks on the System layer\n  //\n  #define SSL &ug_sl BLK_RGB ORN_RGB // ScrollLock COLOR_OFF COLOR_ON\n  #define SNL &ug_nl BLK_RGB ORN_RGB // NumLock    COLOR_OFF COLOR_ON\n  #define SCL &ug_cl BLK_RGB ORN_RGB // CapsLock   COLOR_OFF COLOR_ON\n\n  //\n  // colors for mouse speed scaling in Mouse layers\n  //\n  #define FST GOL\n  #define SLO PNK\n  #define FIN COR\n  #define WRP CHU\n\n  // ==== PER-KEY-RGB <section begins> ====\n  / {\n    underglow-layer {\n      compatible  = \"zmk,underglow-layer\";\n\n      /*\n      Template {\n        bindings = <\n          ___ ___ ___ ___ ___                                             ___ ___ ___ ___ ___\n          ___ ___ ___ ___ ___ ___                                     ___ ___ ___ ___ ___ ___\n          ___ ___ ___ ___ ___ ___                                     ___ ___ ___ ___ ___ ___\n          ___ ___ ___ ___ ___ ___                                     ___ ___ ___ ___ ___ ___\n          ___ ___ ___ ___ ___ ___     ___ ___ ___     ___ ___ ___     ___ ___ ___ ___ ___ ___\n          ___ ___ ___ ___ ___         ___ ___ ___     ___ ___ ___         ___ ___ ___ ___ ___\n        >;\n        layer-id = <LAYER_Template>;\n      };\n      */\n\n      BaseLayer {\n        bindings = <\n          ___ ___ ___ ___ ___                                             ___ ___ ___ ___ ___\n          ___ ___ ___ ___ ___ ___                                     ___ ___ ___ ___ ___ ___\n          ___ ___ ___ ___ ___ ___                                     ___ ___ ___ ___ ___ ___\n          ___ MAJ CYN GRN YLW ___                                     ___ YLW GRN CYN MAJ ___\n          RED ___ ___ ___ ___ ___     LAC ___ ___     ___ ___ LAC     ___ ___ ___ ___ ___ RED\n          ___ ___ ___ ___ LAC         BSL BNL BCL     BLU LAC LAC         LAC ___ ___ ___ ___\n        >;\n        layer-id = <0>;\n      };\n\n      #ifdef LAYER_LeftPinky\n      LeftPinky {\n        bindings = <\n          ___ MAJ ___ ___ ___                                             ___ ___ ___ ___ ___\n          ___ ___ ___ ___ ___ ___                                     ___ ___ ___ ___ ___ ___\n          ___ ___ ___ ___ ___ ___                                     ___ ___ ___ ___ ___ ___\n          ___ MAJ CYN GRN YLW ___                                     ___ YLW GRN CYN MAJ ___\n          RED ___ ___ ___ ___ ___     LAC ___ ___     ___ ___ LAC     ___ ___ ___ ___ ___ RED\n          ___ ___ ___ ___ LAC         BSL BNL BCL     BLU LAC LAC         LAC ___ ___ ___ ___\n        >;\n        layer-id = <LAYER_LeftPinky>;\n      };\n      #endif\n\n      #ifdef LAYER_LeftRingy\n      LeftRingy {\n        bindings = <\n          ___ ___ CYN ___ ___                                             ___ ___ ___ ___ ___\n          ___ ___ ___ ___ ___ ___                                     ___ ___ ___ ___ ___ ___\n          ___ ___ ___ ___ ___ ___                                     ___ ___ ___ ___ ___ ___\n          ___ MAJ CYN GRN YLW ___                                     ___ YLW GRN CYN MAJ ___\n          RED ___ ___ ___ ___ ___     LAC ___ ___     ___ ___ LAC     ___ ___ ___ ___ ___ RED\n          ___ ___ ___ ___ LAC         BSL BNL BCL     BLU LAC LAC         LAC ___ ___ ___ ___\n        >;\n        layer-id = <LAYER_LeftRingy>;\n      };\n      #endif\n\n      #ifdef LAYER_LeftMiddy\n      LeftMiddy {\n        bindings = <\n          ___ ___ ___ GRN ___                                             ___ ___ ___ ___ ___\n          ___ ___ ___ ___ ___ ___                                     ___ ___ ___ ___ ___ ___\n          ___ ___ ___ ___ ___ ___                                     ___ ___ ___ ___ ___ ___\n          ___ MAJ CYN GRN YLW ___                                     ___ YLW GRN CYN MAJ ___\n          RED ___ ___ ___ ___ ___     LAC ___ ___     ___ ___ LAC     ___ ___ ___ ___ ___ RED\n          ___ ___ ___ ___ LAC         BSL BNL BCL     BLU LAC LAC         LAC ___ ___ ___ ___\n        >;\n        layer-id = <LAYER_LeftMiddy>;\n      };\n      #endif\n\n      #ifdef LAYER_LeftIndex\n      LeftIndex {\n        bindings = <\n          ___ ___ ___ ___ YLW                                             ___ ___ ___ ___ ___\n          ___ ___ ___ ___ ___ ___                                     ___ ___ ___ ___ ___ ___\n          ___ ___ ___ ___ ___ ___                                     ___ ___ ___ ___ ___ ___\n          ___ MAJ CYN GRN YLW ___                                     ___ YLW GRN CYN MAJ ___\n          RED ___ ___ ___ ___ ___     LAC ___ ___     ___ ___ LAC     ___ ___ ___ ___ ___ RED\n          ___ ___ ___ ___ LAC         BSL BNL BCL     BLU LAC LAC         LAC ___ ___ ___ ___\n        >;\n        layer-id = <LAYER_LeftIndex>;\n      };\n      #endif\n\n      #ifdef LAYER_RightIndex\n      RightIndex {\n        bindings = <\n          ___ ___ ___ ___ ___                                             YLW ___ ___ ___ ___\n          ___ ___ ___ ___ ___ ___                                     ___ ___ ___ ___ ___ ___\n          ___ ___ ___ ___ ___ ___                                     ___ ___ ___ ___ ___ ___\n          ___ MAJ CYN GRN YLW ___                                     ___ YLW GRN CYN MAJ ___\n          RED ___ ___ ___ ___ ___     LAC ___ ___     ___ ___ LAC     ___ ___ ___ ___ ___ RED\n          ___ ___ ___ ___ LAC         BSL BNL BCL     BLU LAC LAC         LAC ___ ___ ___ ___\n        >;\n        layer-id = <LAYER_RightIndex>;\n      };\n      #endif\n\n      #ifdef LAYER_RightMiddy\n      RightMiddy {\n        bindings = <\n          ___ ___ ___ ___ ___                                             ___ GRN ___ ___ ___\n          ___ ___ ___ ___ ___ ___                                     ___ ___ ___ ___ ___ ___\n          ___ ___ ___ ___ ___ ___                                     ___ ___ ___ ___ ___ ___\n          ___ MAJ CYN GRN YLW ___                                     ___ YLW GRN CYN MAJ ___\n          RED ___ ___ ___ ___ ___     LAC ___ ___     ___ ___ LAC     ___ ___ ___ ___ ___ RED\n          ___ ___ ___ ___ LAC         BSL BNL BCL     BLU LAC LAC         LAC ___ ___ ___ ___\n        >;\n        layer-id = <LAYER_RightMiddy>;\n      };\n      #endif\n\n      #ifdef LAYER_RightRingy\n      RightRingy {\n        bindings = <\n          ___ ___ ___ ___ ___                                             ___ ___ CYN ___ ___\n          ___ ___ ___ ___ ___ ___                                     ___ ___ ___ ___ ___ ___\n          ___ ___ ___ ___ ___ ___                                     ___ ___ ___ ___ ___ ___\n          ___ MAJ CYN GRN YLW ___                                     ___ YLW GRN CYN MAJ ___\n          RED ___ ___ ___ ___ ___     LAC ___ ___     ___ ___ LAC     ___ ___ ___ ___ ___ RED\n          ___ ___ ___ ___ LAC         BSL BNL BCL     BLU LAC LAC         LAC ___ ___ ___ ___\n        >;\n        layer-id = <LAYER_RightRingy>;\n      };\n      #endif\n\n      #ifdef LAYER_RightPinky\n      RightPinky {\n        bindings = <\n          ___ ___ ___ ___ ___                                             ___ ___ ___ MAJ ___\n          ___ ___ ___ ___ ___ ___                                     ___ ___ ___ ___ ___ ___\n          ___ ___ ___ ___ ___ ___                                     ___ ___ ___ ___ ___ ___\n          ___ MAJ CYN GRN YLW ___                                     ___ YLW GRN CYN MAJ ___\n          RED ___ ___ ___ ___ ___     LAC ___ ___     ___ ___ LAC     ___ ___ ___ ___ ___ RED\n          ___ ___ ___ ___ LAC         BSL BNL BCL     BLU LAC LAC         LAC ___ ___ ___ ___\n        >;\n        layer-id = <LAYER_RightPinky>;\n      };\n      #endif\n\n      #ifdef LAYER_Cursor\n      Cursor {\n        bindings = <\n          ___ ___ ___ ___ ___                                             ___ ___ ___ ___ ___\n          ___ COR COR COR COR ___                                     ___ ___ ___ ___ ___ ___\n          ___ COR COR COR COR GDN                                     GDN COR PUR PUR COR ___\n          YLW MAJ CYN GRN YLW GDN                                     GDN AZU AZU AZU AZU YLW\n          PNK SPG SPG SPG PUR GDN     COR COR ___     SPG SPG SPG     GDN AZU AZU AZU AZU PNK\n          PNK PUR PUR PUR PUR         RED ___ ___     SPG SPG SPG         PUR PUR PUR PUR PNK\n        >;\n        layer-id = <LAYER_Cursor>;\n      };\n      #endif\n\n      #ifdef LAYER_Number\n      Number {\n        bindings = <\n          ___ ___ ___ ___ ___                                             GDN GDN GDN GDN GDN\n          ___ COR COR COR COR ___                                     TEA SPG SPG SPG SPG SPG\n          GDN COR COR COR COR GOL                                     TEA GOL GOL GOL SPG SPG\n          YLW MAJ CYN GRN YLW TEA                                     TEA GOL GOL GOL SPG SPG\n          TEA SPG SPG SPG PUR GDN     ___ ___ ___     SPG SPG SPG     TEA GOL GOL GOL SPG SPG\n          ___ PUR PUR PUR PUR         ___ RED ___     SPG SPG GOL         SPG SPG SPG SPG SPG\n        >;\n        layer-id = <LAYER_Number>;\n      };\n      #endif\n\n      #ifdef LAYER_Function\n      Function {\n        bindings = <\n          ___ ___ ___ ___ ___                                             ___ ___ ___ ___ ___\n          ___ COR COR COR COR ___                                     AZU AZU AZU AZU AZU AZU\n          ___ COR COR COR COR GDN                                     GDN PNK PNK PNK PNK PNK\n          YLW MAJ CYN GRN YLW GDN                                     GDN PNK PNK PNK PNK PNK\n          ___ SPG SPG SPG PUR GDN     RED ___ ___     BLU AZU AZU     GDN PNK PNK PNK PNK PNK\n          ___ PUR PUR PUR PUR         ___ ___ ___     BLU AZU AZU         CHU CHU CHU CHU CHU\n        >;\n        layer-id = <LAYER_Function>;\n      };\n      #endif\n\n      #ifdef LAYER_Emoji\n      Emoji {\n        bindings = <\n          ___ ___ ___ ___ ___                                             CYN ___ ___ CYN ___\n          ___ ___ ___ ___ ___ ___                                     ___ CYN ___ ___ CYN ___\n          ___ ___ ___ ___ ___ ___                                     ___ ___ ___ ___ ___ ___\n          ___ GDN PNK SPG AZU ___                                     CYN ___ ___ ___ ___ CYN\n          ___ ___ ___ ___ ___ ___     ___ ___ ___     ___ ___ ___     ___ CYN ___ ___ CYN ___\n          ___ ___ ___ ___ RED         YLW ___ ___     ___ ___ ___         ___ CYN CYN ___ ___\n        >;\n        layer-id = <LAYER_Emoji>;\n      };\n      #endif\n\n      #ifdef LAYER_Symbol\n      Symbol {\n        bindings = <\n          ___ ___ ___ ___ ___                                             ___ ___ ___ ___ ___\n          PNK AZU AZU AZU CHU CHU                                     ___ ___ ___ ___ ___ ___\n          AZU PUR AZU AZU CHU GDN                                     PNK YLW GRN CYN MAJ ___\n          GDN GDN SPG BLU GDN GDN                                     PNK COR COR COR COR ___\n          PUR SPG SPG SPG SPG GDN     PUR GDN GDN     ___ ___ ___     PNK COR COR COR COR ___\n          COR BLU PNK PNK BLU         GDN GDN GDN     ___ ___ RED         ___ ___ ___ ___ ___\n        >;\n        layer-id = <LAYER_Symbol>;\n      };\n      #endif\n\n      #ifdef LAYER_Mouse\n      Mouse {\n        bindings = <\n          ___ ___ ___ ___ ___                                             ___ ___ ___ ___ ___\n          ___ ___ ___ ___ ___ ___                                     ___ ___ ___ ___ ___ ___\n          ___ ___ SPG AZU SPG ___                                     ___ YLW GRN CYN MAJ PUR\n          ___ SPG AZU AZU AZU SPG                                     SPG FST SLO FIN WRP GDN\n\t  ___ SPG BLU BLU BLU SPG     GDN PUR GDN     BLU BLU BLU     SPG SPG AZU SPG GDN GDN\n\t  ___ WRP FIN SLO FST         GDN GDN GDN     ___ RED ___         AZU AZU AZU GDN GDN\n\t>;\n        layer-id = <LAYER_Mouse>;\n      };\n      #endif\n\n      #ifdef LAYER_MouseFast\n      MouseFast {\n        bindings = <\n          ___ ___ ___ ___ ___                                             ___ ___ ___ ___ ___\n          ___ ___ ___ ___ ___ ___                                     ___ ___ ___ ___ ___ ___\n          ___ ___ SPG FST SPG ___                                     ___ YLW GRN CYN MAJ PUR\n          ___ SPG FST FST FST SPG                                     SPG FST FST FST FST GDN\n          ___ SPG BLU BLU BLU SPG     GDN PUR GDN     BLU BLU BLU     SPG SPG FST SPG GDN GDN\n          ___ FST FST FST FST         GDN GDN GDN     ___ RED ___         FST FST FST GDN GDN\n        >;\n        layer-id = <LAYER_MouseFast>;\n      };\n      #endif\n\n      #ifdef LAYER_MouseWarp\n      MouseWarp {\n        bindings = <\n          ___ ___ ___ ___ ___                                             ___ ___ ___ ___ ___\n          ___ ___ ___ ___ ___ ___                                     ___ ___ ___ ___ ___ ___\n          ___ ___ SPG WRP SPG ___                                     ___ YLW GRN CYN MAJ PUR\n          ___ SPG WRP WRP WRP SPG                                     SPG WRP WRP WRP WRP GDN\n          ___ SPG BLU BLU BLU SPG     GDN PUR GDN     BLU BLU BLU     SPG SPG WRP SPG GDN GDN\n          ___ WRP WRP WRP WRP         GDN GDN GDN     ___ RED ___         WRP WRP WRP GDN GDN\n        >;\n        layer-id = <LAYER_MouseWarp>;\n      };\n      #endif\n\n      #ifdef LAYER_MouseSlow\n      MouseSlow {\n        bindings = <\n          ___ ___ ___ ___ ___                                             ___ ___ ___ ___ ___\n          ___ ___ ___ ___ ___ ___                                     ___ ___ ___ ___ ___ ___\n          ___ ___ SPG SLO SPG ___                                     ___ YLW GRN CYN MAJ PUR\n          ___ SPG SLO SLO SLO SPG                                     SPG SLO SLO SLO SLO GDN\n          ___ SPG BLU BLU BLU SPG     GDN PUR GDN     BLU BLU BLU     SPG SPG SLO SPG GDN GDN\n          ___ SLO SLO SLO SLO         GDN GDN GDN     ___ RED ___         SLO SLO SLO GDN GDN\n        >;\n        layer-id = <LAYER_MouseSlow>;\n      };\n      #endif\n\n      #ifdef LAYER_MouseFine\n      MouseFine {\n        bindings = <\n          ___ ___ ___ ___ ___                                             ___ ___ ___ ___ ___\n          ___ ___ ___ ___ ___ ___                                     ___ ___ ___ ___ ___ ___\n          ___ ___ SPG FIN SPG ___                                     ___ YLW GRN CYN MAJ PUR\n          ___ SPG FIN FIN FIN SPG                                     SPG FIN FIN FIN FIN GDN\n          ___ SPG BLU BLU BLU SPG     GDN PUR GDN     BLU BLU BLU     SPG SPG FIN SPG GDN GDN\n          ___ FIN FIN FIN FIN         GDN GDN GDN     ___ RED ___         FIN FIN FIN GDN GDN\n        >;\n        layer-id = <LAYER_MouseFine>;\n      };\n      #endif\n\n      #ifdef LAYER_System\n      System {\n        bindings = <\n          ___ ___ ___ ___ ___                                             ___ ___ ___ ___ ___\n          ___ ___ ___ ___ ___ ___                                     ___ ___ ___ ___ ___ ___\n          ___ ___ ___ BLU BLU COR                                     COR YLW GRN CYN MAJ ___\n          ___ PNK AZU SPG GDN COR                                     COR GDN SPG AZU PNK PUR\n          ___ PNK AZU SPG GDN COR     PUR PUR PUR     ___ ___ RED     COR GDN SPG AZU PNK PUR\n          ___ ___ ___ ___ WHT         SSL SNL SCL     ___ BLU BLU         WHT SSL SNL SCL PUR\n        >;\n        layer-id = <LAYER_System>;\n      };\n      #endif\n\n      #ifdef LAYER_World\n      World {\n        bindings = <\n          ___ ___ ___ ___ ___                                             ___ ___ ___ ___ ___\n          ___ ___ ___ ___ ___ ___                                     ___ ___ ___ ___ ___ ___\n          ___ SPG AZU AZU AZU ___                                     ___ ___ CYN CYN ___ ___\n          AZU AZU AZU AZU AZU ___                                     ___ YLW GRN GRN YLW ___\n          AZU AZU SPG SPG AZU ___     ___ ___ ___     ___ ___ ___     ___ ___ ___ ___ ___ ___\n          SPG SPG SPG SPG SPG         ___ ___ ___     ___ ___ ___         RED ___ ___ ___ ___\n        >;\n        layer-id = <LAYER_World>;\n      };\n      #endif\n\n      #ifdef LAYER_Typing\n      Typing {\n        bindings = <\n          ___ ___ ___ ___ ___                                             ___ ___ ___ ___ ___\n          ___ ___ ___ ___ ___ ___                                     ___ ___ ___ ___ ___ ___\n          ___ ___ ___ ___ ___ ___                                     ___ ___ ___ ___ ___ ___\n          ___ ___ ___ ___ ___ ___                                     ___ ___ ___ ___ ___ ___\n          ___ ___ ___ ___ ___ ___     ___ ___ ___     ___ ___ ___     RED ___ ___ ___ ___ ___\n          ___ ___ ___ ___ ___         ___ ___ ___     ___ ___ ___         RED ___ ___ ___ ___\n        >;\n        layer-id = <LAYER_Typing>;\n      };\n      #endif\n\n      #ifdef LAYER_Gaming\n      Gaming {\n        bindings = <\n          ORN ___ ___ ___ COR                                             TEA TEA TEA TEA TEA\n          ___ GDN GDN GDN GDN GDN                                     TEA TEA TEA TEA TEA TEA\n          ___ GDN GDN GDN GDN GDN                                     ___ ___ ___ ___ ___ TEA\n          ___ COR ___ AZU ___ ___                                     ___ ___ ___ ___ ___ ___\n          ___ YLW AZU AZU AZU RED     YLW CYN ___     ORN AZU COR     ___ ___ ___ ___ ___ ___\n          ___ GRN ___ ___ RED         COR GRN COR     AZU AZU AZU         ___ ___ ___ ___ ___\n        >;\n        layer-id = <LAYER_Gaming>;\n      };\n      #endif\n\n      #ifdef LAYER_Lower\n      Lower {\n        bindings = <\n          ___ ___ ___ ___ ___                                             PNK SPG SPG SPG ___\n          ___ ___ ___ ___ ___ ___                                     PNK GOL GOL GOL SPG SPG\n          ___ ___ ___ ___ ___ ___                                     SPG GOL GOL GOL SPG SPG\n          CYN ___ ___ ___ ___ ___                                     SPG GOL GOL GOL PNK SPG\n          RED ___ ___ ___ ___ ___     RED ___ ___     ___ ___ RED     GOL GOL SPG SPG PNK RED\n          ___ ___ ___ ___ RED         RED RED ___     ___ RED RED         RED ___ ___ ___ ___\n        >;\n        layer-id = <LAYER_Lower>;\n      };\n      #endif\n\n      #ifdef LAYER_Factory\n      Factory {\n        bindings = <\n          ___ ___ ___ ___ ___                                             ___ ___ ___ ___ ___\n          ___ ___ ___ ___ ___ ___                                     ___ ___ ___ ___ ___ ___\n          ___ ___ ___ ___ ___ ___                                     ___ ___ ___ ___ ___ ___\n          ___ ___ ___ ___ ___ ___                                     ___ ___ ___ ___ ___ ___\n          ___ ___ ___ ___ ___ ___     ___ ___ RED     ___ ___ ___     ___ ___ ___ ___ ___ ___\n          RED ___ ___ ___ ___         ___ ___ ___     ___ ___ ___         ___ ___ ___ ___ ___\n        >;\n        layer-id = <LAYER_Factory>;\n      };\n      #endif\n\n    };\n  };\n  // ==== PER-KEY-RGB <section ends> =====\n\n  #undef RED\n  #undef RED_RGB\n  #undef COR\n  #undef COR_RGB\n  #undef ORN\n  #undef ORN_RGB\n  #undef GDN\n  #undef GDN_RGB\n  #undef GOL\n  #undef GOL_RGB\n  #undef YLW\n  #undef YLW_RGB\n  #undef CHU\n  #undef CHU_RGB\n  #undef GRN\n  #undef GRN_RGB\n  #undef SPG\n  #undef SPG_RGB\n  #undef CYN\n  #undef CYN_RGB\n  #undef AZU\n  #undef AZU_RGB\n  #undef TEA\n  #undef TEA_RGB\n  #undef TUR\n  #undef TUR_RGB\n  #undef BLU\n  #undef BLU_RGB\n  #undef PUR\n  #undef PUR_RGB\n  #undef MAJ\n  #undef MAJ_RGB\n  #undef PNK\n  #undef PNK_RGB\n  #undef WHT\n  #undef WHT_RGB\n  #undef BLK\n  #undef BLK_RGB\n  #undef ___\n  #undef DUG\n  #undef DUG_RGB\n  #undef LAC\n  #undef LAC_RGB\n\n  #undef BSL\n  #undef BNL\n  #undef BCL\n\n  #undef SSL\n  #undef SNL\n  #undef SCL\n\n  #undef FST\n  #undef WRP\n  #undef SLO\n  #undef FIN\n#endif\n",
  "config_parameters": [],
  "layout_parameters": {},
  "layer_names": [
    "Enthium",
    "Engrammer",
    "Engram",
    "Dvorak",
    "Colemak",
    "QWERTY",
    "ColemakDH",
    "Typing",
    "LeftPinky",
    "LeftRingy",
    "LeftMiddy",
    "LeftIndex",
    "RightPinky",
    "RightRingy",
    "RightMiddy",
    "RightIndex",
    "Cursor",
    "Number",
    "Function",
    "Emoji",
    "World",
    "Symbol",
    "System",
    "Mouse",
    "MouseFine",
    "MouseSlow",
    "MouseFast",
    "MouseWarp",
    "Gaming",
    "Factory",
    "Lower",
    "Magic"
  ],
  "layers": [
    [
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N1",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N2",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N3",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N4",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N5",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N6",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N7",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N8",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N9",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N0",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Z",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Y",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "U",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "O",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SEMI",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Q",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "L",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "D",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "P",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "X",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "W",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftPinky (C, LAYER_Enthium)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftRingy (I, LAYER_Enthium)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftMiddy (E, LAYER_Enthium)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftIndex (A, LAYER_Enthium)",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "COMMA",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "K",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightIndex (H, LAYER_Enthium)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightMiddy (T, LAYER_Enthium)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightRingy (N, LAYER_Enthium)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightPinky (S, LAYER_Enthium)",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mo LAYER_Lower",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SQT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "MINUS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "EQUAL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DOT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "FSLH",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Function ESC",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&parang_left",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&parang_right",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _HOME",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _END",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_System ENTER",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "J",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "M",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "G",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "B",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "V",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mo LAYER_Lower",
            "params": []
          }
        ]
      },
      {
        "value": "&magic",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "GRAVE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LBKT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RBKT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Emoji BSLH",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Cursor SPACE",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Number TAB",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Typing INSERT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Typing DELETE",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Mouse BACKSPACE",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&space LAYER_Symbol R",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_World PAGE_UP",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&msc MOUSE_SCROLL_UP",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&msc MOUSE_SCROLL_DOWN",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PG_DN",
            "params": []
          }
        ]
      },
      {
        "value": "&magic",
        "params": []
      }
    ],
    [
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N1",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N2",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N3",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N4",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N5",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N6",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N7",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N8",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N9",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N0",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "B",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Y",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "O",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "U",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SQT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SEMI",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "L",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "D",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "W",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "V",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Z",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "EQUAL",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftPinky (C, LAYER_Engrammer)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftRingy (I, LAYER_Engrammer)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftMiddy (E, LAYER_Engrammer)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftIndex (A, LAYER_Engrammer)",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "COMMA",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DOT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightIndex (H, LAYER_Engrammer)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightMiddy (T, LAYER_Engrammer)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightRingy (S, LAYER_Engrammer)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightPinky (N, LAYER_Engrammer)",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Q",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mo LAYER_Lower",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "G",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "X",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "J",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "K",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "MINUS",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Function ESC",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&parang_left",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&parang_right",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _HOME",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _END",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_System ENTER",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "FSLH",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "R",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "M",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "P",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mo LAYER_Lower",
            "params": []
          }
        ]
      },
      {
        "value": "&magic",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "GRAVE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LBKT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RBKT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Emoji BSLH",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Cursor BACKSPACE",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Number DELETE",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Typing INSERT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mo LAYER_Typing",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Mouse TAB",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&space LAYER_Symbol SPACE",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_World PAGE_UP",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&msc MOUSE_SCROLL_UP",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&msc MOUSE_SCROLL_DOWN",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PG_DN",
            "params": []
          }
        ]
      },
      {
        "value": "&magic",
        "params": []
      }
    ],
    [
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&engram_N1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&engram_N2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&engram_N3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&engram_N4",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&engram_N5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&engram_N6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&engram_N7",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&engram_N8",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&engram_N9",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&engram_N0",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "B",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Y",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "O",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "U",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&engram_SQT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&engram_DQT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "L",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "D",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "W",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "V",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Z",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&engram_HASH",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftPinky (C, LAYER_Engram)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftRingy (I, LAYER_Engram)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftMiddy (E, LAYER_Engram)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftIndex (A, LAYER_Engram)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&engram_COMMA",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&engram_DOT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightIndex (H, LAYER_Engram)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightMiddy (T, LAYER_Engram)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightRingy (S, LAYER_Engram)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightPinky (N, LAYER_Engram)",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Q",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mo LAYER_Lower",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "G",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "X",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "J",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "K",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "MINUS",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Function ESC",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&parang_left",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&parang_right",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _HOME",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _END",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_System ENTER",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&engram_QMARK",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "R",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "M",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "P",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mo LAYER_Lower",
            "params": []
          }
        ]
      },
      {
        "value": "&magic",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&engram_FSLH",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LBKT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RBKT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb_engram_AT LAYER_Emoji 0",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Cursor BACKSPACE",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Number DELETE",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Typing INSERT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mo LAYER_Typing",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Mouse TAB",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&space LAYER_Symbol SPACE",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_World PAGE_UP",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&msc MOUSE_SCROLL_UP",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&msc MOUSE_SCROLL_DOWN",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PG_DN",
            "params": []
          }
        ]
      },
      {
        "value": "&magic",
        "params": []
      }
    ],
    [
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N1",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N2",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N3",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N4",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N5",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N6",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N7",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N8",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N9",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N0",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SQT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "COMMA",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DOT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "P",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Y",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "G",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "R",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "L",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SLASH",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "EQUAL",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftPinky (A, LAYER_Dvorak)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftRingy (O, LAYER_Dvorak)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftMiddy (E, LAYER_Dvorak)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftIndex (U, LAYER_Dvorak)",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "I",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "D",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightIndex (H, LAYER_Dvorak)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightMiddy (T, LAYER_Dvorak)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightRingy (N, LAYER_Dvorak)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightPinky (S, LAYER_Dvorak)",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "MINUS",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mo LAYER_Lower",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SEMI",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Q",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "J",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "K",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "X",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Function ESC",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&parang_left",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&parang_right",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _HOME",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _END",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_System ENTER",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "B",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "M",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "W",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "V",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Z",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mo LAYER_Lower",
            "params": []
          }
        ]
      },
      {
        "value": "&magic",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "GRAVE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LBKT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RBKT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Emoji BSLH",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Cursor BACKSPACE",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Number DELETE",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Typing INSERT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mo LAYER_Typing",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Mouse TAB",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&space LAYER_Symbol SPACE",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_World PAGE_UP",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&msc MOUSE_SCROLL_UP",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&msc MOUSE_SCROLL_DOWN",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PG_DN",
            "params": []
          }
        ]
      },
      {
        "value": "&magic",
        "params": []
      }
    ],
    [
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N1",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N2",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N3",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N4",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N5",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N6",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N7",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N8",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N9",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N0",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Q",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "W",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "P",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "G",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "J",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "L",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "U",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Y",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SEMI",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "MINUS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "EQUAL",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftPinky (A, LAYER_Colemak)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftRingy (R, LAYER_Colemak)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftMiddy (S, LAYER_Colemak)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftIndex (T, LAYER_Colemak)",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "D",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "H",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightIndex (N, LAYER_Colemak)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightMiddy (E, LAYER_Colemak)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightRingy (I, LAYER_Colemak)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightPinky (O, LAYER_Colemak)",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SQT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mo LAYER_Lower",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Z",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "X",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "V",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "B",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Function ESC",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&parang_left",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&parang_right",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _HOME",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _END",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_System ENTER",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "K",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "M",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "COMMA",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DOT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "FSLH",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mo LAYER_Lower",
            "params": []
          }
        ]
      },
      {
        "value": "&magic",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "GRAVE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LBKT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RBKT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Emoji BSLH",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Cursor BACKSPACE",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Number DELETE",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&crumb LAYER_Typing INSERT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mo LAYER_Typing",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Mouse TAB",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&space LAYER_Symbol SPACE",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_World PAGE_UP",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&msc MOUSE_SCROLL_UP",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&msc MOUSE_SCROLL_DOWN",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PG_DN",
            "params": []
          }
        ]
      },
      {
        "value": "&magic",
        "params": []
      }
    ],
    [
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N1",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N2",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N3",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N4",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N5",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N6",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N7",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N8",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N9",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N0",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Q",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "W",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "E",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "R",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "T",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Y",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "U",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "I",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "O",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "P",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "MINUS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "EQUAL",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftPinky (A, LAYER_QWERTY)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftRingy (S, LAYER_QWERTY)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftMiddy (D, LAYER_QWERTY)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftIndex (F, LAYER_QWERTY)",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "G",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "H",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightIndex (J, LAYER_QWERTY)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightMiddy (K, LAYER_QWERTY)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightRingy (L, LAYER_QWERTY)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightPinky (SEMI, LAYER_QWERTY)",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SQT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mo LAYER_Lower",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Z",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "X",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "V",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "B",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Function ESC",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&parang_left",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&parang_right",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _HOME",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _END",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_System ENTER",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "M",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "COMMA",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DOT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "FSLH",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mo LAYER_Lower",
            "params": []
          }
        ]
      },
      {
        "value": "&magic",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "GRAVE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LBKT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RBKT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Emoji BSLH",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Cursor BACKSPACE",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Number DELETE",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Typing INSERT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mo LAYER_Typing",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Mouse TAB",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&space LAYER_Symbol SPACE",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_World PAGE_UP",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&msc MOUSE_SCROLL_UP",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&msc MOUSE_SCROLL_DOWN",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PG_DN",
            "params": []
          }
        ]
      },
      {
        "value": "&magic",
        "params": []
      }
    ],
    [
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N1",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N2",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N3",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N4",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N5",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N6",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N7",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N8",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N9",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N0",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Q",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "W",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "P",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "B",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "J",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "L",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "U",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Y",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SEMI",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "MINUS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "EQUAL",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftPinky (A, LAYER_ColemakDH)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftRingy (R, LAYER_ColemakDH)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftMiddy (S, LAYER_ColemakDH)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftIndex (T, LAYER_ColemakDH)",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "G",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "M",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightIndex (N, LAYER_ColemakDH)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightMiddy (E, LAYER_ColemakDH)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightRingy (I, LAYER_ColemakDH)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightPinky (O, LAYER_ColemakDH)",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SQT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mo LAYER_Lower",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Z",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "X",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "D",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "V",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Function ESC",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&parang_left",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&parang_right",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _HOME",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _END",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_System ENTER",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "K",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "H",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "COMMA",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DOT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "FSLH",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mo LAYER_Lower",
            "params": []
          }
        ]
      },
      {
        "value": "&magic",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "GRAVE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LBKT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RBKT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Emoji BSLH",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Cursor BACKSPACE",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Number DELETE",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Typing INSERT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mo LAYER_Typing",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_Mouse TAB",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&space LAYER_Symbol SPACE",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&thumb LAYER_World PAGE_UP",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&msc MOUSE_SCROLL_UP",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&msc MOUSE_SCROLL_DOWN",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PG_DN",
            "params": []
          }
        ]
      },
      {
        "value": "&magic",
        "params": []
      }
    ],
    [
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_PINKY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_RINGY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_MIDDY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_INDEX_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_INDEX_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_MIDDY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_RINGY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_PINKY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp KEY_LH_T1",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp KEY_RH_T1",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp KEY_LH_C2R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp KEY_LH_T4",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp KEY_LH_T5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp KEY_LH_T6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp KEY_RH_T6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp KEY_RH_T5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp KEY_RH_T4",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp KEY_RH_C2R6",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      }
    ],
    [
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C6R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C5R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C4R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C3R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C2R1",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C6R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C5R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C4R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C3R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C2R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C1R2",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C6R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C5R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C4R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C3R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C2R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C1R3",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C6R4",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftPinkyRingy",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftPinkyMiddy",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftPinkyIndex",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C1R4",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_INDEX_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_MIDDY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_RINGY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_PINKY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C5R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C4R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C3R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C2R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C1R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mo LAY_LH_T1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_T2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_T3",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C5R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C4R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C3R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mo LAY_LH_C2R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mo LAY_LH_T4",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mo LAY_LH_T5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mo LAY_LH_T6",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      }
    ],
    [
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ringy_tap KEY_LH_C6R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ringy_tap KEY_LH_C5R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ringy_tap KEY_LH_C4R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ringy_tap KEY_LH_C3R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ringy_tap KEY_LH_C2R1",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ringy_tap KEY_LH_C6R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ringy_tap KEY_LH_C5R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ringy_tap KEY_LH_C4R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ringy_tap KEY_LH_C3R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ringy_tap KEY_LH_C2R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ringy_tap KEY_LH_C1R2",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ringy_tap KEY_LH_C6R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ringy_tap KEY_LH_C5R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ringy_tap KEY_LH_C4R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ringy_tap KEY_LH_C3R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ringy_tap KEY_LH_C2R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ringy_tap KEY_LH_C1R3",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ringy_tap KEY_LH_C6R4",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftRingyPinky",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftRingyMiddy",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftRingyIndex",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ringy_tap KEY_LH_C1R4",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_INDEX_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_MIDDY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_RINGY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_PINKY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ringy_tap KEY_LH_C5R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ringy_tap KEY_LH_C4R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ringy_tap KEY_LH_C3R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ringy_tap KEY_LH_C2R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ringy_tap KEY_LH_C1R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mo LAY_LH_T1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ringy_tap KEY_LH_T2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ringy_tap KEY_LH_T3",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ringy_tap KEY_LH_C5R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ringy_tap KEY_LH_C4R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ringy_tap KEY_LH_C3R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mo LAY_LH_C2R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mo LAY_LH_T4",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mo LAY_LH_T5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mo LAY_LH_T6",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      }
    ],
    [
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C6R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C5R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C4R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C3R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C2R1",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C6R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C5R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C4R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C3R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C2R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C1R2",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C6R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C5R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C4R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C3R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C2R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C1R3",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C6R4",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftMiddyPinky",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftMiddyRingy",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftMiddyIndex",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C1R4",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_INDEX_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_MIDDY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_RINGY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_PINKY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C5R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C4R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C3R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C2R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C1R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mo LAY_LH_T1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_T2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_T3",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C5R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C4R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C3R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mo LAY_LH_C2R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mo LAY_LH_T4",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mo LAY_LH_T5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mo LAY_LH_T6",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      }
    ],
    [
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C6R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C5R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C4R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C3R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C2R1",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C6R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C5R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C4R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C3R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C2R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C1R2",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C6R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C5R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C4R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C3R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C2R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C1R3",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C6R4",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftIndexPinky",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftIndexRingy",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftIndexMiddy",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C1R4",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_INDEX_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_MIDDY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_RINGY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_PINKY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C5R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C4R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C3R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C2R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C1R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mo LAY_LH_T1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_T2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_T3",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C5R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C4R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C3R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mo LAY_LH_C2R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mo LAY_LH_T4",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mo LAY_LH_T5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mo LAY_LH_T6",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      }
    ],
    [
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C2R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C3R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C4R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C5R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C6R1",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C1R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C2R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C3R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C4R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C5R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C6R2",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C1R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C2R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C3R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C4R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C5R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C6R3",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_PINKY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_RINGY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_MIDDY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_INDEX_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C1R4",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightPinkyIndex",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightPinkyMiddy",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightPinkyRingy",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C6R4",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_T3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_T2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mo LAY_RH_T1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C1R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C2R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C3R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C4R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C5R5",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mo LAY_RH_T6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mo LAY_RH_T5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mo LAY_RH_T4",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mo LAY_RH_C2R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C3R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C4R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C5R6",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      }
    ],
    [
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ringy_tap KEY_RH_C2R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ringy_tap KEY_RH_C3R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ringy_tap KEY_RH_C4R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ringy_tap KEY_RH_C5R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ringy_tap KEY_RH_C6R1",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ringy_tap KEY_RH_C1R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ringy_tap KEY_RH_C2R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ringy_tap KEY_RH_C3R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ringy_tap KEY_RH_C4R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ringy_tap KEY_RH_C5R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ringy_tap KEY_RH_C6R2",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ringy_tap KEY_RH_C1R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ringy_tap KEY_RH_C2R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ringy_tap KEY_RH_C3R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ringy_tap KEY_RH_C4R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ringy_tap KEY_RH_C5R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ringy_tap KEY_RH_C6R3",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_PINKY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_RINGY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_MIDDY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_INDEX_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ringy_tap KEY_RH_C1R4",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightRingyIndex",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightRingyMiddy",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightRingyPinky",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ringy_tap KEY_RH_C6R4",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ringy_tap KEY_RH_T3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ringy_tap KEY_RH_T2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mo LAY_RH_T1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ringy_tap KEY_RH_C1R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ringy_tap KEY_RH_C2R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ringy_tap KEY_RH_C3R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ringy_tap KEY_RH_C4R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ringy_tap KEY_RH_C5R5",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mo LAY_RH_T6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mo LAY_RH_T5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mo LAY_RH_T4",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mo LAY_RH_C2R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ringy_tap KEY_RH_C3R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ringy_tap KEY_RH_C4R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ringy_tap KEY_RH_C5R6",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      }
    ],
    [
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C2R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C3R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C4R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C5R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C6R1",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C1R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C2R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C3R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C4R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C5R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C6R2",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C1R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C2R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C3R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C4R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C5R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C6R3",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_PINKY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_RINGY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_MIDDY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_INDEX_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C1R4",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightMiddyIndex",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightMiddyRingy",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightMiddyPinky",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C6R4",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_T3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_T2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mo LAY_RH_T1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C1R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C2R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C3R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C4R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C5R5",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mo LAY_RH_T6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mo LAY_RH_T5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mo LAY_RH_T4",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mo LAY_RH_C2R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C3R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C4R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C5R6",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      }
    ],
    [
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C2R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C3R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C4R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C5R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C6R1",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C1R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C2R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C3R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C4R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C5R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C6R2",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C1R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C2R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C3R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C4R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C5R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C6R3",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_PINKY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_RINGY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_MIDDY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_INDEX_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C1R4",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightIndexMiddy",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightIndexRingy",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightIndexPinky",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C6R4",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_T3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_T2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mo LAY_RH_T1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C1R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C2R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C3R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C4R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C5R5",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mo LAY_RH_T6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mo LAY_RH_T5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mo LAY_RH_T4",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mo LAY_RH_C2R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C3R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C4R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C5R6",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      }
    ],
    [
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "ESC",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "INS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LS",
            "params": [
              {
                "value": "TAB",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DEL",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RET",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SPACE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "TAB",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "BSPC",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _CUT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _CUT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LS",
            "params": [
              {
                "value": "TAB",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _UNDO",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _REDO",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "TAB",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&sk",
        "params": [
          {
            "value": "LSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_PINKY_MOD",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_RINGY_MOD",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_MIDDY_MOD",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_INDEX_MOD",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _COPY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _COPY",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LEFT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "UP",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DOWN",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RIGHT",
            "params": []
          }
        ]
      },
      {
        "value": "&sk",
        "params": [
          {
            "value": "LSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _C(L)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&select_all",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&select_line",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&select_word",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _FIND",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _PASTE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LS",
            "params": [
              {
                "value": "TAB",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "TAB",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&select_none",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&extend_line",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&extend_word",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _PASTE",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _HOME",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PG_UP",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PG_DN",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _END",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _C(L)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _C(K)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _UNDO",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _REDO",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _FIND_PREV",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _FIND_NEXT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&tog LAYER_Cursor",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&select_all",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&select_line",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&select_word",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _FIND",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _FIND_PREV",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _FIND_NEXT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _C(H)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _C(K)",
            "params": []
          }
        ]
      }
    ],
    [
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "A",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "B",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "D",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "E",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "ESC",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "INS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LS",
            "params": [
              {
                "value": "TAB",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DEL",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PIPE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "HASH",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DLLR",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "CARET",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "TILDE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "EXCL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "E",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RET",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SPACE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "TAB",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "BSPC",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N0",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LS",
            "params": [
              {
                "value": "G",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N7",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N8",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N9",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "COLON",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PRCNT",
            "params": []
          }
        ]
      },
      {
        "value": "&sk",
        "params": [
          {
            "value": "LSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_PINKY_MOD",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_RINGY_MOD",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_MIDDY_MOD",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_INDEX_MOD",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "X",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "K",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N4",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N5",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N6",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "MINUS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PLUS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "UNDER",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&select_all",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&select_line",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&select_word",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _FIND",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "GT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "COMMA",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "J",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N1",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N2",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N3",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "FSLH",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "STAR",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _UNDO",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _REDO",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _FIND_PREV",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _FIND_NEXT",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&tog LAYER_Number",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "EQUAL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DOT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N0",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LPAR",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LBKT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RBKT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RPAR",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "AT",
            "params": []
          }
        ]
      }
    ],
    [
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "ESC",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "INS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LS",
            "params": [
              {
                "value": "TAB",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DEL",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_MEDIA_HOME",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_PLAY",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_PREV",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_NEXT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_STOP",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_EJECT",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RET",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SPACE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "TAB",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "BSPC",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "K_CALC",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "K_CALC",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F7",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F8",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F9",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F10",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F13",
            "params": []
          }
        ]
      },
      {
        "value": "&sk",
        "params": [
          {
            "value": "LSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_PINKY_MOD",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_RINGY_MOD",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_MIDDY_MOD",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_INDEX_MOD",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "K_WWW",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "K_WWW",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F4",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F5",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F6",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F11",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F14",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&select_all",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&select_line",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&select_word",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _FIND",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _FILES",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&tog LAYER_Function",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_PP",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_PREV",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_NEXT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _FILES",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F1",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F2",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F3",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F12",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F15",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _UNDO",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _REDO",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _FIND_PREV",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _FIND_NEXT",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_MUTE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_VOL_DN",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_VOL_UP",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_BRI_MAX",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_BRI_UP",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_BRI_DN",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_BRI_MIN",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_BRI_AUTO",
            "params": []
          }
        ]
      }
    ],
    [
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_cloudy",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_mostly_cloudy",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_partly_cloudy",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_mostly_sunny",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_sunny",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_new_moon",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_moon_crescent",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_moon_quarter",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_moon_gibbous",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_full_moon",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_rainbow ",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_light_skin_tone",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_medium_light_skin_tone",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_medium_skin_tone",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_medium_dark_skin_tone",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_dark_skin_tone",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_theme_party",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_theme_love",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_theme_nature",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_theme_strength",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_theme_effort",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_theme_science",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_left_arrow",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_bald",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_red_hair",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_curly_hair",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_white_hair",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_right_arrow",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_face_laugh",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_face_smile",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_face_eyes",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_face_joke",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_face_fear",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_face_surprise",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_male_sign",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_hair_style_preset",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_skin_tone_preset",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_gender_sign_preset",
            "params": []
          }
        ]
      },
      {
        "value": "&sk",
        "params": [
          {
            "value": "LSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_female_sign",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_gesture_attention",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_gesture_approval",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_gesture_gratitude",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_gesture_anxiety",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_gesture_despair",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_gesture_curious",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_old_man",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_man",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_boy",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_girl",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_woman",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_old_woman",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_cityscape",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_cityscape_dusk",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_cityscape_night",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_theme_magic",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_theme_space",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_theme_awesome",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_person_tipping_hand",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_person_gesturing_ok",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_person_bowing",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_person_raising_hand",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_person_gesturing_no",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_theme_sigh",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_theme_game",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_theme_trend",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_baby",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_baby_bottle",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&tog LAYER_Emoji",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_zwj",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_sunrise",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_sunrise_mountains",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_gesture_hands",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_gesture_point",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_gesture_thumbs",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_check",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_100",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_warning",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_cross",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&emoji_question",
            "params": []
          }
        ]
      }
    ],
    [
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_y_base",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_u_base",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_o_base",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_sign_angle",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&sk",
        "params": [
          {
            "value": "LALT",
            "params": []
          }
        ]
      },
      {
        "value": "&sk",
        "params": [
          {
            "value": "RALT",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_consonants_base",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_i_base",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_e_base",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_a_base",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_sign_exclaim",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&sk",
        "params": [
          {
            "value": "LSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "&sk",
        "params": [
          {
            "value": "LCTRL",
            "params": []
          }
        ]
      },
      {
        "value": "&sk",
        "params": [
          {
            "value": "RCTRL",
            "params": []
          }
        ]
      },
      {
        "value": "&sk",
        "params": [
          {
            "value": "RSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_currency_base",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_quotes_left_base",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_sign_dash",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_sign_landmark",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_sign_ordinal",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_sign_question",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_sign_base",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&world_quotes_right_base",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&tog LAYER_World",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      }
    ],
    [
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "GRAVE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LBRC",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LBKT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RBKT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RBRC",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DOT",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "EXCL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "COMMA",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LPAR",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RPAR",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SEMI",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "QMARK",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "GRAVE",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&sk RIGHT_INDEX_MOD",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&sk RIGHT_MIDDY_MOD",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&sk RIGHT_RINGY_MOD",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&sk RIGHT_PINKY_MOD",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "HASH",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "CARET",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "EQUAL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "UNDER",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DLLR",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "STAR",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DQT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "BSPC",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "TAB",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SPACE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RET",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "TILDE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PIPE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "MINUS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "GT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "FSLH",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "BSLH",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DOT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "STAR",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SQT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DEL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LS",
            "params": [
              {
                "value": "TAB",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "INS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "ESC",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&dot_dot",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "AMPS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SQT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DQT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PLUS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PRCNT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "COLON",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "AT",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&tog LAYER_Symbol",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      }
    ],
    [
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PSCRN",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PAUSE_BREAK",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_TOG",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_TOG",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&sk RIGHT_INDEX_MOD",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&sk RIGHT_MIDDY_MOD",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&sk RIGHT_RINGY_MOD",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&sk RIGHT_PINKY_MOD",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_SPI",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_SAI",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_HUI",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_BRI",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_EFF",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_EFF",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_BRI",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_HUI",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_SAI",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_SPI",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _LOCK",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_SPD",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_SAD",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_HUD",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_BRD",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_EFR",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _LOCK",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _SLEEP",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _POWER",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&tog LAYER_System",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_EFR",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_BRD",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_HUD",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_SAD",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_SPD",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _SLEEP",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&linux_magic_sysrq",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SLCK",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_NUM",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "CAPS",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PSCRN",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PAUSE_BREAK",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&linux_magic_sysrq",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SLCK",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_NUM",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "CAPS",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _POWER",
            "params": []
          }
        ]
      }
    ],
    [
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&msc MOUSE_SCROLL_LEFT",
            "params": []
          }
        ]
      },
      {
        "value": "&mmv",
        "params": [
          {
            "value": "MOVE_UP",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&msc MOUSE_SCROLL_RIGHT",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&sk RIGHT_INDEX_MOD",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&sk RIGHT_MIDDY_MOD",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&sk RIGHT_RINGY_MOD",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&sk RIGHT_PINKY_MOD",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "K_APP",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&msc MOUSE_SCROLL_UP",
            "params": []
          }
        ]
      },
      {
        "value": "&mmv",
        "params": [
          {
            "value": "MOVE_LEFT",
            "params": []
          }
        ]
      },
      {
        "value": "&mmv",
        "params": [
          {
            "value": "MOVE_DOWN",
            "params": []
          }
        ]
      },
      {
        "value": "&mmv",
        "params": [
          {
            "value": "MOVE_RIGHT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&msc MOUSE_SCROLL_UP",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&msc MOUSE_SCROLL_UP",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mo LAYER_MouseFast",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mo LAYER_MouseSlow",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mo LAYER_MouseFine",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mo LAYER_MouseWarp",
            "params": []
          }
        ]
      },
      {
        "value": "&mkp",
        "params": [
          {
            "value": "MB4",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&msc MOUSE_SCROLL_DOWN",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _CUT",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _COPY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _PASTE",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&msc MOUSE_SCROLL_DOWN",
            "params": []
          }
        ]
      },
      {
        "value": "&mkp",
        "params": [
          {
            "value": "MCLK",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "K_APP",
            "params": []
          }
        ]
      },
      {
        "value": "&mkp",
        "params": [
          {
            "value": "MB5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _PASTE",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _COPY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp _PASTE",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&msc MOUSE_SCROLL_DOWN",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&msc MOUSE_SCROLL_LEFT",
            "params": []
          }
        ]
      },
      {
        "value": "&mmv",
        "params": [
          {
            "value": "MOVE_UP",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&msc MOUSE_SCROLL_RIGHT",
            "params": []
          }
        ]
      },
      {
        "value": "&mkp",
        "params": [
          {
            "value": "LCLK",
            "params": []
          }
        ]
      },
      {
        "value": "&mkp",
        "params": [
          {
            "value": "MB5",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mo LAYER_MouseWarp",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mo LAYER_MouseFine",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mo LAYER_MouseSlow",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&mo LAYER_MouseFast",
            "params": []
          }
        ]
      },
      {
        "value": "&mkp",
        "params": [
          {
            "value": "LCLK",
            "params": []
          }
        ]
      },
      {
        "value": "&mkp",
        "params": [
          {
            "value": "RCLK",
            "params": []
          }
        ]
      },
      {
        "value": "&mkp",
        "params": [
          {
            "value": "MB4",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&tog LAYER_Mouse",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&mmv",
        "params": [
          {
            "value": "MOVE_LEFT",
            "params": []
          }
        ]
      },
      {
        "value": "&mmv",
        "params": [
          {
            "value": "MOVE_DOWN",
            "params": []
          }
        ]
      },
      {
        "value": "&mmv",
        "params": [
          {
            "value": "MOVE_RIGHT",
            "params": []
          }
        ]
      },
      {
        "value": "&mkp",
        "params": [
          {
            "value": "RCLK",
            "params": []
          }
        ]
      },
      {
        "value": "&mkp",
        "params": [
          {
            "value": "MCLK",
            "params": []
          }
        ]
      }
    ],
    [
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      }
    ],
    [
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      }
    ],
    [
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      }
    ],
    [
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      }
    ],
    [
      {
        "value": "&kp",
        "params": [
          {
            "value": "ESC",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "P",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "O",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "BSPC",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F1",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F2",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F3",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F4",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F5",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "M",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N6",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N7",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N8",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N9",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N0",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F6",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F7",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F8",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F9",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F10",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F11",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "I",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N1",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N2",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N3",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N4",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N5",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Y",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "U",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "I",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "O",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "P",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F12",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "T",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "TAB",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Q",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "W",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "E",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "R",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "H",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "J",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "K",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "L",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SEMI",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SQT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "G",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "A",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "S",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "D",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LALT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "V",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "ESC",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "UP",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RET",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "M",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "COMMA",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DOT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "FSLH",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "BSLH",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "B",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LCTRL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Z",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "X",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SPACE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LCTRL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RET",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LEFT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DOWN",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RIGHT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "MINUS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LBKT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RBKT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "EQUAL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "GRAVE",
            "params": []
          }
        ]
      }
    ],
    [
      {
        "value": "&kp",
        "params": [
          {
            "value": "F1",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F2",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F3",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F4",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F5",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F6",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F7",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F8",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F9",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F10",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "EQUAL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N1",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N2",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N3",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N4",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N5",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N6",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N7",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N8",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N9",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N0",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "MINUS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "TAB",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Q",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "W",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "E",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "R",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "T",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Y",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "U",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "I",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "O",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "P",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "BSLH",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "ESC",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "A",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "S",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "D",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "G",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "H",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "J",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "K",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "L",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SEMI",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SQT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "GRAVE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Z",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "X",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "V",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "B",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LCTRL",
            "params": []
          }
        ]
      },
      {
        "value": "&lower",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LGUI",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RCTRL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "M",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "COMMA",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DOT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "FSLH",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PG_UP",
            "params": []
          }
        ]
      },
      {
        "value": "&magic",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "HOME",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "END",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LEFT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RIGHT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "BSPC",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DEL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LALT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RALT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RET",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SPACE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "UP",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DOWN",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LBKT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RBKT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PG_DN",
            "params": []
          }
        ]
      }
    ],
    [
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_NUM",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_SLASH",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_MULTIPLY",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_MINUS",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_CLEAR",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_N7",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_N8",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_N9",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_MINUS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "FSLH",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_LPAR",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_N4",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_N5",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_N6",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_PLUS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_MULTIPLY",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RALT",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_RPAR",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_N1",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_N2",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_N3",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_ENTER",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_EQUAL",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&tog LAYER_Function",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&tog LAYER_System",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_N0",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_N0",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_COMMA",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_DOT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_ENTER",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&tog LAYER_Emoji",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&tog LAYER_Cursor",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&tog LAYER_Number",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&tog LAYER_Mouse",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&tog LAYER_Symbol",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&tog LAYER_World",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      }
    ],
    [
      {
        "value": "&bt",
        "params": [
          {
            "value": "BT_CLR",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&bt",
        "params": [
          {
            "value": "BT_CLR_ALL",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&to 0",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&to 1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&to 2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&to 3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&to 4",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&to 5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&to 6",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_SPI",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_SAI",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_HUI",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_BRI",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_TOG",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&bootloader",
        "params": []
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_SPD",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_SAD",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_HUD",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_BRD",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_EFF",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&bootloader",
        "params": []
      },
      {
        "value": "&reset",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&bt_2",
        "params": []
      },
      {
        "value": "&bt_3",
        "params": []
      },
      {
        "value": "&tog",
        "params": [
          {
            "value": 29,
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&reset",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&bt_0",
        "params": []
      },
      {
        "value": "&bt_1",
        "params": []
      },
      {
        "value": "&out",
        "params": [
          {
            "value": "OUT_USB",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      }
    ]
  ],
  "macros": [],
  "inputListeners": [],
  "holdTaps": [],
  "combos": []
}